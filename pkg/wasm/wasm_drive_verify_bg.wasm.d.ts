/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_verifyactionsignerstotalpowerresult_free: (a: number, b: number) => void;
export const verifyactionsignerstotalpowerresult_root_hash: (a: number) => [number, number];
export const verifyactionsignerstotalpowerresult_action_status: (a: number) => number;
export const verifyactionsignerstotalpowerresult_total_power: (a: number) => bigint;
export const verifyActionSignersTotalPower: (a: any, b: any, c: number, d: number, e: any, f: any, g: number, h: number) => [number, number, number];
export const __wbg_verifytokenbalancesforidentityidresult_free: (a: number, b: number) => void;
export const verifytokenbalancesforidentityidresult_root_hash: (a: number) => [number, number];
export const verifytokenbalancesforidentityidresult_balances: (a: number) => any;
export const verifyTokenBalancesForIdentityIdVec: (a: any, b: any, c: any, d: number, e: number) => [number, number, number];
export const verifyTokenBalancesForIdentityIdMap: (a: any, b: any, c: any, d: number, e: number) => [number, number, number];
export const __wbg_verifytokendirectsellingpricesresult_free: (a: number, b: number) => void;
export const verifytokendirectsellingpricesresult_root_hash: (a: number) => [number, number];
export const verifytokendirectsellingpricesresult_prices: (a: number) => any;
export const verifyTokenDirectSellingPricesVec: (a: any, b: any, c: number, d: number) => [number, number, number];
export const verifyTokenDirectSellingPricesMap: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifytokeninfosforidentityidresult_free: (a: number, b: number) => void;
export const verifytokeninfosforidentityidresult_root_hash: (a: number) => [number, number];
export const verifytokeninfosforidentityidresult_token_infos: (a: number) => any;
export const verifyTokenInfosForIdentityIdVec: (a: any, b: any, c: any, d: number, e: number) => [number, number, number];
export const verifyTokenInfosForIdentityIdMap: (a: any, b: any, c: any, d: number, e: number) => [number, number, number];
export const __wbg_verifytokeninfosforidentityidsresult_free: (a: number, b: number) => void;
export const verifytokeninfosforidentityidsresult_root_hash: (a: number) => [number, number];
export const verifytokeninfosforidentityidsresult_token_infos: (a: number) => any;
export const verifyTokenInfosForIdentityIdsVec: (a: any, b: any, c: number, d: any, e: number) => [number, number, number];
export const verifyTokenInfosForIdentityIdsMap: (a: any, b: any, c: number, d: any, e: number) => [number, number, number];
export const __wbg_verifytokenstatusesresult_free: (a: number, b: number) => void;
export const verifytokenstatusesresult_root_hash: (a: number) => [number, number];
export const verifytokenstatusesresult_statuses: (a: number) => any;
export const verifyTokenStatusesVec: (a: any, b: any, c: number, d: number) => [number, number, number];
export const verifyTokenStatusesMap: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifytokenstatusresult_free: (a: number, b: number) => void;
export const verifytokenstatusresult_root_hash: (a: number) => [number, number];
export const verifytokenstatusresult_status: (a: number) => any;
export const verifyTokenStatus: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifyidentitiescontractkeysresult_free: (a: number, b: number) => void;
export const verifyidentitiescontractkeysresult_root_hash: (a: number) => [number, number];
export const verifyidentitiescontractkeysresult_keys: (a: number) => any;
export const verifyIdentitiesContractKeys: (a: any, b: any, c: any, d: number, e: number, f: any, g: number, h: number) => [number, number, number];
export const __wbg_verifyidentitycontractnonceresult_free: (a: number, b: number) => void;
export const verifyidentitycontractnonceresult_root_hash: (a: number) => [number, number];
export const verifyidentitycontractnonceresult_nonce: (a: number) => [number, bigint];
export const verifyIdentityContractNonce: (a: any, b: any, c: any, d: number, e: number) => [number, number, number];
export const __wbg_verifystatetransitionwasexecutedwithproofresult_free: (a: number, b: number) => void;
export const verifystatetransitionwasexecutedwithproofresult_root_hash: (a: number) => [number, number];
export const verifystatetransitionwasexecutedwithproofresult_proof_result: (a: number) => any;
export const verifyStateTransitionWasExecutedWithProof: (a: any, b: bigint, c: bigint, d: number, e: any, f: any, g: number) => [number, number, number];
export const __wbg_verifytokeninfoforidentityidresult_free: (a: number, b: number) => void;
export const verifytokeninfoforidentityidresult_root_hash: (a: number) => [number, number];
export const verifytokeninfoforidentityidresult_token_info: (a: number) => any;
export const verifyTokenInfoForIdentityId: (a: any, b: any, c: any, d: number, e: number) => [number, number, number];
export const __wbg_verifydocumentproofresult_free: (a: number, b: number) => void;
export const verifydocumentproofresult_root_hash: (a: number) => [number, number];
export const verifydocumentproofresult_documents: (a: number) => any;
export const verifyDocumentProof: (a: any, b: any, c: number, d: number, e: any, f: any, g: number, h: number, i: number, j: number, k: number, l: bigint, m: number) => [number, number, number];
export const __wbg_tokentransitionpathqueryresult_free: (a: number, b: number) => void;
export const tokentransitionpathqueryresult_path_query: (a: number) => any;
export const tokenTransitionIntoPathQuery: (a: any, b: any, c: any, d: number) => [number, number, number];
export const tokenBalanceForIdentityIdQuery: (a: any, b: any) => [number, number, number];
export const tokenBalancesForIdentityIdsQuery: (a: any, b: any) => [number, number, number];
export const tokenInfoForIdentityIdQuery: (a: any, b: any) => [number, number, number];
export const tokenDirectPurchasePriceQuery: (a: any) => [number, number, number];
export const groupActiveAndClosedActionSingleSignerQuery: (a: any, b: number, c: any, d: any) => [number, number, number];
export const verifyTokenPerpetualDistributionLastPaidTime: (a: any, b: any, c: any, d: any, e: number, f: number) => [number, number, number];
export const verifyVotePollVoteStateProof: (a: any, b: any, c: number, d: number, e: number, f: number, g: any, h: number, i: number, j: number, k: number) => [number, number, number];
export const __wbg_verifyvotepollvotesproofresult_free: (a: number, b: number) => void;
export const verifyvotepollvotesproofresult_root_hash: (a: number) => [number, number];
export const verifyvotepollvotesproofresult_votes: (a: number) => any;
export const verifyVotePollVotesProof: (a: any, b: any, c: number, d: number, e: number, f: number, g: any, h: any, i: number, j: number, k: number, l: number) => [number, number, number];
export const __wbg_verifytokenperpetualdistributionlastpaidtimeresult_free: (a: number, b: number) => void;
export const __wbg_verifyvotepollvotestateproofresult_free: (a: number, b: number) => void;
export const verifyvotepollvotestateproofresult_result: (a: number) => any;
export const verifyvotepollvotestateproofresult_root_hash: (a: number) => [number, number];
export const verifytokenperpetualdistributionlastpaidtimeresult_last_paid_time: (a: number) => any;
export const verifytokenperpetualdistributionlastpaidtimeresult_root_hash: (a: number) => [number, number];
export const __wbg_verifyactionsignersresult_free: (a: number, b: number) => void;
export const verifyactionsignersresult_root_hash: (a: number) => [number, number];
export const verifyactionsignersresult_signers: (a: number) => any;
export const verifyActionSignersVec: (a: any, b: any, c: number, d: number, e: any, f: number, g: number) => [number, number, number];
export const verifyActionSignersMap: (a: any, b: any, c: number, d: number, e: any, f: number, g: number) => [number, number, number];
export const __wbg_verifyupgradestateresult_free: (a: number, b: number) => void;
export const verifyupgradestateresult_root_hash: (a: number) => [number, number];
export const verifyupgradestateresult_upgrade_state: (a: number) => any;
export const verifyUpgradeState: (a: any, b: number) => [number, number, number];
export const __wbg_verifytokenbalanceforidentityidresult_free: (a: number, b: number) => void;
export const verifytokenbalanceforidentityidresult_root_hash: (a: number) => [number, number];
export const verifytokenbalanceforidentityidresult_balance: (a: number) => [number, bigint];
export const verifyTokenBalanceForIdentityId: (a: any, b: any, c: any, d: number, e: number) => [number, number, number];
export const __wbg_verifycontractresult_free: (a: number, b: number) => void;
export const verifycontractresult_root_hash: (a: number) => [number, number];
export const verifycontractresult_contract: (a: number) => any;
export const verifyContract: (a: any, b: number, c: number, d: number, e: any, f: number) => [number, number, number];
export const __wbg_verifycontracthistoryresult_free: (a: number, b: number) => void;
export const verifycontracthistoryresult_root_hash: (a: number) => [number, number];
export const verifycontracthistoryresult_contract_history: (a: number) => any;
export const verifyContractHistory: (a: any, b: any, c: bigint, d: number, e: number, f: number) => [number, number, number];
export const __wbg_verifyactioninfosincontractresult_free: (a: number, b: number) => void;
export const verifyactioninfosincontractresult_root_hash: (a: number) => [number, number];
export const verifyactioninfosincontractresult_actions: (a: number) => any;
export const verifyActionInfosInContractVec: (a: any, b: any, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => [number, number, number];
export const verifyActionInfosInContractMap: (a: any, b: any, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => [number, number, number];
export const __wbg_verifygroupinfosincontractresult_free: (a: number, b: number) => void;
export const verifygroupinfosincontractresult_root_hash: (a: number) => [number, number];
export const verifygroupinfosincontractresult_groups: (a: number) => any;
export const verifyGroupInfosInContractVec: (a: any, b: any, c: number, d: number, e: number, f: number, g: number) => [number, number, number];
export const verifyGroupInfosInContractMap: (a: any, b: any, c: number, d: number, e: number, f: number, g: number) => [number, number, number];
export const __wbg_verifyidentitybalancesforidentityidsresult_free: (a: number, b: number) => void;
export const verifyidentitybalancesforidentityidsresult_root_hash: (a: number) => [number, number];
export const verifyidentitybalancesforidentityidsresult_balances: (a: number) => any;
export const verifyIdentityBalancesForIdentityIdsVec: (a: any, b: number, c: any, d: number) => [number, number, number];
export const verifyIdentityBalancesForIdentityIdsMap: (a: any, b: number, c: any, d: number) => [number, number, number];
export const __wbg_verifyidentitykeysbyidentityidresult_free: (a: number, b: number) => void;
export const verifyidentitykeysbyidentityidresult_root_hash: (a: number) => [number, number];
export const verifyidentitykeysbyidentityidresult_identity: (a: number) => any;
export const verifyIdentityKeysByIdentityId: (a: any, b: any, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => [number, number, number];
export const __wbg_verifyupgradevotestatusresult_free: (a: number, b: number) => void;
export const verifyupgradevotestatusresult_root_hash: (a: number) => [number, number];
export const verifyupgradevotestatusresult_vote_status: (a: number) => any;
export const verifyUpgradeVoteStatus: (a: any, b: number, c: number, d: number) => [number, number, number];
export const __wbg_verifytokenbalancesforidentityidsresult_free: (a: number, b: number) => void;
export const verifytokenbalancesforidentityidsresult_root_hash: (a: number) => [number, number];
export const verifytokenbalancesforidentityidsresult_balances: (a: number) => any;
export const verifyTokenBalancesForIdentityIdsVec: (a: any, b: any, c: number, d: any, e: number) => [number, number, number];
export const verifyTokenBalancesForIdentityIdsMap: (a: any, b: any, c: number, d: any, e: number) => [number, number, number];
export const __wbg_verifytokenpreprogrammeddistributionsresult_free: (a: number, b: number) => void;
export const verifytokenpreprogrammeddistributionsresult_root_hash: (a: number) => [number, number];
export const verifytokenpreprogrammeddistributionsresult_distributions: (a: number) => any;
export const verifyTokenPreProgrammedDistributionsVec: (a: any, b: any, c: number, d: bigint, e: number, f: number, g: number, h: number) => [number, number, number];
export const verifyTokenPreProgrammedDistributionsMap: (a: any, b: any, c: number, d: bigint, e: number, f: number, g: number, h: number) => [number, number, number];
export const __wbg_verifytokencontractinforesult_free: (a: number, b: number) => void;
export const verifytokencontractinforesult_root_hash: (a: number) => [number, number];
export const verifytokencontractinforesult_contract_info: (a: number) => any;
export const verifyTokenContractInfo: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifyspecializedbalanceresult_free: (a: number, b: number) => void;
export const verifyspecializedbalanceresult_root_hash: (a: number) => [number, number];
export const verifyspecializedbalanceresult_balance: (a: number) => [number, bigint];
export const verifySpecializedBalance: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifyfullidentitiesbypublickeyhashesresult_free: (a: number, b: number) => void;
export const verifyfullidentitiesbypublickeyhashesresult_root_hash: (a: number) => [number, number];
export const verifyfullidentitiesbypublickeyhashesresult_identities: (a: number) => any;
export const verifyFullIdentitiesByPublicKeyHashesVec: (a: any, b: any, c: number) => [number, number, number];
export const verifyFullIdentitiesByPublicKeyHashesMap: (a: any, b: any, c: number) => [number, number, number];
export const __wbg_verifyidentityidsbyuniquepublickeyhashesresult_free: (a: number, b: number) => void;
export const verifyidentityidsbyuniquepublickeyhashesresult_root_hash: (a: number) => [number, number];
export const verifyidentityidsbyuniquepublickeyhashesresult_identity_ids: (a: number) => any;
export const verifyIdentityIdsByUniquePublicKeyHashesVec: (a: any, b: number, c: any, d: number) => [number, number, number];
export const verifyIdentityIdsByUniquePublicKeyHashesMap: (a: any, b: number, c: any, d: number) => [number, number, number];
export const __wbg_verifyfullidentitybyidentityidresult_free: (a: number, b: number) => void;
export const verifyfullidentitybyidentityidresult_root_hash: (a: number) => [number, number];
export const verifyfullidentitybyidentityidresult_identity: (a: number) => any;
export const verifyFullIdentityByIdentityId: (a: any, b: number, c: any, d: number) => [number, number, number];
export const __wbg_verifyidentitynonceresult_free: (a: number, b: number) => void;
export const verifyidentitynonceresult_root_hash: (a: number) => [number, number];
export const verifyidentitynonceresult_nonce: (a: number) => [number, bigint];
export const verifyIdentityNonce: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifyepochproposersresult_free: (a: number, b: number) => void;
export const verifyepochproposersresult_root_hash: (a: number) => [number, number];
export const verifyepochproposersresult_proposers: (a: number) => any;
export const verifyEpochProposersByRangeVec: (a: any, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const verifyEpochProposersByRangeMap: (a: any, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const verifyEpochProposersByIdsVec: (a: any, b: number, c: any, d: number) => [number, number, number];
export const verifyEpochProposersByIdsMap: (a: any, b: number, c: any, d: number) => [number, number, number];
export const __wbg_verifyidentitybalanceforidentityidresult_free: (a: number, b: number) => void;
export const verifyidentitybalanceforidentityidresult_root_hash: (a: number) => [number, number];
export const verifyidentitybalanceforidentityidresult_balance: (a: number) => [number, bigint];
export const verifyIdentityBalanceForIdentityId: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifyidentityidbyuniquepublickeyhashresult_free: (a: number, b: number) => void;
export const verifyidentityidbyuniquepublickeyhashresult_root_hash: (a: number) => [number, number];
export const verifyidentityidbyuniquepublickeyhashresult_identity_id: (a: number) => [number, number];
export const verifyIdentityIdByUniquePublicKeyHash: (a: any, b: number, c: any, d: number) => [number, number, number];
export const __wbg_singledocumentdrivequerywasm_free: (a: number, b: number) => void;
export const singledocumentdrivequerywasm_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => [number, number, number];
export const singledocumentdrivequerywasm_contractId: (a: number) => [number, number];
export const singledocumentdrivequerywasm_documentTypeName: (a: number) => [number, number];
export const singledocumentdrivequerywasm_documentTypeKeepsHistory: (a: number) => number;
export const singledocumentdrivequerywasm_documentId: (a: number) => [number, number];
export const singledocumentdrivequerywasm_blockTimeMs: (a: number) => [number, number];
export const singledocumentdrivequerywasm_contestedStatus: (a: number) => number;
export const __wbg_singledocumentproofresult_free: (a: number, b: number) => void;
export const singledocumentproofresult_rootHash: (a: number) => [number, number];
export const singledocumentproofresult_documentSerialized: (a: number) => [number, number];
export const singledocumentproofresult_hasDocument: (a: number) => number;
export const verifySingleDocumentProofKeepSerialized: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const createSingleDocumentQuery: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => [number, number, number];
export const createSingleDocumentQueryMaybeContested: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => [number, number, number];
export const createSingleDocumentQueryContested: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => [number, number, number];
export const main: () => void;
export const __wbg_verifydocumentproofkeepserializedresult_free: (a: number, b: number) => void;
export const verifydocumentproofkeepserializedresult_root_hash: (a: number) => [number, number];
export const verifydocumentproofkeepserializedresult_serialized_documents: (a: number) => any;
export const verifyDocumentProofKeepSerialized: (a: any, b: any, c: number, d: number, e: any, f: any, g: number, h: number, i: number, j: number, k: number, l: bigint, m: number) => [number, number, number];
export const __wbg_verifyidentitybalanceandrevisionforidentityidresult_free: (a: number, b: number) => void;
export const verifyidentitybalanceandrevisionforidentityidresult_root_hash: (a: number) => [number, number];
export const verifyidentitybalanceandrevisionforidentityidresult_balance: (a: number) => [number, bigint];
export const verifyidentitybalanceandrevisionforidentityidresult_revision: (a: number) => [number, bigint];
export const verifyIdentityBalanceAndRevisionForIdentityId: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifyidentityidbynonuniquepublickeyhashresult_free: (a: number, b: number) => void;
export const verifyidentityidbynonuniquepublickeyhashresult_root_hash: (a: number) => [number, number];
export const verifyidentityidbynonuniquepublickeyhashresult_identity_id: (a: number) => [number, number];
export const verifyIdentityIdByNonUniquePublicKeyHash: (a: any, b: number, c: any, d: number, e: number) => [number, number, number];
export const __wbg_verifyelementsresult_free: (a: number, b: number) => void;
export const verifyelementsresult_root_hash: (a: number) => [number, number];
export const verifyelementsresult_elements: (a: number) => any;
export const verifyElements: (a: any, b: any, c: any, d: number) => [number, number, number];
export const __wbg_verifyepochinfosresult_free: (a: number, b: number) => void;
export const verifyepochinfosresult_root_hash: (a: number) => [number, number];
export const verifyepochinfosresult_epoch_infos: (a: number) => any;
export const verifyEpochInfos: (a: any, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const __wbg_verifytokentotalsupplyandaggregatedidentitybalanceresult_free: (a: number, b: number) => void;
export const verifytokentotalsupplyandaggregatedidentitybalanceresult_root_hash: (a: number) => [number, number];
export const verifytokentotalsupplyandaggregatedidentitybalanceresult_total_supply_and_balance: (a: number) => any;
export const verifyTokenTotalSupplyAndAggregatedIdentityBalance: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifyidentityvotesgivenproofresult_free: (a: number, b: number) => void;
export const verifyidentityvotesgivenproofresult_root_hash: (a: number) => [number, number];
export const verifyidentityvotesgivenproofresult_votes: (a: number) => any;
export const verifyIdentityVotesGivenProofVec: (a: any, b: any, c: any, d: number) => [number, number, number];
export const verifyIdentityVotesGivenProofMap: (a: any, b: any, c: any, d: number) => [number, number, number];
export const __wbg_verifymasternodevoteresult_free: (a: number, b: number) => void;
export const verifymasternodevoteresult_root_hash: (a: number) => [number, number];
export const verifymasternodevoteresult_vote: (a: number) => [number, number];
export const verifyMasternodeVote: (a: any, b: any, c: any, d: any, e: number, f: number) => [number, number, number];
export const __wbg_verifystartatdocumentinproofresult_free: (a: number, b: number) => void;
export const verifystartatdocumentinproofresult_root_hash: (a: number) => [number, number];
export const verifystartatdocumentinproofresult_document: (a: number) => any;
export const verifyStartAtDocumentInProof: (a: any, b: any, c: number, d: number, e: any, f: any, g: number, h: number, i: number, j: number, k: number, l: bigint, m: number, n: any, o: number) => [number, number, number];
export const __wbg_verifyidentityrevisionforidentityidresult_free: (a: number, b: number) => void;
export const verifyidentityrevisionforidentityidresult_root_hash: (a: number) => [number, number];
export const verifyidentityrevisionforidentityidresult_revision: (a: number) => [number, bigint];
export const verifyIdentityRevisionForIdentityId: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifytokendirectsellingpriceresult_free: (a: number, b: number) => void;
export const verifytokendirectsellingpriceresult_root_hash: (a: number) => [number, number];
export const verifytokendirectsellingpriceresult_price: (a: number) => any;
export const verifyTokenDirectSellingPrice: (a: any, b: any, c: number, d: number) => [number, number, number];
export const __wbg_verifycontestsproofresult_free: (a: number, b: number) => void;
export const verifycontestsproofresult_root_hash: (a: number) => [number, number];
export const verifycontestsproofresult_contests: (a: number) => any;
export const verifyContestsProof: (a: any, b: any, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => [number, number, number];
export const __wbg_verifygroupinforesult_free: (a: number, b: number) => void;
export const verifygroupinforesult_root_hash: (a: number) => [number, number];
export const verifygroupinforesult_group: (a: number) => any;
export const verifyGroupInfo: (a: any, b: any, c: number, d: number, e: number) => [number, number, number];
export const __wbg_verifyfullidentitybynonuniquepublickeyhashresult_free: (a: number, b: number) => void;
export const verifyfullidentitybynonuniquepublickeyhashresult_root_hash: (a: number) => [number, number];
export const verifyfullidentitybynonuniquepublickeyhashresult_identity: (a: number) => any;
export const verifyFullIdentityByNonUniquePublicKeyHash: (a: number, b: any, c: any, d: number, e: number) => [number, number, number];
export const __wbg_verifyfullidentitybyuniquepublickeyhashresult_free: (a: number, b: number) => void;
export const verifyfullidentitybyuniquepublickeyhashresult_root_hash: (a: number) => [number, number];
export const verifyfullidentitybyuniquepublickeyhashresult_identity: (a: number) => any;
export const verifyFullIdentityByUniquePublicKeyHash: (a: any, b: any, c: number) => [number, number, number];
export const __wbg_verifytotalcreditsinsystemresult_free: (a: number, b: number) => void;
export const verifytotalcreditsinsystemresult_root_hash: (a: number) => [number, number];
export const verifytotalcreditsinsystemresult_total_credits: (a: number) => bigint;
export const verifyTotalCreditsInSystem: (a: any, b: number, c: number, d: number, e: number) => [number, number, number];
export const __wbg_verifyvotepollsenddatequeryresult_free: (a: number, b: number) => void;
export const verifyvotepollsenddatequeryresult_root_hash: (a: number) => [number, number];
export const verifyvotepollsenddatequeryresult_vote_polls: (a: number) => any;
export const verifyVotePollsEndDateQueryVec: (a: any, b: any, c: number) => [number, number, number];
export const verifyVotePollsEndDateQueryMap: (a: any, b: any, c: number) => [number, number, number];
export const __wbg_grouphastoofewmemberserror_free: (a: number, b: number) => void;
export const grouphastoofewmemberserror_getCode: (a: number) => number;
export const grouphastoofewmemberserror_message: (a: number) => [number, number];
export const grouphastoofewmemberserror_serialize: (a: number) => [number, number, number];
export const __wbg_redundantdocumentpaidforbytokenwithcontractid_free: (a: number, b: number) => void;
export const redundantdocumentpaidforbytokenwithcontractid_getCode: (a: number) => number;
export const redundantdocumentpaidforbytokenwithcontractid_message: (a: number) => [number, number];
export const redundantdocumentpaidforbytokenwithcontractid_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokendistributiontimeintervalnotminutealignederror_free: (a: number, b: number) => void;
export const invalidtokendistributiontimeintervalnotminutealignederror_getCode: (a: number) => number;
export const invalidtokendistributiontimeintervalnotminutealignederror_message: (a: number) => [number, number];
export const invalidtokendistributiontimeintervalnotminutealignederror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokendistributiontimeintervaltooshorterror_free: (a: number, b: number) => void;
export const invalidtokendistributiontimeintervaltooshorterror_getCode: (a: number) => number;
export const invalidtokendistributiontimeintervaltooshorterror_message: (a: number) => [number, number];
export const invalidtokendistributiontimeintervaltooshorterror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokendistributionblockintervaltooshorterror_free: (a: number, b: number) => void;
export const invalidtokendistributionblockintervaltooshorterror_getCode: (a: number) => number;
export const invalidtokendistributionblockintervaltooshorterror_message: (a: number) => [number, number];
export const invalidtokendistributionblockintervaltooshorterror_serialize: (a: number) => [number, number, number];
export const __wbg_tokennoteonlyallowedwhenproposererror_free: (a: number, b: number) => void;
export const tokennoteonlyallowedwhenproposererror_getCode: (a: number) => number;
export const tokennoteonlyallowedwhenproposererror_message: (a: number) => [number, number];
export const tokennoteonlyallowedwhenproposererror_serialize: (a: number) => [number, number, number];
export const __wbg_grouprequiredpowerisinvaliderror_free: (a: number, b: number) => void;
export const grouprequiredpowerisinvaliderror_getCode: (a: number) => number;
export const grouprequiredpowerisinvaliderror_message: (a: number) => [number, number];
export const grouprequiredpowerisinvaliderror_serialize: (a: number) => [number, number, number];
export const __wbg_maingroupisnotdefinederror_free: (a: number, b: number) => void;
export const maingroupisnotdefinederror_getCode: (a: number) => number;
export const maingroupisnotdefinederror_message: (a: number) => [number, number];
export const maingroupisnotdefinederror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokenlanguagecodeerror_free: (a: number, b: number) => void;
export const invalidtokenlanguagecodeerror_getCode: (a: number) => number;
export const invalidtokenlanguagecodeerror_message: (a: number) => [number, number];
export const invalidtokenlanguagecodeerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokennamelengtherror_free: (a: number, b: number) => void;
export const invalidtokennamelengtherror_getCode: (a: number) => number;
export const invalidtokennamelengtherror_message: (a: number) => [number, number];
export const invalidtokennamelengtherror_serialize: (a: number) => [number, number, number];
export const __wbg_decimalsoverlimiterror_free: (a: number, b: number) => void;
export const decimalsoverlimiterror_getCode: (a: number) => number;
export const decimalsoverlimiterror_message: (a: number) => [number, number];
export const decimalsoverlimiterror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokennamecharactererror_free: (a: number, b: number) => void;
export const invalidtokennamecharactererror_getCode: (a: number) => number;
export const invalidtokennamecharactererror_message: (a: number) => [number, number];
export const invalidtokennamecharactererror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidkeywordcharactererror_free: (a: number, b: number) => void;
export const invalidkeywordcharactererror_getCode: (a: number) => number;
export const invalidkeywordcharactererror_message: (a: number) => [number, number];
export const invalidkeywordcharactererror_serialize: (a: number) => [number, number, number];
export const __wbg_newtokensdestinationidentityoptionrequirederror_free: (a: number, b: number) => void;
export const newtokensdestinationidentityoptionrequirederror_getCode: (a: number) => number;
export const newtokensdestinationidentityoptionrequirederror_message: (a: number) => [number, number];
export const newtokensdestinationidentityoptionrequirederror_serialize: (a: number) => [number, number, number];
export const __wbg_invaliddescriptionlengtherror_free: (a: number, b: number) => void;
export const invaliddescriptionlengtherror_getCode: (a: number) => number;
export const invaliddescriptionlengtherror_message: (a: number) => [number, number];
export const invaliddescriptionlengtherror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidkeywordlengtherror_free: (a: number, b: number) => void;
export const invalidkeywordlengtherror_getCode: (a: number) => number;
export const invalidkeywordlengtherror_message: (a: number) => [number, number];
export const invalidkeywordlengtherror_serialize: (a: number) => [number, number, number];
export const __wbg_duplicatekeywordserror_free: (a: number, b: number) => void;
export const duplicatekeywordserror_getCode: (a: number) => number;
export const duplicatekeywordserror_message: (a: number) => [number, number];
export const duplicatekeywordserror_serialize: (a: number) => [number, number, number];
export const __wbg_toomanykeywordserror_free: (a: number, b: number) => void;
export const toomanykeywordserror_getCode: (a: number) => number;
export const toomanykeywordserror_message: (a: number) => [number, number];
export const toomanykeywordserror_serialize: (a: number) => [number, number, number];
export const __wbg_tokenpaymentbyburningonlyallowedoninternaltokenerror_free: (a: number, b: number) => void;
export const tokenpaymentbyburningonlyallowedoninternaltokenerror_getCode: (a: number) => number;
export const tokenpaymentbyburningonlyallowedoninternaltokenerror_message: (a: number) => [number, number];
export const tokenpaymentbyburningonlyallowedoninternaltokenerror_serialize: (a: number) => [number, number, number];
export const __wbg_unknowndocumentactiontokeneffecterror_free: (a: number, b: number) => void;
export const unknowndocumentactiontokeneffecterror_getCode: (a: number) => number;
export const unknowndocumentactiontokeneffecterror_message: (a: number) => [number, number];
export const unknowndocumentactiontokeneffecterror_serialize: (a: number) => [number, number, number];
export const __wbg_unknowngasfeespaidbyerror_free: (a: number, b: number) => void;
export const unknowngasfeespaidbyerror_getCode: (a: number) => number;
export const unknowngasfeespaidbyerror_message: (a: number) => [number, number];
export const unknowngasfeespaidbyerror_serialize: (a: number) => [number, number, number];
export const __wbg_missingdefaultlocalizationerror_free: (a: number, b: number) => void;
export const missingdefaultlocalizationerror_getCode: (a: number) => number;
export const missingdefaultlocalizationerror_message: (a: number) => [number, number];
export const missingdefaultlocalizationerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokennotetoobigerror_free: (a: number, b: number) => void;
export const invalidtokennotetoobigerror_getCode: (a: number) => number;
export const invalidtokennotetoobigerror_message: (a: number) => [number, number];
export const invalidtokennotetoobigerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokendistributionfunctionincoherenceerror_free: (a: number, b: number) => void;
export const invalidtokendistributionfunctionincoherenceerror_getCode: (a: number) => number;
export const invalidtokendistributionfunctionincoherenceerror_message: (a: number) => [number, number];
export const invalidtokendistributionfunctionincoherenceerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokendistributionfunctioninvalidparametertupleerror_free: (a: number, b: number) => void;
export const invalidtokendistributionfunctioninvalidparametertupleerror_getCode: (a: number) => number;
export const invalidtokendistributionfunctioninvalidparametertupleerror_message: (a: number) => [number, number];
export const invalidtokendistributionfunctioninvalidparametertupleerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokendistributionfunctioninvalidparametererror_free: (a: number, b: number) => void;
export const invalidtokendistributionfunctioninvalidparametererror_getCode: (a: number) => number;
export const invalidtokendistributionfunctioninvalidparametererror_message: (a: number) => [number, number];
export const invalidtokendistributionfunctioninvalidparametererror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokendistributionfunctiondividebyzeroerror_free: (a: number, b: number) => void;
export const invalidtokendistributionfunctiondividebyzeroerror_getCode: (a: number) => number;
export const invalidtokendistributionfunctiondividebyzeroerror_message: (a: number) => [number, number];
export const invalidtokendistributionfunctiondividebyzeroerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokenconfigupdatenochangeerror_free: (a: number, b: number) => void;
export const invalidtokenconfigupdatenochangeerror_getCode: (a: number) => number;
export const invalidtokenconfigupdatenochangeerror_message: (a: number) => [number, number];
export const invalidtokenconfigupdatenochangeerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokenamounterror_free: (a: number, b: number) => void;
export const invalidtokenamounterror_getCode: (a: number) => number;
export const invalidtokenamounterror_message: (a: number) => [number, number];
export const invalidtokenamounterror_serialize: (a: number) => [number, number, number];
export const __wbg_groupnonunilateralmemberpowerhaslessthanrequiredpowererror_free: (a: number, b: number) => void;
export const groupnonunilateralmemberpowerhaslessthanrequiredpowererror_getCode: (a: number) => number;
export const groupnonunilateralmemberpowerhaslessthanrequiredpowererror_message: (a: number) => [number, number];
export const groupnonunilateralmemberpowerhaslessthanrequiredpowererror_serialize: (a: number) => [number, number, number];
export const __wbg_grouptotalpowerlessthanrequirederror_free: (a: number, b: number) => void;
export const grouptotalpowerlessthanrequirederror_getCode: (a: number) => number;
export const grouptotalpowerlessthanrequirederror_message: (a: number) => [number, number];
export const grouptotalpowerlessthanrequirederror_serialize: (a: number) => [number, number, number];
export const __wbg_groupmemberhaspoweroverlimiterror_free: (a: number, b: number) => void;
export const groupmemberhaspoweroverlimiterror_getCode: (a: number) => number;
export const groupmemberhaspoweroverlimiterror_message: (a: number) => [number, number];
export const groupmemberhaspoweroverlimiterror_serialize: (a: number) => [number, number, number];
export const __wbg_groupmemberhaspowerofzeroerror_free: (a: number, b: number) => void;
export const groupmemberhaspowerofzeroerror_getCode: (a: number) => number;
export const groupmemberhaspowerofzeroerror_message: (a: number) => [number, number];
export const groupmemberhaspowerofzeroerror_serialize: (a: number) => [number, number, number];
export const __wbg_groupexceedsmaxmemberserror_free: (a: number, b: number) => void;
export const groupexceedsmaxmemberserror_getCode: (a: number) => number;
export const groupexceedsmaxmemberserror_message: (a: number) => [number, number];
export const groupexceedsmaxmemberserror_serialize: (a: number) => [number, number, number];
export const __wbg_grouppositiondoesnotexisterror_free: (a: number, b: number) => void;
export const grouppositiondoesnotexisterror_getCode: (a: number) => number;
export const grouppositiondoesnotexisterror_message: (a: number) => [number, number];
export const grouppositiondoesnotexisterror_serialize: (a: number) => [number, number, number];
export const __wbg_groupactionnotallowedontransitionerror_free: (a: number, b: number) => void;
export const groupactionnotallowedontransitionerror_getCode: (a: number) => number;
export const groupactionnotallowedontransitionerror_message: (a: number) => [number, number];
export const groupactionnotallowedontransitionerror_serialize: (a: number) => [number, number, number];
export const __wbg_choosingtokenmintrecipientnotallowederror_free: (a: number, b: number) => void;
export const choosingtokenmintrecipientnotallowederror_getCode: (a: number) => number;
export const choosingtokenmintrecipientnotallowederror_message: (a: number) => [number, number];
export const choosingtokenmintrecipientnotallowederror_serialize: (a: number) => [number, number, number];
export const __wbg_destinationidentityfortokenmintingnotseterror_free: (a: number, b: number) => void;
export const destinationidentityfortokenmintingnotseterror_getCode: (a: number) => number;
export const destinationidentityfortokenmintingnotseterror_message: (a: number) => [number, number];
export const destinationidentityfortokenmintingnotseterror_serialize: (a: number) => [number, number, number];
export const __wbg_tokentransfertoourselferror_free: (a: number, b: number) => void;
export const tokentransfertoourselferror_getCode: (a: number) => number;
export const tokentransfertoourselferror_message: (a: number) => [number, number];
export const tokentransfertoourselferror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokenbasesupplyerror_free: (a: number, b: number) => void;
export const invalidtokenbasesupplyerror_getCode: (a: number) => number;
export const invalidtokenbasesupplyerror_message: (a: number) => [number, number];
export const invalidtokenbasesupplyerror_serialize: (a: number) => [number, number, number];
export const __wbg_noncontiguouscontractgrouppositionserror_free: (a: number, b: number) => void;
export const noncontiguouscontractgrouppositionserror_getCode: (a: number) => number;
export const noncontiguouscontractgrouppositionserror_message: (a: number) => [number, number];
export const noncontiguouscontractgrouppositionserror_serialize: (a: number) => [number, number, number];
export const __wbg_noncontiguouscontracttokenpositionserror_free: (a: number, b: number) => void;
export const noncontiguouscontracttokenpositionserror_getCode: (a: number) => number;
export const noncontiguouscontracttokenpositionserror_message: (a: number) => [number, number];
export const noncontiguouscontracttokenpositionserror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidactioniderror_free: (a: number, b: number) => void;
export const invalidactioniderror_getCode: (a: number) => number;
export const invalidactioniderror_message: (a: number) => [number, number];
export const invalidactioniderror_serialize: (a: number) => [number, number, number];
export const __wbg_contracthasnotokenserror_free: (a: number, b: number) => void;
export const contracthasnotokenserror_getCode: (a: number) => number;
export const contracthasnotokenserror_message: (a: number) => [number, number];
export const contracthasnotokenserror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokenpositionerror_free: (a: number, b: number) => void;
export const invalidtokenpositionerror_getCode: (a: number) => number;
export const invalidtokenpositionerror_message: (a: number) => [number, number];
export const invalidtokenpositionerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokeniderror_free: (a: number, b: number) => void;
export const invalidtokeniderror_getCode: (a: number) => number;
export const invalidtokeniderror_message: (a: number) => [number, number];
export const invalidtokeniderror_serialize: (a: number) => [number, number, number];
export const __wbg_datacontracttokenconfigurationupdateerror_free: (a: number, b: number) => void;
export const datacontracttokenconfigurationupdateerror_getCode: (a: number) => number;
export const datacontracttokenconfigurationupdateerror_message: (a: number) => [number, number];
export const datacontracttokenconfigurationupdateerror_serialize: (a: number) => [number, number, number];
export const __wbg_withdrawaloutputscriptnotallowedwhensigningwithownerkeyerror_free: (a: number, b: number) => void;
export const withdrawaloutputscriptnotallowedwhensigningwithownerkeyerror_getCode: (a: number) => number;
export const withdrawaloutputscriptnotallowedwhensigningwithownerkeyerror_message: (a: number) => [number, number];
export const withdrawaloutputscriptnotallowedwhensigningwithownerkeyerror_serialize: (a: number) => [number, number, number];
export const __wbg_contesteddocumentstemporarilynotallowederror_free: (a: number, b: number) => void;
export const contesteddocumentstemporarilynotallowederror_getCode: (a: number) => number;
export const contesteddocumentstemporarilynotallowederror_message: (a: number) => [number, number];
export const contesteddocumentstemporarilynotallowederror_serialize: (a: number) => [number, number, number];
export const __wbg_contesteduniqueindexwithuniqueindexerror_free: (a: number, b: number) => void;
export const contesteduniqueindexwithuniqueindexerror_getCode: (a: number) => number;
export const contesteduniqueindexwithuniqueindexerror_message: (a: number) => [number, number];
export const contesteduniqueindexwithuniqueindexerror_serialize: (a: number) => [number, number, number];
export const __wbg_documentfieldmaxsizeexceedederror_free: (a: number, b: number) => void;
export const documentfieldmaxsizeexceedederror_getCode: (a: number) => number;
export const documentfieldmaxsizeexceedederror_message: (a: number) => [number, number];
export const documentfieldmaxsizeexceedederror_serialize: (a: number) => [number, number, number];
export const __wbg_unsupportedfeatureerror_free: (a: number, b: number) => void;
export const unsupportedfeatureerror_getCode: (a: number) => number;
export const unsupportedfeatureerror_message: (a: number) => [number, number];
export const unsupportedfeatureerror_serialize: (a: number) => [number, number, number];
export const __wbg_contesteduniqueindexonmutabledocumenttypeerror_free: (a: number, b: number) => void;
export const contesteduniqueindexonmutabledocumenttypeerror_getCode: (a: number) => number;
export const contesteduniqueindexonmutabledocumenttypeerror_message: (a: number) => [number, number];
export const contesteduniqueindexonmutabledocumenttypeerror_serialize: (a: number) => [number, number, number];
export const __wbg_overflowerror_free: (a: number, b: number) => void;
export const overflowerror_getCode: (a: number) => number;
export const overflowerror_message: (a: number) => [number, number];
export const overflowerror_serialize: (a: number) => [number, number, number];
export const __wbg_documentcreationnotallowederror_free: (a: number, b: number) => void;
export const documentcreationnotallowederror_getCode: (a: number) => number;
export const documentcreationnotallowederror_message: (a: number) => [number, number];
export const documentcreationnotallowederror_serialize: (a: number) => [number, number, number];
export const __wbg_unknowndocumentcreationrestrictionmodeerror_free: (a: number, b: number) => void;
export const unknowndocumentcreationrestrictionmodeerror_getCode: (a: number) => number;
export const unknowndocumentcreationrestrictionmodeerror_message: (a: number) => [number, number];
export const unknowndocumentcreationrestrictionmodeerror_serialize: (a: number) => [number, number, number];
export const __wbg_unknowntrademodeerror_free: (a: number, b: number) => void;
export const unknowntrademodeerror_getCode: (a: number) => number;
export const unknowntrademodeerror_message: (a: number) => [number, number];
export const unknowntrademodeerror_serialize: (a: number) => [number, number, number];
export const __wbg_unknowntransferabletypeerror_free: (a: number, b: number) => void;
export const unknowntransferabletypeerror_getCode: (a: number) => number;
export const unknowntransferabletypeerror_message: (a: number) => [number, number];
export const unknowntransferabletypeerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalididentityupdatetransitiondisablekeyserror_free: (a: number, b: number) => void;
export const invalididentityupdatetransitiondisablekeyserror_getCode: (a: number) => number;
export const invalididentityupdatetransitiondisablekeyserror_message: (a: number) => [number, number];
export const invalididentityupdatetransitiondisablekeyserror_serialize: (a: number) => [number, number, number];
export const __wbg_invalididentityupdatetransitionemptyerror_free: (a: number, b: number) => void;
export const invalididentityupdatetransitionemptyerror_getCode: (a: number) => number;
export const invalididentityupdatetransitionemptyerror_message: (a: number) => [number, number];
export const invalididentityupdatetransitionemptyerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalididentitycreditwithdrawaltransitionamounterror_free: (a: number, b: number) => void;
export const invalididentitycreditwithdrawaltransitionamounterror_getCode: (a: number) => number;
export const invalididentitycreditwithdrawaltransitionamounterror_message: (a: number) => [number, number];
export const invalididentitycreditwithdrawaltransitionamounterror_serialize: (a: number) => [number, number, number];
export const __wbg_invaliddocumenttyperequiredsecuritylevelerror_free: (a: number, b: number) => void;
export const invaliddocumenttyperequiredsecuritylevelerror_getCode: (a: number) => number;
export const invaliddocumenttyperequiredsecuritylevelerror_message: (a: number) => [number, number];
export const invaliddocumenttyperequiredsecuritylevelerror_serialize: (a: number) => [number, number, number];
export const __wbg_masterpublickeyupdateerror_free: (a: number, b: number) => void;
export const masterpublickeyupdateerror_getCode: (a: number) => number;
export const masterpublickeyupdateerror_message: (a: number) => [number, number];
export const masterpublickeyupdateerror_serialize: (a: number) => [number, number, number];
export const __wbg_toomanymasterpublickeyerror_free: (a: number, b: number) => void;
export const toomanymasterpublickeyerror_getCode: (a: number) => number;
export const toomanymasterpublickeyerror_message: (a: number) => [number, number];
export const toomanymasterpublickeyerror_serialize: (a: number) => [number, number, number];
export const __wbg_disablingkeyidalsobeingaddedinsametransitionerror_free: (a: number, b: number) => void;
export const disablingkeyidalsobeingaddedinsametransitionerror_getCode: (a: number) => number;
export const disablingkeyidalsobeingaddedinsametransitionerror_message: (a: number) => [number, number];
export const disablingkeyidalsobeingaddedinsametransitionerror_serialize: (a: number) => [number, number, number];
export const __wbg_maxdocumentstransitionsexceedederror_free: (a: number, b: number) => void;
export const maxdocumentstransitionsexceedederror_getCode: (a: number) => number;
export const maxdocumentstransitionsexceedederror_message: (a: number) => [number, number];
export const maxdocumentstransitionsexceedederror_serialize: (a: number) => [number, number, number];
export const __wbg_missingpositionsindocumenttypepropertieserror_free: (a: number, b: number) => void;
export const missingpositionsindocumenttypepropertieserror_getCode: (a: number) => number;
export const missingpositionsindocumenttypepropertieserror_message: (a: number) => [number, number];
export const missingpositionsindocumenttypepropertieserror_serialize: (a: number) => [number, number, number];
export const __wbg_datacontractboundsnotpresenterror_free: (a: number, b: number) => void;
export const datacontractboundsnotpresenterror_getCode: (a: number) => number;
export const datacontractboundsnotpresenterror_message: (a: number) => [number, number];
export const datacontractboundsnotpresenterror_serialize: (a: number) => [number, number, number];
export const __wbg_unknownstoragekeyrequirementserror_free: (a: number, b: number) => void;
export const unknownstoragekeyrequirementserror_getCode: (a: number) => number;
export const unknownstoragekeyrequirementserror_message: (a: number) => [number, number];
export const unknownstoragekeyrequirementserror_serialize: (a: number) => [number, number, number];
export const __wbg_unknownsecuritylevelerror_free: (a: number, b: number) => void;
export const unknownsecuritylevelerror_getCode: (a: number) => number;
export const unknownsecuritylevelerror_message: (a: number) => [number, number];
export const unknownsecuritylevelerror_serialize: (a: number) => [number, number, number];
export const __wbg_versionerror_free: (a: number, b: number) => void;
export const versionerror_getCode: (a: number) => number;
export const versionerror_message: (a: number) => [number, number];
export const versionerror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokenpositionstateerror_free: (a: number, b: number) => void;
export const invalidtokenpositionstateerror_getCode: (a: number) => number;
export const invalidtokenpositionstateerror_message: (a: number) => [number, number];
export const invalidtokenpositionstateerror_serialize: (a: number) => [number, number, number];
export const __wbg_datacontractnotfounderror_free: (a: number, b: number) => void;
export const datacontractnotfounderror_getCode: (a: number) => number;
export const datacontractnotfounderror_message: (a: number) => [number, number];
export const datacontractnotfounderror_serialize: (a: number) => [number, number, number];
export const __wbg_identitytofreezedoesnotexisterror_free: (a: number, b: number) => void;
export const identitytofreezedoesnotexisterror_getCode: (a: number) => number;
export const identitytofreezedoesnotexisterror_message: (a: number) => [number, number];
export const identitytofreezedoesnotexisterror_serialize: (a: number) => [number, number, number];
export const __wbg_modificationofgroupactionmainparametersnotpermittederror_free: (a: number, b: number) => void;
export const modificationofgroupactionmainparametersnotpermittederror_getCode: (a: number) => number;
export const modificationofgroupactionmainparametersnotpermittederror_message: (a: number) => [number, number];
export const modificationofgroupactionmainparametersnotpermittederror_serialize: (a: number) => [number, number, number];
export const __wbg_identitymemberofgroupnotfounderror_free: (a: number, b: number) => void;
export const identitymemberofgroupnotfounderror_getCode: (a: number) => number;
export const identitymemberofgroupnotfounderror_message: (a: number) => [number, number];
export const identitymemberofgroupnotfounderror_serialize: (a: number) => [number, number, number];
export const __wbg_identityintokenconfigurationnotfounderror_free: (a: number, b: number) => void;
export const identityintokenconfigurationnotfounderror_getCode: (a: number) => number;
export const identityintokenconfigurationnotfounderror_message: (a: number) => [number, number];
export const identityintokenconfigurationnotfounderror_serialize: (a: number) => [number, number, number];
export const __wbg_tokennotfordirectsale_free: (a: number, b: number) => void;
export const tokennotfordirectsale_getCode: (a: number) => number;
export const tokennotfordirectsale_message: (a: number) => [number, number];
export const tokennotfordirectsale_serialize: (a: number) => [number, number, number];
export const __wbg_tokenamountunderminimumsaleamount_free: (a: number, b: number) => void;
export const tokenamountunderminimumsaleamount_getCode: (a: number) => number;
export const tokenamountunderminimumsaleamount_message: (a: number) => [number, number];
export const tokenamountunderminimumsaleamount_serialize: (a: number) => [number, number, number];
export const __wbg_tokendirectpurchaseuserpricetoolow_free: (a: number, b: number) => void;
export const tokendirectpurchaseuserpricetoolow_getCode: (a: number) => number;
export const tokendirectpurchaseuserpricetoolow_message: (a: number) => [number, number];
export const tokendirectpurchaseuserpricetoolow_serialize: (a: number) => [number, number, number];
export const __wbg_identitytryingtopaywithwrongtokenerror_free: (a: number, b: number) => void;
export const identitytryingtopaywithwrongtokenerror_getCode: (a: number) => number;
export const identitytryingtopaywithwrongtokenerror_message: (a: number) => [number, number];
export const identitytryingtopaywithwrongtokenerror_serialize: (a: number) => [number, number, number];
export const __wbg_requiredtokenpaymentinfonotseterror_free: (a: number, b: number) => void;
export const requiredtokenpaymentinfonotseterror_getCode: (a: number) => number;
export const requiredtokenpaymentinfonotseterror_message: (a: number) => [number, number];
export const requiredtokenpaymentinfonotseterror_serialize: (a: number) => [number, number, number];
export const __wbg_identityhasnotagreedtopayrequiredtokenamounterror_free: (a: number, b: number) => void;
export const identityhasnotagreedtopayrequiredtokenamounterror_getCode: (a: number) => number;
export const identityhasnotagreedtopayrequiredtokenamounterror_message: (a: number) => [number, number];
export const identityhasnotagreedtopayrequiredtokenamounterror_serialize: (a: number) => [number, number, number];
export const __wbg_preprogrammeddistributiontimestampinpasterror_free: (a: number, b: number) => void;
export const preprogrammeddistributiontimestampinpasterror_getCode: (a: number) => number;
export const preprogrammeddistributiontimestampinpasterror_message: (a: number) => [number, number];
export const preprogrammeddistributiontimestampinpasterror_serialize: (a: number) => [number, number, number];
export const __wbg_tokentransferrecipientidentitynotexisterror_free: (a: number, b: number) => void;
export const tokentransferrecipientidentitynotexisterror_getCode: (a: number) => number;
export const tokentransferrecipientidentitynotexisterror_message: (a: number) => [number, number];
export const tokentransferrecipientidentitynotexisterror_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokenclaimwrongclaimant_free: (a: number, b: number) => void;
export const invalidtokenclaimwrongclaimant_getCode: (a: number) => number;
export const invalidtokenclaimwrongclaimant_message: (a: number) => [number, number];
export const invalidtokenclaimwrongclaimant_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokenclaimnocurrentrewards_free: (a: number, b: number) => void;
export const invalidtokenclaimnocurrentrewards_getCode: (a: number) => number;
export const invalidtokenclaimnocurrentrewards_message: (a: number) => [number, number];
export const invalidtokenclaimnocurrentrewards_serialize: (a: number) => [number, number, number];
export const __wbg_invalidtokenclaimpropertymismatch_free: (a: number, b: number) => void;
export const invalidtokenclaimpropertymismatch_getCode: (a: number) => number;
export const invalidtokenclaimpropertymismatch_message: (a: number) => [number, number];
export const invalidtokenclaimpropertymismatch_serialize: (a: number) => [number, number, number];
export const __wbg_invalidgrouppositionerror_free: (a: number, b: number) => void;
export const invalidgrouppositionerror_getCode: (a: number) => number;
export const invalidgrouppositionerror_message: (a: number) => [number, number];
export const invalidgrouppositionerror_serialize: (a: number) => [number, number, number];
export const __wbg_newauthorizedactiontakermaingroupnotseterror_free: (a: number, b: number) => void;
export const newauthorizedactiontakermaingroupnotseterror_getCode: (a: number) => number;
export const newauthorizedactiontakermaingroupnotseterror_message: (a: number) => [number, number];
export const newauthorizedactiontakermaingroupnotseterror_serialize: (a: number) => [number, number, number];
export const __wbg_newauthorizedactiontakergroupdoesnotexisterror_free: (a: number, b: number) => void;
export const newauthorizedactiontakergroupdoesnotexisterror_getCode: (a: number) => number;
export const newauthorizedactiontakergroupdoesnotexisterror_message: (a: number) => [number, number];
export const newauthorizedactiontakergroupdoesnotexisterror_serialize: (a: number) => [number, number, number];
export const __wbg_newauthorizedactiontakeridentitydoesnotexisterror_free: (a: number, b: number) => void;
export const newauthorizedactiontakeridentitydoesnotexisterror_getCode: (a: number) => number;
export const newauthorizedactiontakeridentitydoesnotexisterror_message: (a: number) => [number, number];
export const newauthorizedactiontakeridentitydoesnotexisterror_serialize: (a: number) => [number, number, number];
export const __wbg_newtokensdestinationidentitydoesnotexisterror_free: (a: number, b: number) => void;
export const newtokensdestinationidentitydoesnotexisterror_getCode: (a: number) => number;
export const newtokensdestinationidentitydoesnotexisterror_message: (a: number) => [number, number];
export const newtokensdestinationidentitydoesnotexisterror_serialize: (a: number) => [number, number, number];
export const __wbg_tokenmintpastmaxsupplyerror_free: (a: number, b: number) => void;
export const tokenmintpastmaxsupplyerror_getCode: (a: number) => number;
export const tokenmintpastmaxsupplyerror_message: (a: number) => [number, number];
export const tokenmintpastmaxsupplyerror_serialize: (a: number) => [number, number, number];
export const __wbg_tokensettingmaxsupplytolessthancurrentsupplyerror_free: (a: number, b: number) => void;
export const tokensettingmaxsupplytolessthancurrentsupplyerror_getCode: (a: number) => number;
export const tokensettingmaxsupplytolessthancurrentsupplyerror_message: (a: number) => [number, number];
export const tokensettingmaxsupplytolessthancurrentsupplyerror_serialize: (a: number) => [number, number, number];
export const __wbg_datacontractupdateactionnotallowederror_free: (a: number, b: number) => void;
export const datacontractupdateactionnotallowederror_getCode: (a: number) => number;
export const datacontractupdateactionnotallowederror_message: (a: number) => [number, number];
export const datacontractupdateactionnotallowederror_serialize: (a: number) => [number, number, number];
export const __wbg_identitytokenaccountnotfrozenerror_free: (a: number, b: number) => void;
export const identitytokenaccountnotfrozenerror_getCode: (a: number) => number;
export const identitytokenaccountnotfrozenerror_message: (a: number) => [number, number];
export const identitytokenaccountnotfrozenerror_serialize: (a: number) => [number, number, number];
export const __wbg_groupactionalreadysignedbyidentityerror_free: (a: number, b: number) => void;
export const groupactionalreadysignedbyidentityerror_getCode: (a: number) => number;
export const groupactionalreadysignedbyidentityerror_message: (a: number) => [number, number];
export const groupactionalreadysignedbyidentityerror_serialize: (a: number) => [number, number, number];
export const __wbg_groupactionalreadycompletederror_free: (a: number, b: number) => void;
export const groupactionalreadycompletederror_getCode: (a: number) => number;
export const groupactionalreadycompletederror_message: (a: number) => [number, number];
export const groupactionalreadycompletederror_serialize: (a: number) => [number, number, number];
export const __wbg_groupactiondoesnotexisterror_free: (a: number, b: number) => void;
export const groupactiondoesnotexisterror_getCode: (a: number) => number;
export const groupactiondoesnotexisterror_message: (a: number) => [number, number];
export const groupactiondoesnotexisterror_serialize: (a: number) => [number, number, number];
export const __wbg_identitynotmemberofgrouperror_free: (a: number, b: number) => void;
export const identitynotmemberofgrouperror_getCode: (a: number) => number;
export const identitynotmemberofgrouperror_message: (a: number) => [number, number];
export const identitynotmemberofgrouperror_serialize: (a: number) => [number, number, number];
export const __wbg_tokennotpausederror_free: (a: number, b: number) => void;
export const tokennotpausederror_getCode: (a: number) => number;
export const tokennotpausederror_message: (a: number) => [number, number];
export const tokennotpausederror_serialize: (a: number) => [number, number, number];
export const __wbg_tokenalreadypausederror_free: (a: number, b: number) => void;
export const tokenalreadypausederror_getCode: (a: number) => number;
export const tokenalreadypausederror_message: (a: number) => [number, number];
export const tokenalreadypausederror_serialize: (a: number) => [number, number, number];
export const __wbg_identitytokenaccountalreadyfrozenerror_free: (a: number, b: number) => void;
export const identitytokenaccountalreadyfrozenerror_getCode: (a: number) => number;
export const identitytokenaccountalreadyfrozenerror_message: (a: number) => [number, number];
export const identitytokenaccountalreadyfrozenerror_serialize: (a: number) => [number, number, number];
export const __wbg_tokenispausederror_free: (a: number, b: number) => void;
export const tokenispausederror_getCode: (a: number) => number;
export const tokenispausederror_message: (a: number) => [number, number];
export const tokenispausederror_serialize: (a: number) => [number, number, number];
export const __wbg_identitytokenaccountfrozenerror_free: (a: number, b: number) => void;
export const identitytokenaccountfrozenerror_getCode: (a: number) => number;
export const identitytokenaccountfrozenerror_message: (a: number) => [number, number];
export const identitytokenaccountfrozenerror_serialize: (a: number) => [number, number, number];
export const __wbg_unauthorizedtokenactionerror_free: (a: number, b: number) => void;
export const unauthorizedtokenactionerror_getCode: (a: number) => number;
export const unauthorizedtokenactionerror_message: (a: number) => [number, number];
export const unauthorizedtokenactionerror_serialize: (a: number) => [number, number, number];
export const __wbg_identitydoesnothaveenoughtokenbalanceerror_free: (a: number, b: number) => void;
export const identitydoesnothaveenoughtokenbalanceerror_getCode: (a: number) => number;
export const identitydoesnothaveenoughtokenbalanceerror_message: (a: number) => [number, number];
export const identitydoesnothaveenoughtokenbalanceerror_serialize: (a: number) => [number, number, number];
export const __wbg_recipientidentitydoesnotexisterror_free: (a: number, b: number) => void;
export const recipientidentitydoesnotexisterror_getCode: (a: number) => number;
export const recipientidentitydoesnotexisterror_message: (a: number) => [number, number];
export const recipientidentitydoesnotexisterror_serialize: (a: number) => [number, number, number];
export const __wbg_documentcontestnotpaidforerror_free: (a: number, b: number) => void;
export const documentcontestnotpaidforerror_getCode: (a: number) => number;
export const documentcontestnotpaidforerror_message: (a: number) => [number, number];
export const documentcontestnotpaidforerror_serialize: (a: number) => [number, number, number];
export const __wbg_notransferkeyforcorewithdrawalavailableerror_free: (a: number, b: number) => void;
export const notransferkeyforcorewithdrawalavailableerror_getCode: (a: number) => number;
export const notransferkeyforcorewithdrawalavailableerror_message: (a: number) => [number, number];
export const notransferkeyforcorewithdrawalavailableerror_serialize: (a: number) => [number, number, number];
export const __wbg_missingtransferkeyerror_free: (a: number, b: number) => void;
export const missingtransferkeyerror_getCode: (a: number) => number;
export const missingtransferkeyerror_message: (a: number) => [number, number];
export const missingtransferkeyerror_serialize: (a: number) => [number, number, number];
export const __wbg_documentcontestdocumentwithsameidalreadypresenterror_free: (a: number, b: number) => void;
export const documentcontestdocumentwithsameidalreadypresenterror_getCode: (a: number) => number;
export const documentcontestdocumentwithsameidalreadypresenterror_message: (a: number) => [number, number];
export const documentcontestdocumentwithsameidalreadypresenterror_serialize: (a: number) => [number, number, number];
export const __wbg_masternodeincorrectvoteridentityiderror_free: (a: number, b: number) => void;
export const masternodeincorrectvoteridentityiderror_getCode: (a: number) => number;
export const masternodeincorrectvoteridentityiderror_message: (a: number) => [number, number];
export const masternodeincorrectvoteridentityiderror_serialize: (a: number) => [number, number, number];
export const __wbg_masternodeincorrectvotingaddresserror_free: (a: number, b: number) => void;
export const masternodeincorrectvotingaddresserror_getCode: (a: number) => number;
export const masternodeincorrectvotingaddresserror_message: (a: number) => [number, number];
export const masternodeincorrectvotingaddresserror_serialize: (a: number) => [number, number, number];
export const __wbg_masternodevotealreadypresenterror_free: (a: number, b: number) => void;
export const masternodevotealreadypresenterror_getCode: (a: number) => number;
export const masternodevotealreadypresenterror_message: (a: number) => [number, number];
export const masternodevotealreadypresenterror_serialize: (a: number) => [number, number, number];
export const __wbg_masternodevotedtoomanytimeserror_free: (a: number, b: number) => void;
export const masternodevotedtoomanytimeserror_getCode: (a: number) => number;
export const masternodevotedtoomanytimeserror_message: (a: number) => [number, number];
export const masternodevotedtoomanytimeserror_serialize: (a: number) => [number, number, number];
export const __wbg_votepollnotavailableforvotingerror_free: (a: number, b: number) => void;
export const votepollnotavailableforvotingerror_getCode: (a: number) => number;
export const votepollnotavailableforvotingerror_message: (a: number) => [number, number];
export const votepollnotavailableforvotingerror_serialize: (a: number) => [number, number, number];
export const __wbg_votepollnotfounderror_free: (a: number, b: number) => void;
export const votepollnotfounderror_getCode: (a: number) => number;
export const votepollnotfounderror_message: (a: number) => [number, number];
export const votepollnotfounderror_serialize: (a: number) => [number, number, number];
export const __wbg_documentcontestidentityalreadycontestanterror_free: (a: number, b: number) => void;
export const documentcontestidentityalreadycontestanterror_getCode: (a: number) => number;
export const documentcontestidentityalreadycontestanterror_message: (a: number) => [number, number];
export const documentcontestidentityalreadycontestanterror_serialize: (a: number) => [number, number, number];
export const __wbg_documentcontestnotjoinableerror_free: (a: number, b: number) => void;
export const documentcontestnotjoinableerror_getCode: (a: number) => number;
export const documentcontestnotjoinableerror_message: (a: number) => [number, number];
export const documentcontestnotjoinableerror_serialize: (a: number) => [number, number, number];
export const __wbg_documentcontestcurrentlylockederror_free: (a: number, b: number) => void;
export const documentcontestcurrentlylockederror_getCode: (a: number) => number;
export const documentcontestcurrentlylockederror_message: (a: number) => [number, number];
export const documentcontestcurrentlylockederror_serialize: (a: number) => [number, number, number];
export const __wbg_masternodenotfounderror_free: (a: number, b: number) => void;
export const masternodenotfounderror_getCode: (a: number) => number;
export const masternodenotfounderror_message: (a: number) => [number, number];
export const masternodenotfounderror_serialize: (a: number) => [number, number, number];
export const __wbg_prefundedspecializedbalancenotfounderror_free: (a: number, b: number) => void;
export const prefundedspecializedbalancenotfounderror_getCode: (a: number) => number;
export const prefundedspecializedbalancenotfounderror_message: (a: number) => [number, number];
export const prefundedspecializedbalancenotfounderror_serialize: (a: number) => [number, number, number];
export const __wbg_prefundedspecializedbalanceinsufficienterror_free: (a: number, b: number) => void;
export const prefundedspecializedbalanceinsufficienterror_getCode: (a: number) => number;
export const prefundedspecializedbalanceinsufficienterror_message: (a: number) => [number, number];
export const prefundedspecializedbalanceinsufficienterror_serialize: (a: number) => [number, number, number];
export const __wbg_documentincorrectpurchasepriceerror_free: (a: number, b: number) => void;
export const documentincorrectpurchasepriceerror_getCode: (a: number) => number;
export const documentincorrectpurchasepriceerror_message: (a: number) => [number, number];
export const documentincorrectpurchasepriceerror_serialize: (a: number) => [number, number, number];
export const __wbg_documentnotforsaleerror_free: (a: number, b: number) => void;
export const documentnotforsaleerror_getCode: (a: number) => number;
export const documentnotforsaleerror_message: (a: number) => [number, number];
export const documentnotforsaleerror_serialize: (a: number) => [number, number, number];
export const __wbg_documenttypeupdateerror_free: (a: number, b: number) => void;
export const documenttypeupdateerror_getCode: (a: number) => number;
export const documenttypeupdateerror_message: (a: number) => [number, number];
export const documenttypeupdateerror_serialize: (a: number) => [number, number, number];
export const __wbg_identitypublickeyalreadyexistsforuniquecontractboundserror_free: (a: number, b: number) => void;
export const identitypublickeyalreadyexistsforuniquecontractboundserror_getCode: (a: number) => number;
export const identitypublickeyalreadyexistsforuniquecontractboundserror_message: (a: number) => [number, number];
export const identitypublickeyalreadyexistsforuniquecontractboundserror_serialize: (a: number) => [number, number, number];
export const __wbg_datacontractfacade_free: (a: number, b: number) => void;
export const datacontractfacade_create: (a: number, b: number, c: number, d: bigint, e: any, f: number) => [number, number, number];
export const datacontractfacade_createFromObject: (a: number, b: any, c: number) => any;
export const datacontractfacade_createFromBuffer: (a: number, b: number, c: number, d: number) => any;
export const datacontractfacade_createDataContractCreateTransition: (a: number, b: number) => [number, number, number];
export const datacontractfacade_createDataContractUpdateTransition: (a: number, b: number, c: bigint) => [number, number, number];
export const __wbg_documenttransitions_free: (a: number, b: number) => void;
export const documenttransitions_new: () => number;
export const documenttransitions_addTransitionCreate: (a: number, b: number) => void;
export const documenttransitions_addTransitionReplace: (a: number, b: number) => void;
export const documenttransitions_addTransitionDelete: (a: number, b: number) => void;
export const __wbg_documentfactory_free: (a: number, b: number) => void;
export const documentfactory_new: (a: number, b: number) => [number, number, number];
export const documentfactory_create: (a: number, b: number, c: any, d: number, e: number, f: any) => [number, number, number];
export const documentfactory_createStateTransition: (a: number, b: any, c: any) => [number, number, number];
export const documentfactory_createExtendedDocumentFromDocumentBuffer: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const __wbg_datacontractinvalidindexdefinitionupdateerror_free: (a: number, b: number) => void;
export const datacontractinvalidindexdefinitionupdateerror_getDocumentType: (a: number) => [number, number];
export const datacontractinvalidindexdefinitionupdateerror_getIndexName: (a: number) => [number, number];
export const datacontractinvalidindexdefinitionupdateerror_getCode: (a: number) => number;
export const datacontractinvalidindexdefinitionupdateerror_message: (a: number) => [number, number];
export const __wbg_datacontractmaxdepthexceederror_free: (a: number, b: number) => void;
export const datacontractmaxdeptherror_getMaxDepth: (a: number) => number;
export const datacontractmaxdeptherror_getCode: (a: number) => number;
export const datacontractmaxdeptherror_message: (a: number) => [number, number];
export const __wbg_incompatibledatacontractschemaerror_free: (a: number, b: number) => void;
export const incompatibledatacontractschemaerror_getDataContractId: (a: number) => any;
export const incompatibledatacontractschemaerror_getOperation: (a: number) => [number, number];
export const incompatibledatacontractschemaerror_getFieldPath: (a: number) => [number, number];
export const incompatibledatacontractschemaerror_getCode: (a: number) => number;
export const incompatibledatacontractschemaerror_message: (a: number) => [number, number];
export const __wbg_duplicateindexerror_free: (a: number, b: number) => void;
export const duplicateindexerror_getDocumentType: (a: number) => [number, number];
export const duplicateindexerror_getIndexName: (a: number) => [number, number];
export const duplicateindexerror_getCode: (a: number) => number;
export const duplicateindexerror_message: (a: number) => [number, number];
export const __wbg_invalidindexedpropertyconstrainterror_free: (a: number, b: number) => void;
export const invalidindexedpropertyconstrainterror_getDocumentType: (a: number) => [number, number];
export const invalidindexedpropertyconstrainterror_getIndexName: (a: number) => [number, number];
export const invalidindexedpropertyconstrainterror_getPropertyName: (a: number) => [number, number];
export const invalidindexedpropertyconstrainterror_getConstraintName: (a: number) => [number, number];
export const invalidindexedpropertyconstrainterror_getReason: (a: number) => [number, number];
export const invalidindexedpropertyconstrainterror_getCode: (a: number) => number;
export const invalidindexedpropertyconstrainterror_message: (a: number) => [number, number];
export const __wbg_serializedobjectparsingerror_free: (a: number, b: number) => void;
export const serializedobjectparsingerror_getParsingError: (a: number) => [number, number];
export const serializedobjectparsingerror_getCode: (a: number) => number;
export const serializedobjectparsingerror_message: (a: number) => [number, number];
export const __wbg_identitycontractnonceoutofboundserror_free: (a: number, b: number) => void;
export const identitycontractnonceoutofboundserror_getIdentityContractNonce: (a: number) => bigint;
export const identitycontractnonceoutofboundserror_getCode: (a: number) => number;
export const identitycontractnonceoutofboundserror_message: (a: number) => [number, number];
export const __wbg_missingdocumenttransitionactionerror_free: (a: number, b: number) => void;
export const missingdocumenttransitionactionerror_getCode: (a: number) => number;
export const missingdocumenttransitionactionerror_message: (a: number) => [number, number];
export const __wbg_missingdocumenttypeerror_free: (a: number, b: number) => void;
export const missingdocumenttypeerror_getCode: (a: number) => number;
export const missingdocumenttypeerror_message: (a: number) => [number, number];
export const __wbg_invalidassetlockproofcorechainheighterror_free: (a: number, b: number) => void;
export const invalidassetlockproofcorechainheighterror_getCurrentCoreChainLockedHeight: (a: number) => number;
export const invalidassetlockproofcorechainheighterror_getCode: (a: number) => number;
export const invalidassetlockproofcorechainheighterror_message: (a: number) => [number, number];
export const __wbg_identityassetlocktransactionoutpointnotenoughbalanceerror_free: (a: number, b: number) => void;
export const identityassetlocktransactionoutpointnotenoughbalanceerror_getTransactionId: (a: number) => any;
export const identityassetlocktransactionoutpointnotenoughbalanceerror_getOutputIndex: (a: number) => number;
export const identityassetlocktransactionoutpointnotenoughbalanceerror_getInitialAssetLockCredits: (a: number) => bigint;
export const identityassetlocktransactionoutpointnotenoughbalanceerror_getCreditsLeft: (a: number) => bigint;
export const identityassetlocktransactionoutpointnotenoughbalanceerror_getCreditsRequired: (a: number) => bigint;
export const identityassetlocktransactionoutpointnotenoughbalanceerror_getCode: (a: number) => number;
export const identityassetlocktransactionoutpointnotenoughbalanceerror_message: (a: number) => [number, number];
export const __wbg_invalididentityassetlocktransactionoutputerror_free: (a: number, b: number) => void;
export const invalididentityassetlocktransactionoutputerror_getCode: (a: number) => number;
export const invalididentityassetlocktransactionoutputerror_message: (a: number) => [number, number];
export const __wbg_identitynotfounderror_free: (a: number, b: number) => void;
export const identitynotfounderror_new: (a: any) => number;
export const identitynotfounderror_getIdentityId: (a: number) => any;
export const identitynotfounderror_getCode: (a: number) => number;
export const identitynotfounderror_message: (a: number) => [number, number];
export const identitynotfounderror_serialize: (a: number) => [number, number, number];
export const __wbg_documentowneridmismatcherror_free: (a: number, b: number) => void;
export const documentowneridmismatcherror_getDocumentId: (a: number) => any;
export const documentowneridmismatcherror_getDocumentOwnerId: (a: number) => any;
export const documentowneridmismatcherror_getExistingDocumentOwnerId: (a: number) => any;
export const documentowneridmismatcherror_getCode: (a: number) => number;
export const documentowneridmismatcherror_message: (a: number) => [number, number];
export const __wbg_duplicatedidentitypublickeystateerror_free: (a: number, b: number) => void;
export const duplicatedidentitypublickeystateerror_getDuplicatedPublicKeysIds: (a: number) => any;
export const duplicatedidentitypublickeystateerror_getCode: (a: number) => number;
export const duplicatedidentitypublickeystateerror_message: (a: number) => [number, number];
export const __wbg_identitypublickeyisreadonlyerror_free: (a: number, b: number) => void;
export const identitypublickeyisreadonlyerror_getCode: (a: number) => number;
export const identitypublickeyisreadonlyerror_message: (a: number) => [number, number];
export const __wbg_instantassetlockproof_free: (a: number, b: number) => void;
export const instantassetlockproof_new: (a: any) => [number, number, number];
export const instantassetlockproof_getType: (a: number) => number;
export const instantassetlockproof_getOutputIndex: (a: number) => number;
export const instantassetlockproof_getOutPoint: (a: number) => [number, number, number];
export const instantassetlockproof_getOutput: (a: number) => [number, number, number];
export const instantassetlockproof_createIdentifier: (a: number) => [number, number, number];
export const instantassetlockproof_getInstantLock: (a: number) => any;
export const instantassetlockproof_getTransaction: (a: number) => any;
export const instantassetlockproof_toObject: (a: number) => [number, number, number];
export const instantassetlockproof_toJSON: (a: number) => [number, number, number];
export const __wbg_invalidstatetransitionerror_free: (a: number, b: number) => void;
export const invalidstatetransitionerror_new_wasm: (a: number, b: number, c: any) => [number, number, number];
export const invalidstatetransitionerror_getErrors: (a: number) => [number, number];
export const invalidstatetransitionerror_getRawStateTransition: (a: number) => any;
export const __wbg_validationresult_free: (a: number, b: number) => void;
export const validationresult_new: (a: number, b: number) => [number, number, number];
export const validationresult_errorsText: (a: number) => [number, number];
export const validationresult_isValid: (a: number) => number;
export const validationresult_errors: (a: number) => [number, number];
export const validationresult_getData: (a: number) => any;
export const validationresult_getFirstError: (a: number) => any;
export const invalidassetlockproofcorechainheighterror_getProofCoreChainLockedHeight: (a: number) => number;
export const invalididentityassetlocktransactionoutputerror_getOutputIndex: (a: number) => number;
export const identitypublickeyisreadonlyerror_getKeyId: (a: number) => number;
export const identitypublickeyisreadonlyerror_getPublicKeyIndex: (a: number) => number;
export const validationresult_getErrors: (a: number) => [number, number];
export const __wbg_datacontractcreatetransition_free: (a: number, b: number) => void;
export const datacontractcreatetransition_new: (a: any) => [number, number, number];
export const datacontractcreatetransition_getDataContract: (a: number, b: number) => [number, number, number];
export const datacontractcreatetransition_getIdentityNonce: (a: number) => bigint;
export const datacontractcreatetransition_getOwnerId: (a: number) => any;
export const datacontractcreatetransition_setUserFeeIncrease: (a: number, b: number) => void;
export const datacontractcreatetransition_getUserFeeIncrease: (a: number) => number;
export const datacontractcreatetransition_getSignature: (a: number) => any;
export const datacontractcreatetransition_getSignaturePublicKeyId: (a: number) => number;
export const datacontractcreatetransition_toBuffer: (a: number) => [number, number, number];
export const datacontractcreatetransition_fromBuffer: (a: number, b: number) => [number, number, number];
export const datacontractcreatetransition_getModifiedDataIds: (a: number) => [number, number];
export const datacontractcreatetransition_toObject: (a: number, b: number) => [number, number, number];
export const datacontractcreatetransition_sign: (a: number, b: number, c: number, d: number, e: any) => [number, number];
export const datacontractcreatetransition_verifySignature: (a: number, b: number, c: any) => [number, number, number];
export const __wbg_tokenconfiguration_free: (a: number, b: number) => void;
export const tokenconfiguration_keepsHistory: (a: number) => number;
export const __wbg_tokenkeepshistoryrules_free: (a: number, b: number) => void;
export const tokenkeepshistoryrules_keepsTransferHistory: (a: number) => number;
export const tokenkeepshistoryrules_keepsFreezingHistory: (a: number) => number;
export const tokenkeepshistoryrules_keepsMintingHistory: (a: number) => number;
export const tokenkeepshistoryrules_keepsBurningHistory: (a: number) => number;
export const __wbg_batchedtransition_free: (a: number, b: number) => void;
export const __wbg_documentcreatetransition_free: (a: number, b: number) => void;
export const documentcreatetransition_getRevision: (a: number) => bigint;
export const documentcreatetransition_INITIAL_REVISION: () => bigint;
export const documentcreatetransition_getEntropy: (a: number) => [number, number];
export const documentcreatetransition_getIdentityContractNonce: (a: number) => bigint;
export const documentcreatetransition_setIdentityContractNonce: (a: number, b: bigint) => void;
export const documentcreatetransition_getPrefundedVotingBalance: (a: number) => [number, number, number];
export const __wbg_tokenclaimtransition_free: (a: number, b: number) => void;
export const tokenclaimtransition_getPublicNote: (a: number) => [number, number];
export const tokenclaimtransition_getDistributionType: (a: number) => number;
export const __wbg_tokendestroyfrozenfundstransition_free: (a: number, b: number) => void;
export const tokendestroyfrozenfundstransition_getFrozenIdentityId: (a: number) => any;
export const tokendestroyfrozenfundstransition_getPublicNote: (a: number) => [number, number];
export const __wbg_tokendirectpurchasetransition_free: (a: number, b: number) => void;
export const __wbg_tokenminttransition_free: (a: number, b: number) => void;
export const tokenminttransition_getRecipientId: (a: number, b: number) => [number, number, number];
export const tokenminttransition_getIssuedToIdentityId: (a: number) => any;
export const tokenminttransition_getPublicNote: (a: number) => [number, number];
export const tokenminttransition_getAmount: (a: number) => bigint;
export const __wbg_tokensetpricefordirectpurchasetransition_free: (a: number, b: number) => void;
export const tokensetpricefordirectpurchasetransition_getPublicNote: (a: number) => [number, number];
export const tokensetpricefordirectpurchasetransition_getPrice: (a: number) => [number, bigint];
export const __wbg_tokentransfertransition_free: (a: number, b: number) => void;
export const tokentransfertransition_getRecipientId: (a: number) => any;
export const tokentransfertransition_getPublicNote: (a: number) => [number, number];
export const tokentransfertransition_getAmount: (a: number) => bigint;
export const __wbg_tokentransition_free: (a: number, b: number) => void;
export const tokentransition_getTransitionType: (a: number) => number;
export const tokentransition_getTokenId: (a: number) => any;
export const tokentransition_getTokenContractPosition: (a: number) => any;
export const tokentransition_getDataContractId: (a: number) => any;
export const tokentransition_getHistoricalDocumentTypeName: (a: number) => [number, number];
export const tokentransition_getHistoricalDocumentId: (a: number, b: any) => any;
export const tokentransition_getIdentityContractNonce: (a: number) => bigint;
export const tokentransition_toTransition: (a: number) => any;
export const __wbg_batchtransition_free: (a: number, b: number) => void;
export const batchtransition_getType: (a: number) => number;
export const batchtransition_getOwnerId: (a: number) => any;
export const batchtransition_getUserFeeIncrease: (a: number) => number;
export const batchtransition_setUserFeeIncrease: (a: number, b: number) => void;
export const batchtransition_getTransitions: (a: number) => any;
export const batchtransition_setTransitions: (a: number, b: any) => [number, number];
export const batchtransition_setIdentityContractNonce: (a: number, b: bigint) => void;
export const batchtransition_getModifiedDataIds: (a: number) => any;
export const batchtransition_getSignaturePublicKeyId: (a: number) => number;
export const batchtransition_sign: (a: number, b: number, c: number, d: number, e: any) => [number, number];
export const batchtransition_verifySignature: (a: number, b: number, c: any) => [number, number, number];
export const batchtransition_setSignaturePublicKeyId: (a: number, b: number) => void;
export const batchtransition_getKeySecurityLevelRequirement: (a: number, b: number) => [number, number, number];
export const batchtransition_getSignature: (a: number) => [number, number];
export const batchtransition_setSignature: (a: number, b: number, c: number) => void;
export const batchtransition_isDataContractStateTransition: (a: number) => number;
export const batchtransition_toBuffer: (a: number) => [number, number, number];
export const __wbg_duplicatedocumenttransitionswithindiceserror_free: (a: number, b: number) => void;
export const duplicatedocumenttransitionswithindiceserror_getDocumentTransitionReferences: (a: number) => any;
export const duplicatedocumenttransitionswithindiceserror_getCode: (a: number) => number;
export const duplicatedocumenttransitionswithindiceserror_message: (a: number) => [number, number];
export const __wbg_invaliddocumenttypeerror_free: (a: number, b: number) => void;
export const invaliddocumenttypeerror_getType: (a: number) => [number, number];
export const invaliddocumenttypeerror_getDataContractId: (a: number) => any;
export const invaliddocumenttypeerror_getCode: (a: number) => number;
export const invaliddocumenttypeerror_message: (a: number) => [number, number];
export const __wbg_duplicatedidentitypublickeyiderror_free: (a: number, b: number) => void;
export const duplicatedidentitypublickeyiderror_getDuplicatedIds: (a: number) => any;
export const duplicatedidentitypublickeyiderror_getCode: (a: number) => number;
export const duplicatedidentitypublickeyiderror_message: (a: number) => [number, number];
export const __wbg_invalididentitycredittransferamounterror_free: (a: number, b: number) => void;
export const invalididentitycredittransferamounterror_getAmount: (a: number) => bigint;
export const invalididentitycredittransferamounterror_getMinAmount: (a: number) => bigint;
export const invalididentitycredittransferamounterror_getCode: (a: number) => number;
export const invalididentitycredittransferamounterror_message: (a: number) => [number, number];
export const __wbg_invalidinstantassetlockprooferror_free: (a: number, b: number) => void;
export const invalidinstantassetlockprooferror_getCode: (a: number) => number;
export const invalidinstantassetlockprooferror_message: (a: number) => [number, number];
export const __wbg_invalidstatetransitiontypeerror_free: (a: number, b: number) => void;
export const invalidstatetransitiontypeerror_new: (a: number) => number;
export const invalidstatetransitiontypeerror_getType: (a: number) => number;
export const invalidstatetransitiontypeerror_getCode: (a: number) => number;
export const invalidstatetransitiontypeerror_message: (a: number) => [number, number];
export const __wbg_basicecdsaerror_free: (a: number, b: number) => void;
export const basicecdsaerror_getCode: (a: number) => number;
export const basicecdsaerror_message: (a: number) => [number, number];
export const __wbg_datacontractisreadonlyerror_free: (a: number, b: number) => void;
export const datacontractisreadonlyerror_new: (a: any) => number;
export const datacontractisreadonlyerror_getDataContractId: (a: number) => any;
export const datacontractisreadonlyerror_getCode: (a: number) => number;
export const datacontractisreadonlyerror_message: (a: number) => [number, number];
export const __wbg_duplicateuniqueindexerror_free: (a: number, b: number) => void;
export const duplicateuniqueindexerror_getDocumentId: (a: number) => any;
export const duplicateuniqueindexerror_getDuplicatingProperties: (a: number) => any;
export const duplicateuniqueindexerror_getCode: (a: number) => number;
export const duplicateuniqueindexerror_message: (a: number) => [number, number];
export const __wbg_invalididentitypublickeyiderror_free: (a: number, b: number) => void;
export const invalididentitypublickeyiderror_getId: (a: number) => number;
export const invalididentitypublickeyiderror_getCode: (a: number) => number;
export const invalididentitypublickeyiderror_message: (a: number) => [number, number];
export const __wbg_platformvalueerror_free: (a: number, b: number) => void;
export const platformvalueerror_getMessage: (a: number) => [number, number];
export const platformvalueerror_toString: (a: number) => [number, number];
export const __wbg_identitypublickey_free: (a: number, b: number) => void;
export const identitypublickey_new: (a: number) => [number, number, number];
export const identitypublickey_getId: (a: number) => number;
export const identitypublickey_setId: (a: number, b: number) => void;
export const identitypublickey_getType: (a: number) => number;
export const identitypublickey_setType: (a: number, b: number) => [number, number];
export const identitypublickey_setData: (a: number, b: number, c: number) => [number, number];
export const identitypublickey_getData: (a: number) => any;
export const identitypublickey_setPurpose: (a: number, b: number) => [number, number];
export const identitypublickey_getPurpose: (a: number) => number;
export const identitypublickey_setSecurityLevel: (a: number, b: number) => [number, number];
export const identitypublickey_getSecurityLevel: (a: number) => number;
export const identitypublickey_setReadOnly: (a: number, b: number) => void;
export const identitypublickey_isReadOnly: (a: number) => number;
export const identitypublickey_setDisabledAt: (a: number, b: any) => void;
export const identitypublickey_getDisabledAt: (a: number) => any;
export const identitypublickey_hash: (a: number) => [number, number, number, number];
export const identitypublickey_isMaster: (a: number) => number;
export const identitypublickey_toJSON: (a: number) => [number, number, number];
export const identitypublickey_toObject: (a: number) => [number, number, number];
export const identitypublickey_toBuffer: (a: number) => [number, number, number];
export const identitypublickey_fromBuffer: (a: number, b: number) => [number, number, number];
export const __wbg_assetlockproof_free: (a: number, b: number) => void;
export const assetlockproof_new: (a: any) => [number, number, number];
export const assetlockproof_createIdentifier: (a: number) => [number, number, number];
export const assetlockproof_toObject: (a: number) => [number, number, number];
export const createAssetLockProofInstance: (a: any) => [number, number, number];
export const __wbg_identitycreatetransition_free: (a: number, b: number) => void;
export const identitycreatetransition_new: (a: number) => [number, number, number];
export const identitycreatetransition_setAssetLockProof: (a: number, b: any) => [number, number];
export const identitycreatetransition_assetLockProof: (a: number) => any;
export const identitycreatetransition_getAssetLockProof: (a: number) => any;
export const identitycreatetransition_setPublicKeys: (a: number, b: number, c: number) => [number, number];
export const identitycreatetransition_addPublicKeys: (a: number, b: number, c: number) => [number, number];
export const identitycreatetransition_getPublicKeys: (a: number) => [number, number];
export const identitycreatetransition_publicKeys: (a: number) => [number, number];
export const identitycreatetransition_getType: (a: number) => number;
export const identitycreatetransition_getIdentityId: (a: number) => any;
export const identitycreatetransition_getUserFeeIncrease: (a: number) => number;
export const identitycreatetransition_setUserFeeIncrease: (a: number, b: number) => void;
export const identitycreatetransition_toObject: (a: number, b: any) => [number, number, number];
export const identitycreatetransition_toBuffer: (a: number) => [number, number, number];
export const identitycreatetransition_toJSON: (a: number) => [number, number, number];
export const identitycreatetransition_getModifiedDataIds: (a: number) => [number, number];
export const identitycreatetransition_isDataContractStateTransition: (a: number) => number;
export const identitycreatetransition_isIdentityStateTransition: (a: number) => number;
export const identitycreatetransition_signByPrivateKey: (a: number, b: number, c: number, d: number, e: number) => [number, number];
export const identitycreatetransition_getSignature: (a: number) => any;
export const identitycreatetransition_setSignature: (a: number, b: number, c: number) => void;
export const __wbg_identitypublickeywithwitness_free: (a: number, b: number) => void;
export const identitypublickeywithwitness_new: (a: number) => [number, number, number];
export const identitypublickeywithwitness_getId: (a: number) => number;
export const identitypublickeywithwitness_setId: (a: number, b: number) => void;
export const identitypublickeywithwitness_getType: (a: number) => number;
export const identitypublickeywithwitness_setType: (a: number, b: number) => [number, number];
export const identitypublickeywithwitness_setData: (a: number, b: number, c: number) => [number, number];
export const identitypublickeywithwitness_getData: (a: number) => any;
export const identitypublickeywithwitness_setPurpose: (a: number, b: number) => [number, number];
export const identitypublickeywithwitness_getPurpose: (a: number) => number;
export const identitypublickeywithwitness_setSecurityLevel: (a: number, b: number) => [number, number];
export const identitypublickeywithwitness_setContractBounds: (a: number, b: any, c: number, d: number) => void;
export const identitypublickeywithwitness_getSecurityLevel: (a: number) => number;
export const identitypublickeywithwitness_setReadOnly: (a: number, b: number) => void;
export const identitypublickeywithwitness_isReadOnly: (a: number) => number;
export const identitypublickeywithwitness_setSignature: (a: number, b: number, c: number) => void;
export const identitypublickeywithwitness_getSignature: (a: number) => [number, number];
export const identitypublickeywithwitness_hash: (a: number) => [number, number, number, number];
export const identitypublickeywithwitness_toJSON: (a: number) => [number, number, number];
export const identitypublickeywithwitness_toObject: (a: number, b: number) => [number, number, number];
export const __wbg_identityupdatetransition_free: (a: number, b: number) => void;
export const identityupdatetransition_new: (a: number) => [number, number, number];
export const identityupdatetransition_setPublicKeysToAdd: (a: number, b: number, c: number) => [number, number];
export const identityupdatetransition_getPublicKeysToAdd: (a: number) => [number, number];
export const identityupdatetransition_addPublicKeys: (a: number) => [number, number];
export const identityupdatetransition_getPublicKeyIdsToDisable: (a: number) => [number, number];
export const identityupdatetransition_setPublicKeyIdsToDisable: (a: number, b: number, c: number) => void;
export const identityupdatetransition_getType: (a: number) => number;
export const identityupdatetransition_getIdentityId: (a: number) => any;
export const identityupdatetransition_setIdentityId: (a: number, b: any) => void;
export const identityupdatetransition_getUserFeeIncrease: (a: number) => number;
export const identityupdatetransition_setUserFeeIncrease: (a: number, b: number) => void;
export const identityupdatetransition_getIdentityContractNonce: (a: number) => bigint;
export const identityupdatetransition_setIdentityContractNonce: (a: number, b: bigint) => void;
export const identityupdatetransition_toObject: (a: number, b: any) => [number, number, number];
export const identityupdatetransition_toBuffer: (a: number) => [number, number, number];
export const identityupdatetransition_toJSON: (a: number) => [number, number, number];
export const identityupdatetransition_getModifiedDataIds: (a: number) => [number, number];
export const identityupdatetransition_signByPrivateKey: (a: number, b: number, c: number, d: number, e: number) => [number, number];
export const identityupdatetransition_setSignaturePublicKeyId: (a: number, b: number) => void;
export const identityupdatetransition_getSignature: (a: number) => any;
export const identityupdatetransition_getSignaturePublicKeyId: (a: number) => number;
export const identityupdatetransition_setSignature: (a: number, b: number, c: number) => void;
export const identityupdatetransition_getRevision: (a: number) => bigint;
export const identityupdatetransition_setRevision: (a: number, b: bigint) => void;
export const identityupdatetransition_sign: (a: number, b: number, c: number, d: number, e: any) => [number, number];
export const identityupdatetransition_verifySignature: (a: number, b: number, c: any) => [number, number, number];
export const tokendirectpurchasetransition_getTokenCount: (a: number) => bigint;
export const tokendirectpurchasetransition_getTotalAgreedPrice: (a: number) => bigint;
export const datacontractcreatetransition_isDocumentStateTransition: (a: number) => number;
export const datacontractcreatetransition_isIdentityStateTransition: (a: number) => number;
export const datacontractcreatetransition_isVotingStateTransition: (a: number) => number;
export const datacontractcreatetransition_isDataContractStateTransition: (a: number) => number;
export const batchtransition_isDocumentStateTransition: (a: number) => number;
export const datacontractcreatetransition_getType: (a: number) => number;
export const batchtransition_isIdentityStateTransition: (a: number) => number;
export const batchtransition_isVotingStateTransition: (a: number) => number;
export const identitycreatetransition_isDocumentStateTransition: (a: number) => number;
export const identitycreatetransition_isVotingStateTransition: (a: number) => number;
export const identityupdatetransition_isDataContractStateTransition: (a: number) => number;
export const identityupdatetransition_isDocumentStateTransition: (a: number) => number;
export const identityupdatetransition_isIdentityStateTransition: (a: number) => number;
export const identityupdatetransition_isVotingStateTransition: (a: number) => number;
export const platformvalueerror_valueOf: (a: number) => [number, number];
export const identityupdatetransition_identityId: (a: number) => any;
export const identityupdatetransition_getOwnerId: (a: number) => any;
export const identitycreatetransition_identityId: (a: number) => any;
export const identitycreatetransition_getOwnerId: (a: number) => any;
export const __wbg_dashplatformprotocol_free: (a: number, b: number) => void;
export const dashplatformprotocol_new: (a: any, b: number) => [number, number, number];
export const dashplatformprotocol_data_contract: (a: number) => number;
export const dashplatformprotocol_document: (a: number) => number;
export const dashplatformprotocol_identity: (a: number) => number;
export const dashplatformprotocol_state_transition: (a: number) => number;
export const dashplatformprotocol_protocol_version: (a: number) => number;
export const __wbg_documentfacade_free: (a: number, b: number) => void;
export const documentfacade_new: (a: number) => number;
export const documentfacade_create: (a: number, b: number, c: any, d: number, e: number, f: any) => [number, number, number];
export const documentfacade_createExtendedDocumentFromDocumentBuffer: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const documentfacade_createStateTransition: (a: number, b: any, c: any) => [number, number, number];
export const __wbg_extendeddocument_free: (a: number, b: number) => void;
export const extendeddocument_new: (a: any, b: number) => [number, number, number];
export const extendeddocument_getFeatureVersion: (a: number) => number;
export const extendeddocument_getId: (a: number) => any;
export const extendeddocument_setId: (a: number, b: any) => void;
export const extendeddocument_getType: (a: number) => [number, number];
export const extendeddocument_setType: (a: number, b: number, c: number) => void;
export const extendeddocument_getDataContractId: (a: number) => any;
export const extendeddocument_getDataContract: (a: number) => number;
export const extendeddocument_setDataContractId: (a: number, b: any) => [number, number];
export const extendeddocument_getDocument: (a: number) => number;
export const extendeddocument_setOwnerId: (a: number, b: any) => void;
export const extendeddocument_getOwnerId: (a: number) => any;
export const extendeddocument_setRevision: (a: number, b: number, c: bigint) => void;
export const extendeddocument_getRevision: (a: number) => [number, bigint];
export const extendeddocument_setEntropy: (a: number, b: number, c: number) => [number, number];
export const extendeddocument_getEntropy: (a: number) => any;
export const extendeddocument_setData: (a: number, b: any) => [number, number];
export const extendeddocument_getData: (a: number) => [number, number, number];
export const extendeddocument_set: (a: number, b: number, c: number, d: any) => [number, number];
export const extendeddocument_get: (a: number, b: number, c: number) => any;
export const extendeddocument_setCreatedAt: (a: number, b: number) => void;
export const extendeddocument_setUpdatedAt: (a: number, b: number) => void;
export const extendeddocument_getCreatedAt: (a: number) => any;
export const extendeddocument_getUpdatedAt: (a: number) => any;
export const extendeddocument_getMetadata: (a: number) => number;
export const extendeddocument_setMetadata: (a: number, b: any) => [number, number];
export const extendeddocument_toObject: (a: number, b: any) => [number, number, number];
export const extendeddocument_toJSON: (a: number) => [number, number, number];
export const extendeddocument_toBuffer: (a: number) => [number, number, number];
export const extendeddocument_hash: (a: number) => [number, number, number];
export const extendeddocument_clone: (a: number) => number;
export const extendeddocument_validate: (a: number, b: number) => [number, number, number];
export const __wbg_datacontracterror_free: (a: number, b: number) => void;
export const datacontracterror_getCode: (a: number) => number;
export const datacontracterror_message: (a: number) => [number, number];
export const __wbg_datacontractuniqueindiceschangederror_free: (a: number, b: number) => void;
export const datacontractuniqueindiceschangederror_getDocumentType: (a: number) => [number, number];
export const datacontractuniqueindiceschangederror_getIndexName: (a: number) => [number, number];
export const datacontractuniqueindiceschangederror_getCode: (a: number) => number;
export const datacontractuniqueindiceschangederror_message: (a: number) => [number, number];
export const __wbg_datacontractemptyschemaerror_free: (a: number, b: number) => void;
export const datacontractemptyschemaerror_getDataContractId: (a: number) => any;
export const datacontractemptyschemaerror_getCode: (a: number) => number;
export const datacontractemptyschemaerror_message: (a: number) => [number, number];
export const __wbg_missingdatacontractiderror_free: (a: number, b: number) => void;
export const missingdatacontractiderror_getCode: (a: number) => number;
export const missingdatacontractiderror_message: (a: number) => [number, number];
export const __wbg_identityassetlockprooflockedtransactionmismatcherror_free: (a: number, b: number) => void;
export const identityassetlockprooflockedtransactionmismatcherror_getInstantLockTransactionId: (a: number) => any;
export const identityassetlockprooflockedtransactionmismatcherror_getAssetLockTransactionId: (a: number) => any;
export const identityassetlockprooflockedtransactionmismatcherror_getCode: (a: number) => number;
export const identityassetlockprooflockedtransactionmismatcherror_message: (a: number) => [number, number];
export const __wbg_identityassetlocktransactionoutputnotfounderror_free: (a: number, b: number) => void;
export const identityassetlocktransactionoutputnotfounderror_getCode: (a: number) => number;
export const identityassetlocktransactionoutputnotfounderror_message: (a: number) => [number, number];
export const __wbg_invalididentitycreditwithdrawaltransitionoutputscripterror_free: (a: number, b: number) => void;
export const invalididentitycreditwithdrawaltransitionoutputscripterror_getCode: (a: number) => number;
export const invalididentitycreditwithdrawaltransitionoutputscripterror_message: (a: number) => [number, number];
export const __wbg_invalididentitykeysignatureerror_free: (a: number, b: number) => void;
export const invalididentitykeysignatureerror_getCode: (a: number) => number;
export const invalididentitykeysignatureerror_message: (a: number) => [number, number];
export const __wbg_invalididentitypublickeydataerror_free: (a: number, b: number) => void;
export const invalididentitypublickeydataerror_getPublicKeyId: (a: number) => number;
export const invalididentitypublickeydataerror_getValidationError: (a: number) => [number, number];
export const invalididentitypublickeydataerror_getCode: (a: number) => number;
export const invalididentitypublickeydataerror_message: (a: number) => [number, number];
export const __wbg_invalididentitypublickeytypeerror_free: (a: number, b: number) => void;
export const invalididentitypublickeytypeerror_new: (a: number) => [number, number, number];
export const invalididentitypublickeytypeerror_getPublicKeyType: (a: number) => number;
export const invalididentitypublickeytypeerror_getCode: (a: number) => number;
export const invalididentitypublickeytypeerror_message: (a: number) => [number, number];
export const __wbg_publickeysecuritylevelnotmeterror_free: (a: number, b: number) => void;
export const publickeysecuritylevelnotmeterror_getPublicKeySecurityLevel: (a: number) => number;
export const publickeysecuritylevelnotmeterror_getKeySecurityLevelRequirement: (a: number) => number;
export const publickeysecuritylevelnotmeterror_getCode: (a: number) => number;
export const publickeysecuritylevelnotmeterror_message: (a: number) => [number, number];
export const __wbg_missingstatetransitiontypeerror_free: (a: number, b: number) => void;
export const missingstatetransitiontypeerror_new: () => number;
export const missingstatetransitiontypeerror_getCode: (a: number) => number;
export const missingstatetransitiontypeerror_message: (a: number) => [number, number];
export const __wbg_unsupportedprotocolversionerror_free: (a: number, b: number) => void;
export const unsupportedprotocolversionerror_getLatestVersion: (a: number) => number;
export const unsupportedprotocolversionerror_getCode: (a: number) => number;
export const unsupportedprotocolversionerror_message: (a: number) => [number, number];
export const __wbg_duplicatedidentitypublickeyidstateerror_free: (a: number, b: number) => void;
export const duplicatedidentitypublickeyidstateerror_getDuplicatedIds: (a: number) => any;
export const duplicatedidentitypublickeyidstateerror_getCode: (a: number) => number;
export const duplicatedidentitypublickeyidstateerror_message: (a: number) => [number, number];
export const __wbg_valueerror_free: (a: number, b: number) => void;
export const valueerror_getMessage: (a: number) => [number, number];
export const valueerror_getCode: (a: number) => number;
export const valueerror_message: (a: number) => [number, number];
export const __wbg_identity_free: (a: number, b: number) => void;
export const identity_new: (a: number) => [number, number, number];
export const identity_getId: (a: number) => any;
export const identity_setId: (a: number, b: any) => void;
export const identity_setPublicKeys: (a: number, b: any) => [number, number, number];
export const identity_getPublicKeys: (a: number) => [number, number];
export const identity_getPublicKeyById: (a: number, b: number) => number;
export const identity_balance: (a: number) => bigint;
export const identity_setBalance: (a: number, b: bigint) => void;
export const identity_increaseBalance: (a: number, b: bigint) => bigint;
export const identity_reduceBalance: (a: number, b: bigint) => bigint;
export const identity_setRevision: (a: number, b: bigint) => void;
export const identity_getRevision: (a: number) => bigint;
export const identity_setMetadata: (a: number, b: any) => [number, number];
export const identity_getMetadata: (a: number) => number;
export const identity_from: (a: any) => number;
export const identity_toJSON: (a: number) => [number, number, number];
export const identity_toObject: (a: number) => [number, number, number];
export const identity_toBuffer: (a: number) => [number, number, number];
export const identity_hash: (a: number) => [number, number, number, number];
export const identity_addPublicKey: (a: number, b: number) => void;
export const identity_addPublicKeys: (a: number, b: any) => [number, number];
export const identity_getPublicKeyMaxId: (a: number) => number;
export const identity_fromBuffer: (a: number, b: number) => [number, number, number];
export const __wbg_chainassetlockproof_free: (a: number, b: number) => void;
export const chainassetlockproof_new: (a: any) => [number, number, number];
export const chainassetlockproof_getType: (a: number) => number;
export const chainassetlockproof_getCoreChainLockedHeight: (a: number) => number;
export const chainassetlockproof_setCoreChainLockedHeight: (a: number, b: number) => void;
export const chainassetlockproof_getOutPoint: (a: number) => [number, number, number];
export const chainassetlockproof_setOutPoint: (a: number, b: number, c: number) => [number, number];
export const chainassetlockproof_toJSON: (a: number) => [number, number, number];
export const chainassetlockproof_toObject: (a: number) => [number, number, number];
export const chainassetlockproof_createIdentifier: (a: number) => any;
export const __wbg_metadata_free: (a: number, b: number) => void;
export const metadata_new: (a: bigint, b: number, c: bigint, d: number) => [number, number, number];
export const metadata_from: (a: any) => [number, number, number];
export const metadata_toJSON: (a: number) => any;
export const metadata_toObject: (a: number) => any;
export const metadata_getBlockHeight: (a: number) => bigint;
export const metadata_getCoreChainLockedHeight: (a: number) => number;
export const metadata_getTimeMs: (a: number) => bigint;
export const metadata_getProtocolVersion: (a: number) => number;
export const __wbg_statetransitionfactory_free: (a: number, b: number) => void;
export const statetransitionfactory_createFromBuffer: (a: number, b: number, c: number, d: any) => any;
export const invalididentitykeysignatureerror_getPublicKeyId: (a: number) => number;
export const unsupportedprotocolversionerror_getParsedProtocolVersion: (a: number) => number;
export const identity_getBalance: (a: number) => bigint;
export const identityassetlocktransactionoutputnotfounderror_getOutputIndex: (a: number) => number;
export const __wbg_mismatchowneridserror_free: (a: number, b: number) => void;
export const mismatchowneridserror_new: (a: number, b: number) => number;
export const mismatchowneridserror_getDocuments: (a: number) => [number, number];
export const __wbg_invalidcompoundindexerror_free: (a: number, b: number) => void;
export const invalidcompoundindexerror_getDocumentType: (a: number) => [number, number];
export const invalidcompoundindexerror_getIndexName: (a: number) => [number, number];
export const invalidcompoundindexerror_getCode: (a: number) => number;
export const invalidcompoundindexerror_message: (a: number) => [number, number];
export const __wbg_invaliddatacontractiderror_free: (a: number, b: number) => void;
export const invaliddatacontractiderror_getExpectedId: (a: number) => any;
export const invaliddatacontractiderror_getInvalidId: (a: number) => any;
export const invaliddatacontractiderror_getCode: (a: number) => number;
export const invaliddatacontractiderror_message: (a: number) => [number, number];
export const __wbg_invaliddatacontractversionerror_free: (a: number, b: number) => void;
export const invaliddatacontractversionerror_getExpectedVersion: (a: number) => number;
export const invaliddatacontractversionerror_getVersion: (a: number) => number;
export const invaliddatacontractversionerror_getCode: (a: number) => number;
export const invaliddatacontractversionerror_message: (a: number) => [number, number];
export const __wbg_invalidjsonschemareferror_free: (a: number, b: number) => void;
export const invalidjsonschemareferror_getRefError: (a: number) => [number, number];
export const invalidjsonschemareferror_getCode: (a: number) => number;
export const invalidjsonschemareferror_message: (a: number) => [number, number];
export const __wbg_documenttransitionsareabsenterror_free: (a: number, b: number) => void;
export const documenttransitionsareabsenterror_getCode: (a: number) => number;
export const documenttransitionsareabsenterror_message: (a: number) => [number, number];
export const __wbg_duplicatedocumenttransitionswithidserror_free: (a: number, b: number) => void;
export const duplicatedocumenttransitionswithidserror_getDocumentTransitionReferences: (a: number) => any;
export const duplicatedocumenttransitionswithidserror_getCode: (a: number) => number;
export const duplicatedocumenttransitionswithidserror_message: (a: number) => [number, number];
export const __wbg_invaliddocumenttransitionactionerror_free: (a: number, b: number) => void;
export const invaliddocumenttransitionactionerror_getAction: (a: number) => [number, number];
export const invaliddocumenttransitionactionerror_getCode: (a: number) => number;
export const invaliddocumenttransitionactionerror_message: (a: number) => [number, number];
export const __wbg_invalididentitycreditwithdrawaltransitioncorefeeerror_free: (a: number, b: number) => void;
export const invalididentitycreditwithdrawaltransitioncorefeeerror_getCode: (a: number) => number;
export const invalididentitycreditwithdrawaltransitioncorefeeerror_message: (a: number) => [number, number];
export const __wbg_missingpublickeyerror_free: (a: number, b: number) => void;
export const missingpublickeyerror_getCode: (a: number) => number;
export const missingpublickeyerror_message: (a: number) => [number, number];
export const __wbg_invalidsignaturepublickeysecuritylevelerror_free: (a: number, b: number) => void;
export const invalidsignaturepublickeysecuritylevelerror_getPublicKeySecurityLevel: (a: number) => number;
export const invalidsignaturepublickeysecuritylevelerror_getKeySecurityLevelRequirement: (a: number) => any;
export const invalidsignaturepublickeysecuritylevelerror_getCode: (a: number) => number;
export const invalidsignaturepublickeysecuritylevelerror_message: (a: number) => [number, number];
export const __wbg_datacontractalreadypresenterror_free: (a: number, b: number) => void;
export const datacontractalreadypresenterror_new: (a: any) => number;
export const datacontractalreadypresenterror_getDataContractId: (a: number) => any;
export const datacontractalreadypresenterror_getCode: (a: number) => number;
export const datacontractalreadypresenterror_message: (a: number) => [number, number];
export const datacontractalreadypresenterror_serialize: (a: number) => [number, number, number];
export const __wbg_datacontractupdatepermissionerror_free: (a: number, b: number) => void;
export const datacontractupdatepermissionerror_new: (a: any, b: any) => number;
export const datacontractupdatepermissionerror_getDataContractId: (a: number) => any;
export const datacontractupdatepermissionerror_getIdentityId: (a: number) => any;
export const datacontractupdatepermissionerror_getCode: (a: number) => number;
export const datacontractupdatepermissionerror_message: (a: number) => [number, number];
export const __wbg_datatriggerconditionerror_free: (a: number, b: number) => void;
export const datatriggerconditionerror_getDataContractId: (a: number) => any;
export const datatriggerconditionerror_getDocumentId: (a: number) => any;
export const datatriggerconditionerror_getMessage: (a: number) => [number, number];
export const datatriggerconditionerror_getCode: (a: number) => number;
export const datatriggerconditionerror_message: (a: number) => [number, number];
export const datatriggerconditionerror_serialize: (a: number) => [number, number, number];
export const __wbg_datatriggeractionconditionerror_free: (a: number, b: number) => void;
export const datatriggeractionconditionerror_getDataContractId: (a: number) => any;
export const datatriggeractionconditionerror_getDocumentTransitionId: (a: number) => any;
export const datatriggeractionconditionerror_getMessage: (a: number) => [number, number];
export const datatriggeractionconditionerror_getOwnerId: (a: number) => any;
export const datatriggeractionconditionerror_getCode: (a: number) => number;
export const __wbg_documentalreadypresenterror_free: (a: number, b: number) => void;
export const documentalreadypresenterror_getDocumentId: (a: number) => any;
export const documentalreadypresenterror_getCode: (a: number) => number;
export const documentalreadypresenterror_message: (a: number) => [number, number];
export const __wbg_documenttimestampsmismatcherror_free: (a: number, b: number) => void;
export const documenttimestampsmismatcherror_getDocumentId: (a: number) => any;
export const documenttimestampsmismatcherror_getCode: (a: number) => number;
export const documenttimestampsmismatcherror_message: (a: number) => [number, number];
export const __wbg_identityfacade_free: (a: number, b: number) => void;
export const identityfacade_create: (a: number, b: any, c: any) => [number, number, number];
export const identityfacade_createFromBuffer: (a: number, b: number, c: number, d: number) => [number, number, number];
export const identityfacade_createInstantAssetLockProof: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const identityfacade_createChainAssetLockProof: (a: number, b: number, c: number, d: number) => [number, number, number];
export const identityfacade_createIdentityCreateTransition: (a: number, b: number, c: any) => [number, number, number];
export const identityfacade_createIdentityTopUpTransition: (a: number, b: any, c: any) => [number, number, number];
export const identityfacade_createIdentityCreditWithdrawalTransition: (a: number, b: any, c: bigint, d: number, e: number, f: number, g: number, h: bigint) => [number, number, number];
export const identityfacade_createIdentityCreditTransferTransition: (a: number, b: number, c: any, d: bigint, e: bigint) => [number, number, number];
export const identityfacade_createIdentityUpdateTransition: (a: number, b: number, c: bigint, d: any) => [number, number, number];
export const __wbg_nonconsensuserrorwasm_free: (a: number, b: number) => void;
export const __wbg_identityfactory_free: (a: number, b: number) => void;
export const identityfactory_new: (a: number) => [number, number, number];
export const identityfactory_create: (a: number, b: any, c: any) => [number, number, number];
export const identityfactory_createFromBuffer: (a: number, b: number, c: number, d: any) => [number, number, number];
export const identityfactory_createInstantAssetLockProof: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const identityfactory_createChainAssetLockProof: (a: number, b: number, c: number, d: number) => [number, number, number];
export const identityfactory_createIdentityCreateTransition: (a: number, b: number, c: any) => [number, number, number];
export const identityfactory_createIdentityTopUpTransition: (a: number, b: any, c: any) => [number, number, number];
export const identityfactory_createIdentityCreditTransferTransition: (a: number, b: number, c: any, d: bigint, e: bigint) => [number, number, number];
export const identityfactory_createIdentityCreditWithdrawalTransition: (a: number, b: any, c: bigint, d: number, e: number, f: number, g: number, h: bigint) => [number, number, number];
export const identityfactory_createIdentityUpdateTransition: (a: number, b: number, c: bigint, d: any) => [number, number, number];
export const __wbg_assetlocktransactionisnotfounderror_free: (a: number, b: number) => void;
export const assetlocktransactionisnotfounderror_getTransactionId: (a: number) => any;
export const invalididentitycreditwithdrawaltransitioncorefeeerror_getCoreFee: (a: number) => number;
export const missingpublickeyerror_getPublicKeyId: (a: number) => number;
export const __wbg_datacontract_free: (a: number, b: number) => void;
export const datacontract_new: (a: any, b: number) => [number, number, number];
export const datacontract_getId: (a: number) => any;
export const datacontract_setId: (a: number, b: any) => [number, number];
export const datacontract_getOwnerId: (a: number) => any;
export const datacontract_getVersion: (a: number) => number;
export const datacontract_setVersion: (a: number, b: number) => void;
export const datacontract_incrementVersion: (a: number) => void;
export const datacontract_getBinaryProperties: (a: number, b: number, c: number) => [number, number, number];
export const datacontract_setDocumentSchemas: (a: number, b: any, c: number) => [number, number];
export const datacontract_setDocumentSchema: (a: number, b: number, c: number, d: any, e: number) => [number, number];
export const datacontract_getDocumentSchema: (a: number, b: number, c: number) => [number, number, number];
export const datacontract_getDocumentSchemas: (a: number) => any;
export const datacontract_getSchemaDefs: (a: number) => any;
export const datacontract_setSchemaDefs: (a: number, b: number, c: number) => [number, number];
export const datacontract_hasDocumentType: (a: number, b: number, c: number) => number;
export const datacontract_setIdentityNonce: (a: number, b: bigint) => [number, number];
export const datacontract_getIdentityNonce: (a: number) => bigint;
export const datacontract_toObject: (a: number) => [number, number, number];
export const datacontract_getConfig: (a: number) => [number, number, number];
export const datacontract_setConfig: (a: number, b: any) => [number, number];
export const datacontract_toJSON: (a: number) => [number, number, number];
export const datacontract_toBuffer: (a: number) => [number, number, number];
export const datacontract_hash: (a: number) => [number, number, number, number];
export const datacontract_clone: (a: number) => number;
export const datacontract_getTokenConfiguration: (a: number, b: number) => [number, number, number];
export const __wbg_documentnorevisionerror_free: (a: number, b: number) => void;
export const documentnorevisionerror_new: (a: number) => number;
export const documentnorevisionerror_getDocument: (a: number) => number;
export const __wbg_tryingtodeleteimmutabledocumenterror_free: (a: number, b: number) => void;
export const __wbg_tryingtoreplaceimmutabledocumenterror_free: (a: number, b: number) => void;
export const __wbg_tokenfreezetransition_free: (a: number, b: number) => void;
export const tokenfreezetransition_getFrozenIdentityId: (a: number) => any;
export const tokenfreezetransition_getPublicNote: (a: number) => [number, number];
export const __wbg_document_free: (a: number, b: number) => void;
export const document_new: (a: any, b: number, c: any) => [number, number, number];
export const document_getId: (a: number) => any;
export const document_setId: (a: number, b: any) => void;
export const document_setOwnerId: (a: number, b: any) => void;
export const document_getOwnerId: (a: number) => any;
export const document_setRevision: (a: number, b: number, c: bigint) => void;
export const document_getRevision: (a: number) => [number, bigint];
export const document_setData: (a: number, b: any) => [number, number];
export const document_getData: (a: number) => [number, number, number];
export const document_set: (a: number, b: number, c: number, d: any) => [number, number];
export const document_get: (a: number, b: number, c: number) => [number, number, number];
export const document_setCreatedAt: (a: number, b: number) => void;
export const document_setUpdatedAt: (a: number, b: number) => void;
export const document_getCreatedAt: (a: number) => any;
export const document_getUpdatedAt: (a: number) => any;
export const document_hash: (a: number, b: number, c: number, d: number) => [number, number, number];
export const document_clone: (a: number) => number;
export const __wbg_datacontractimmutablepropertiesupdateerror_free: (a: number, b: number) => void;
export const datacontractimmutablepropertiesupdateerror_getOperation: (a: number) => [number, number];
export const datacontractimmutablepropertiesupdateerror_getFieldPath: (a: number) => [number, number];
export const datacontractimmutablepropertiesupdateerror_getCode: (a: number) => number;
export const datacontractimmutablepropertiesupdateerror_message: (a: number) => [number, number];
export const __wbg_incompatibledocumenttypeschemaerror_free: (a: number, b: number) => void;
export const incompatibledocumenttypeschemaerror_getOperation: (a: number) => [number, number];
export const incompatibledocumenttypeschemaerror_getPropertyPath: (a: number) => [number, number];
export const incompatibledocumenttypeschemaerror_getCode: (a: number) => number;
export const incompatibledocumenttypeschemaerror_message: (a: number) => [number, number];
export const __wbg_invalidindexpropertytypeerror_free: (a: number, b: number) => void;
export const invalidindexpropertytypeerror_getDocumentType: (a: number) => [number, number];
export const invalidindexpropertytypeerror_getIndexName: (a: number) => [number, number];
export const invalidindexpropertytypeerror_getPropertyName: (a: number) => [number, number];
export const invalidindexpropertytypeerror_getPropertyType: (a: number) => [number, number];
export const invalidindexpropertytypeerror_getCode: (a: number) => number;
export const invalidindexpropertytypeerror_message: (a: number) => [number, number];
export const __wbg_uniqueindiceslimitreachederror_free: (a: number, b: number) => void;
export const uniqueindiceslimitreachederror_getDocumentType: (a: number) => [number, number];
export const uniqueindiceslimitreachederror_getIndexLimit: (a: number) => number;
export const uniqueindiceslimitreachederror_getCode: (a: number) => number;
export const uniqueindiceslimitreachederror_message: (a: number) => [number, number];
export const __wbg_invalidassetlockprooftransactionheighterror_free: (a: number, b: number) => void;
export const invalidassetlockprooftransactionheighterror_getProofCoreChainLockedHeight: (a: number) => number;
export const invalidassetlockprooftransactionheighterror_getTransactionHeight: (a: number) => number;
export const invalidassetlockprooftransactionheighterror_getCode: (a: number) => number;
export const invalidassetlockprooftransactionheighterror_message: (a: number) => [number, number];
export const __wbg_invalidassetlocktransactionoutputreturnsizeerror_free: (a: number, b: number) => void;
export const invalidassetlocktransactionoutputreturnsizeerror_getCode: (a: number) => number;
export const invalidassetlocktransactionoutputreturnsizeerror_message: (a: number) => [number, number];
export const __wbg_invalididentitypublickeysecuritylevelerror_free: (a: number, b: number) => void;
export const invalididentitypublickeysecuritylevelerror_getPublicKeyId: (a: number) => number;
export const invalididentitypublickeysecuritylevelerror_getPublicKeyPurpose: (a: number) => number;
export const invalididentitypublickeysecuritylevelerror_getPublicKeySecurityLevel: (a: number) => number;
export const invalididentitypublickeysecuritylevelerror_getCode: (a: number) => number;
export const invalididentitypublickeysecuritylevelerror_message: (a: number) => [number, number];
export const __wbg_incompatibleprotocolversionerror_free: (a: number, b: number) => void;
export const incompatibleprotocolversionerror_getMinimalProtocolVersion: (a: number) => number;
export const incompatibleprotocolversionerror_getCode: (a: number) => number;
export const incompatibleprotocolversionerror_message: (a: number) => [number, number];
export const __wbg_jsonschemacompilationerror_free: (a: number, b: number) => void;
export const jsonschemacompilationerror_getError: (a: number) => [number, number];
export const jsonschemacompilationerror_getCode: (a: number) => number;
export const jsonschemacompilationerror_message: (a: number) => [number, number];
export const __wbg_jsonschemaerror_free: (a: number, b: number) => void;
export const jsonschemaerror_getKeyword: (a: number) => [number, number];
export const jsonschemaerror_getInstancePath: (a: number) => [number, number];
export const jsonschemaerror_getSchemaPath: (a: number) => [number, number];
export const jsonschemaerror_getPropertyName: (a: number) => [number, number];
export const jsonschemaerror_getParams: (a: number) => [number, number, number];
export const jsonschemaerror_toString: (a: number) => [number, number];
export const jsonschemaerror_message: (a: number) => [number, number];
export const jsonschemaerror_keyword: (a: number) => [number, number];
export const jsonschemaerror_instancePath: (a: number) => [number, number];
export const jsonschemaerror_schemaPath: (a: number) => [number, number];
export const jsonschemaerror_propertyName: (a: number) => [number, number];
export const jsonschemaerror_code: (a: number) => number;
export const __wbg_publickeyisdisablederror_free: (a: number, b: number) => void;
export const publickeyisdisablederror_getCode: (a: number) => number;
export const publickeyisdisablederror_message: (a: number) => [number, number];
export const __wbg_wrongpublickeypurposeerror_free: (a: number, b: number) => void;
export const wrongpublickeypurposeerror_getPublicKeyPurpose: (a: number) => number;
export const wrongpublickeypurposeerror_getKeyPurposeRequirement: (a: number) => any;
export const wrongpublickeypurposeerror_getCode: (a: number) => number;
export const wrongpublickeypurposeerror_message: (a: number) => [number, number];
export const __wbg_basicblserror_free: (a: number, b: number) => void;
export const basicblserror_getCode: (a: number) => number;
export const basicblserror_message: (a: number) => [number, number];
export const __wbg_documenttimestampwindowviolationerror_free: (a: number, b: number) => void;
export const documenttimestampwindowviolationerror_getDocumentId: (a: number) => any;
export const documenttimestampwindowviolationerror_getTimestampName: (a: number) => [number, number];
export const documenttimestampwindowviolationerror_getTimestamp: (a: number) => any;
export const documenttimestampwindowviolationerror_getTimeWindowStart: (a: number) => any;
export const documenttimestampwindowviolationerror_getTimeWindowEnd: (a: number) => any;
export const documenttimestampwindowviolationerror_getCode: (a: number) => number;
export const documenttimestampwindowviolationerror_message: (a: number) => [number, number];
export const __wbg_documenttimestampsareequalerror_free: (a: number, b: number) => void;
export const documenttimestampsareequalerror_getDocumentId: (a: number) => any;
export const documenttimestampsareequalerror_getCode: (a: number) => number;
export const documenttimestampsareequalerror_message: (a: number) => [number, number];
export const __wbg_invaliddocumentrevisionerror_free: (a: number, b: number) => void;
export const invaliddocumentrevisionerror_getDocumentId: (a: number) => any;
export const invaliddocumentrevisionerror_getDesiredRevision: (a: number) => bigint;
export const invaliddocumentrevisionerror_getCode: (a: number) => number;
export const invaliddocumentrevisionerror_message: (a: number) => [number, number];
export const __wbg_identitypublickeyisdisablederror_free: (a: number, b: number) => void;
export const identitypublickeyisdisablederror_getPublicKeyIndex: (a: number) => number;
export const identitypublickeyisdisablederror_getCode: (a: number) => number;
export const identitypublickeyisdisablederror_message: (a: number) => [number, number];
export const __wbg_invalididentitynonceerror_free: (a: number, b: number) => void;
export const invalididentitynonceerror_getIdentityId: (a: number) => any;
export const invalididentitynonceerror_getCurrentIdentityContractNonce: (a: number) => [number, bigint];
export const invalididentitynonceerror_getSettingIdentityContractNonce: (a: number) => bigint;
export const invalididentitynonceerror_getError: (a: number) => any;
export const invalididentitynonceerror_getCode: (a: number) => number;
export const invalididentitynonceerror_message: (a: number) => [number, number];
export const __wbg_invalididentityrevisionerror_free: (a: number, b: number) => void;
export const invalididentityrevisionerror_getIdentityId: (a: number) => any;
export const invalididentityrevisionerror_getCurrentRevision: (a: number) => any;
export const invalididentityrevisionerror_getCode: (a: number) => number;
export const invalididentityrevisionerror_message: (a: number) => [number, number];
export const __wbg_unknownassetlockprooftypeerror_free: (a: number, b: number) => void;
export const unknownassetlockprooftypeerror_getType: (a: number) => number;
export const getLatestProtocolVersion: () => number;
export const invalidassetlocktransactionoutputreturnsizeerror_getOutputIndex: (a: number) => number;
export const publickeyisdisablederror_getPublicKeyId: (a: number) => number;
export const incompatibleprotocolversionerror_getParsedProtocolVersion: (a: number) => number;
export const invaliddocumentrevisionerror_getPreviousRevision: (a: number) => [number, bigint];
export const jsonschemaerror_getCode: (a: number) => number;
export const tryingtodeleteimmutabledocumenterror_new: (a: number) => number;
export const tryingtoreplaceimmutabledocumenterror_new: (a: number) => number;
export const jsonschemaerror_params: (a: number) => [number, number, number];
export const __wbg_invaliddocumenttypeindatacontracterror_free: (a: number, b: number) => void;
export const invaliddocumenttypeindatacontracterror_new: (a: number, b: number, c: any) => number;
export const invaliddocumenttypeindatacontracterror_getType: (a: number) => [number, number];
export const invaliddocumenttypeindatacontracterror_getDataContractId: (a: number) => any;
export const __wbg_documentalreadyexistserror_free: (a: number, b: number) => void;
export const __wbg_documentnotprovidederror_free: (a: number, b: number) => void;
export const __wbg_invalidactionerror_free: (a: number, b: number) => void;
export const invalidactionterror_new: (a: any) => number;
export const __wbg_invalidactionnameerror_free: (a: number, b: number) => void;
export const invalidactionnameerror_new: (a: number, b: number) => number;
export const invalidactionnameerror_getActions: (a: number) => [number, number];
export const __wbg_invaliddocumentactionerror_free: (a: number, b: number) => void;
export const __wbg_invaliddocumenterror_free: (a: number, b: number) => void;
export const invaliddocumenterror_new: (a: any, b: number, c: number) => number;
export const invaliddocumenterror_getErrors: (a: number) => [number, number];
export const invaliddocumenterror_getRawDocument: (a: number) => any;
export const invaliddocumenterror_getMessage: (a: number) => [number, number];
export const __wbg_invalidinitialrevisionerror_free: (a: number, b: number) => void;
export const invalidinitialrevisionerror_new: (a: number) => number;
export const invalidinitialrevisionerror_getDocument: (a: number) => number;
export const __wbg_nodocumentssuppliederror_free: (a: number, b: number) => void;
export const nodocumentssuppliederror_new: () => number;
export const __wbg_revisionabsenterror_free: (a: number, b: number) => void;
export const revisionabsenterror_getDocument: (a: number) => number;
export const __wbg_tokenburntransition_free: (a: number, b: number) => void;
export const tokenburntransition_getPublicNote: (a: number) => [number, number];
export const tokenburntransition_getBurnAmount: (a: number) => bigint;
export const __wbg_tokenconfigupdatetransition_free: (a: number, b: number) => void;
export const tokenconfigupdatetransition_getPublicNote: (a: number) => [number, number];
export const __wbg_tokenemergencyactiontransition_free: (a: number, b: number) => void;
export const tokenemergencyactiontransition_getPublicNote: (a: number) => [number, number];
export const tokenemergencyactiontransition_getEmergencyAction: (a: number) => number;
export const __wbg_datacontractnotpresenterror_free: (a: number, b: number) => void;
export const datacontractnotpresenterror_getDataContractId: (a: number) => any;
export const datacontractnotpresenterror_getCode: (a: number) => number;
export const datacontractnotpresenterror_message: (a: number) => [number, number];
export const __wbg_identityassetlocktransactionreplayerror_free: (a: number, b: number) => void;
export const identityassetlocktransactionreplayerror_getTransactionId: (a: number) => any;
export const identityassetlocktransactionreplayerror_getCode: (a: number) => number;
export const identityassetlocktransactionreplayerror_getStateTransitionId: (a: number) => any;
export const identityassetlocktransactionreplayerror_getOutputIndex: (a: number) => number;
export const __wbg_identitycredittransfertoselferror_free: (a: number, b: number) => void;
export const identitycredittransfertoselferror_getCode: (a: number) => number;
export const identitycredittransfertoselferror_message: (a: number) => [number, number];
export const __wbg_invalididentityassetlockproofchainlockvalidationerrorwasm_free: (a: number, b: number) => void;
export const invalididentityassetlockproofchainlockvalidationerrorwasm_getTransactionId: (a: number) => any;
export const invalididentityassetlockproofchainlockvalidationerrorwasm_getHeightReportedNotLocked: (a: number) => number;
export const __wbg_datacontractnotpresentnotconsensuserror_free: (a: number, b: number) => void;
export const datacontractnotpresentnotconsensuserror_getDataContractId: (a: number) => any;
export const __wbg_statetransitionisnotactiveerror_free: (a: number, b: number) => void;
export const statetransitionisnotactiveerror_getStateTransitionType: (a: number) => [number, number];
export const statetransitionisnotactiveerror_getActiveVersionRangeStart: (a: number) => number;
export const statetransitionisnotactiveerror_getActiveVersionRangeEnd: (a: number) => number;
export const statetransitionisnotactiveerror_getCurrentProtocolVersion: (a: number) => number;
export const statetransitionisnotactiveerror_toObject: (a: number) => any;
export const revisionabsenterror_new: (a: number) => number;
export const __wbg_datacontractgenericerror_free: (a: number, b: number) => void;
export const datacontractgenericerror_getMessage: (a: number) => [number, number];
export const __wbg_datacontractfactory_free: (a: number, b: number) => void;
export const datacontractfactory_new: (a: number) => number;
export const datacontractfactory_create: (a: number, b: number, c: number, d: bigint, e: any, f: any) => [number, number, number];
export const datacontractfactory_createFromBuffer: (a: number, b: number, c: number, d: number) => any;
export const datacontractfactory_createDataContractCreateTransition: (a: number, b: number) => any;
export const __wbg_tokenunfreezetransition_free: (a: number, b: number) => void;
export const tokenunfreezetransition_getFrozenIdentityId: (a: number) => any;
export const tokenunfreezetransition_getPublicNote: (a: number) => [number, number];
export const __wbg_duplicateindexnameerror_free: (a: number, b: number) => void;
export const duplicateindexnameerror_getDocumentType: (a: number) => [number, number];
export const duplicateindexnameerror_getDuplicateIndexName: (a: number) => [number, number];
export const duplicateindexnameerror_getCode: (a: number) => number;
export const duplicateindexnameerror_message: (a: number) => [number, number];
export const __wbg_undefinedindexpropertyerror_free: (a: number, b: number) => void;
export const undefinedindexpropertyerror_getDocumentType: (a: number) => [number, number];
export const undefinedindexpropertyerror_getIndexName: (a: number) => [number, number];
export const undefinedindexpropertyerror_getPropertyName: (a: number) => [number, number];
export const undefinedindexpropertyerror_getCode: (a: number) => number;
export const undefinedindexpropertyerror_message: (a: number) => [number, number];
export const __wbg_invaliddocumenttypenameerror_free: (a: number, b: number) => void;
export const invaliddocumenttypenameerrorwasm_getName: (a: number) => [number, number];
export const invaliddocumenttypenameerrorwasm_getCode: (a: number) => number;
export const invaliddocumenttypenameerrorwasm_message: (a: number) => [number, number];
export const __wbg_protocolversionparsingerror_free: (a: number, b: number) => void;
export const protocolversionparsingerror_new: (a: number, b: number) => number;
export const protocolversionparsingerror_getParsingError: (a: number) => [number, number];
export const protocolversionparsingerror_getCode: (a: number) => number;
export const protocolversionparsingerror_message: (a: number) => [number, number];
export const protocolversionparsingerror_serialize: (a: number) => [number, number, number];
export const __wbg_inconsistentcompoundindexdataerror_free: (a: number, b: number) => void;
export const inconsistentcompoundindexdataerror_getIndexedProperties: (a: number) => any;
export const inconsistentcompoundindexdataerror_getDocumentType: (a: number) => [number, number];
export const inconsistentcompoundindexdataerror_getCode: (a: number) => number;
export const inconsistentcompoundindexdataerror_message: (a: number) => [number, number];
export const __wbg_invaliddocumenttransitioniderror_free: (a: number, b: number) => void;
export const invaliddocumenttransitioniderror_getExpectedId: (a: number) => any;
export const invaliddocumenttransitioniderror_getInvalidId: (a: number) => any;
export const invaliddocumenttransitioniderror_getCode: (a: number) => number;
export const invaliddocumenttransitioniderror_message: (a: number) => [number, number];
export const __wbg_identityinsufficientbalanceerror_free: (a: number, b: number) => void;
export const identityinsufficientbalanceerror_getIdentityId: (a: number) => any;
export const identityinsufficientbalanceerror_getBalance: (a: number) => bigint;
export const identityinsufficientbalanceerror_getCode: (a: number) => number;
export const identityinsufficientbalanceerror_message: (a: number) => [number, number];
export const __wbg_invalidinstantassetlockproofsignatureerror_free: (a: number, b: number) => void;
export const invalidinstantassetlockproofsignatureerror_getCode: (a: number) => number;
export const invalidinstantassetlockproofsignatureerror_message: (a: number) => [number, number];
export const __wbg_missingmasterpublickeyerror_free: (a: number, b: number) => void;
export const missingmasterpublickeyerror_getCode: (a: number) => number;
export const missingmasterpublickeyerror_message: (a: number) => [number, number];
export const __wbg_invalididentifiererror_free: (a: number, b: number) => void;
export const invalididentifiererror_getIdentifierName: (a: number) => [number, number];
export const invalididentifiererror_getIdentifierError: (a: number) => [number, number];
export const invalididentifiererror_getCode: (a: number) => number;
export const invalididentifiererror_message: (a: number) => [number, number];
export const __wbg_invalidsignaturepublickeypurposeerror_free: (a: number, b: number) => void;
export const invalidsignaturepublickeypurposeerror_getPublicKeyPurpose: (a: number) => number;
export const invalidsignaturepublickeypurposeerror_getKeyPurposeRequirement: (a: number) => any;
export const invalidsignaturepublickeypurposeerror_getCode: (a: number) => number;
export const invalidsignaturepublickeypurposeerror_message: (a: number) => [number, number];
export const __wbg_unsupportedversionerror_free: (a: number, b: number) => void;
export const unsupportedversionerror_getReceivedVersion: (a: number) => number;
export const unsupportedversionerror_getMinVersion: (a: number) => number;
export const unsupportedversionerror_getMaxVersion: (a: number) => number;
export const unsupportedversionerror_getCode: (a: number) => number;
export const unsupportedversionerror_message: (a: number) => [number, number];
export const deserializeConsensusError: (a: number, b: number) => [number, number, number];
export const __wbg_balanceisnotenougherror_free: (a: number, b: number) => void;
export const balanceisnotenougherror_new: (a: bigint, b: bigint) => number;
export const balanceisnotenougherror_getBalance: (a: number) => bigint;
export const balanceisnotenougherror_getFee: (a: number) => bigint;
export const balanceisnotenougherror_getCode: (a: number) => number;
export const balanceisnotenougherror_message: (a: number) => [number, number];
export const balanceisnotenougherror_serialize: (a: number) => [number, number, number];
export const __wbg_datacontractconfigupdateerror_free: (a: number, b: number) => void;
export const datacontractconfigupdateerror_new: (a: any, b: number, c: number) => number;
export const datacontractconfigupdateerror_getDataContractId: (a: number) => any;
export const datacontractconfigupdateerror_getCode: (a: number) => number;
export const datacontractconfigupdateerror_message: (a: number) => [number, number];
export const __wbg_datatriggerexecutionerror_free: (a: number, b: number) => void;
export const datatriggerexecutionerror_getDataContractId: (a: number) => any;
export const datatriggerexecutionerror_getDocumentId: (a: number) => any;
export const datatriggerexecutionerror_getMessage: (a: number) => [number, number];
export const datatriggerexecutionerror_getCode: (a: number) => number;
export const datatriggerexecutionerror_message: (a: number) => [number, number];
export const datatriggerexecutionerror_serialize: (a: number) => [number, number, number];
export const __wbg_datatriggeractionexecutionerror_free: (a: number, b: number) => void;
export const datatriggeractionexecutionerror_getDataContractId: (a: number) => any;
export const datatriggeractionexecutionerror_getExecutionError: (a: number) => any;
export const datatriggeractionexecutionerror_getDocumentTransitionId: (a: number) => any;
export const datatriggeractionexecutionerror_getMessage: (a: number) => [number, number];
export const datatriggeractionexecutionerror_getOwnerId: (a: number) => any;
export const datatriggeractionexecutionerror_getCode: (a: number) => number;
export const __wbg_identityalreadyexistserror_free: (a: number, b: number) => void;
export const identityalreadyexistserror_getIdentityId: (a: number) => any;
export const identityalreadyexistserror_getCode: (a: number) => number;
export const identityalreadyexistserror_message: (a: number) => [number, number];
export const __wbg_maxidentitypublickeylimitreachederror_free: (a: number, b: number) => void;
export const maxidentitypublickeylimitreachederror_getMaxItems: (a: number) => number;
export const maxidentitypublickeylimitreachederror_getCode: (a: number) => number;
export const maxidentitypublickeylimitreachederror_message: (a: number) => [number, number];
export const __wbg_missingidentitypublickeyidserror_free: (a: number, b: number) => void;
export const missingidentitypublickeyidserror_getDuplicatedIds: (a: number) => any;
export const __wbg_invalididentityerror_free: (a: number, b: number) => void;
export const invalididentityerror_getErrors: (a: number) => [number, number];
export const invalididentityerror_getRawIdentity: (a: number) => any;
export const __wbg_invaliddatacontracterror_free: (a: number, b: number) => void;
export const invaliddatacontracterror_getErrors: (a: number) => [number, number];
export const invaliddatacontracterror_getRawDataContract: (a: number) => any;
export const invaliddatacontracterror_getMessage: (a: number) => [number, number];
export const __wbg_datacontractupdatetransition_free: (a: number, b: number) => void;
export const datacontractupdatetransition_new: (a: any) => [number, number, number];
export const datacontractupdatetransition_getDataContract: (a: number, b: number) => [number, number, number];
export const datacontractupdatetransition_getOwnerId: (a: number) => any;
export const datacontractupdatetransition_getIdentityContractNonce: (a: number) => bigint;
export const datacontractupdatetransition_getType: (a: number) => number;
export const datacontractupdatetransition_getUserFeeIncrease: (a: number) => number;
export const datacontractupdatetransition_setUserFeeIncrease: (a: number, b: number) => void;
export const datacontractupdatetransition_getSignature: (a: number) => any;
export const datacontractupdatetransition_getSignaturePublicKeyId: (a: number) => number;
export const datacontractupdatetransition_toBuffer: (a: number) => [number, number, number];
export const datacontractupdatetransition_fromBuffer: (a: number, b: number) => [number, number, number];
export const datacontractupdatetransition_getModifiedDataIds: (a: number) => [number, number];
export const datacontractupdatetransition_isDataContractStateTransition: (a: number) => number;
export const datacontractupdatetransition_isDocumentStateTransition: (a: number) => number;
export const datacontractupdatetransition_toObject: (a: number, b: number) => [number, number, number];
export const datacontractupdatetransition_sign: (a: number, b: number, c: number, d: number, e: any) => [number, number];
export const datacontractupdatetransition_verifySignature: (a: number, b: number, c: any) => [number, number, number];
export const generateDocumentId: (a: any, b: any, c: number, d: number, e: number, f: number) => [number, number, number];
export const __wbg_documenttransition_free: (a: number, b: number) => void;
export const documenttransition_getId: (a: number) => any;
export const documenttransition_getType: (a: number) => [number, number];
export const documenttransition_getData: (a: number) => any;
export const documenttransition_getAction: (a: number) => number;
export const documenttransition_getDataContractId: (a: number) => any;
export const documenttransition_setDataContractId: (a: number, b: any) => [number, number];
export const documenttransition_getIdentityContractNonce: (a: number) => any;
export const documenttransition_getRevision: (a: number) => [number, bigint];
export const documenttransition_getEntropy: (a: number) => [number, number];
export const documenttransition_get_price: (a: number) => [number, bigint];
export const documenttransition_getReceiverId: (a: number) => any;
export const documenttransition_setRevision: (a: number, b: bigint) => void;
export const documenttransition_hasPrefundedBalance: (a: number) => number;
export const documenttransition_getPrefundedVotingBalance: (a: number) => [number, number, number];
export const __wbg_datacontracthavenewuniqueindexerror_free: (a: number, b: number) => void;
export const datacontracthavenewuniqueindexerror_getDocumentType: (a: number) => [number, number];
export const datacontracthavenewuniqueindexerror_getIndexName: (a: number) => [number, number];
export const datacontracthavenewuniqueindexerror_getCode: (a: number) => number;
export const datacontracthavenewuniqueindexerror_message: (a: number) => [number, number];
export const __wbg_incompatiblere2patternerror_free: (a: number, b: number) => void;
export const incompatiblere2patternerror_getPattern: (a: number) => [number, number];
export const incompatiblere2patternerror_getPath: (a: number) => [number, number];
export const incompatiblere2patternerror_getMessage: (a: number) => [number, number];
export const incompatiblere2patternerror_getCode: (a: number) => number;
export const incompatiblere2patternerror_message: (a: number) => [number, number];
export const __wbg_systempropertyindexalreadypresenterror_free: (a: number, b: number) => void;
export const systempropertyindexalreadypresenterror_getDocumentType: (a: number) => [number, number];
export const systempropertyindexalreadypresenterror_getIndexName: (a: number) => [number, number];
export const systempropertyindexalreadypresenterror_getPropertyName: (a: number) => [number, number];
export const systempropertyindexalreadypresenterror_getCode: (a: number) => number;
export const systempropertyindexalreadypresenterror_message: (a: number) => [number, number];
export const __wbg_missingdocumenttransitiontypeerror_free: (a: number, b: number) => void;
export const missingdocumenttransitiontypeerror_getCode: (a: number) => number;
export const missingdocumenttransitiontypeerror_message: (a: number) => [number, number];
export const __wbg_duplicatedidentitypublickeyerror_free: (a: number, b: number) => void;
export const duplicatedidentitypublickeyerror_getDuplicatedPublicKeysIds: (a: number) => any;
export const duplicatedidentitypublickeyerror_getCode: (a: number) => number;
export const duplicatedidentitypublickeyerror_message: (a: number) => [number, number];
export const __wbg_identityassetlocktransactionisnotfounderror_free: (a: number, b: number) => void;
export const identityassetlocktransactionisnotfounderror_getTransactionId: (a: number) => any;
export const identityassetlocktransactionisnotfounderror_getCode: (a: number) => number;
export const identityassetlocktransactionisnotfounderror_message: (a: number) => [number, number];
export const __wbg_identityassetlocktransactionoutpointalreadyexistserror_free: (a: number, b: number) => void;
export const identityassetlocktransactionoutpointalreadyexistserror_getOutputIndex: (a: number) => number;
export const identityassetlocktransactionoutpointalreadyexistserror_getTransactionId: (a: number) => any;
export const identityassetlocktransactionoutpointalreadyexistserror_getCode: (a: number) => number;
export const identityassetlocktransactionoutpointalreadyexistserror_message: (a: number) => [number, number];
export const __wbg_invalididentityassetlocktransactionerror_free: (a: number, b: number) => void;
export const invalididentityassetlocktransactionerror_getErrorMessage: (a: number) => [number, number];
export const invalididentityassetlocktransactionerror_getCode: (a: number) => number;
export const invalididentityassetlocktransactionerror_message: (a: number) => [number, number];
export const __wbg_notimplementedidentitycreditwithdrawaltransitionpoolingerror_free: (a: number, b: number) => void;
export const notimplementedidentitycreditwithdrawaltransitionpoolingerror_getPooling: (a: number) => number;
export const notimplementedidentitycreditwithdrawaltransitionpoolingerror_getCode: (a: number) => number;
export const notimplementedidentitycreditwithdrawaltransitionpoolingerror_message: (a: number) => [number, number];
export const __wbg_invalidstatetransitionsignatureerror_free: (a: number, b: number) => void;
export const invalidstatetransitionsignatureerror_getCode: (a: number) => number;
export const invalidstatetransitionsignatureerror_message: (a: number) => [number, number];
export const __wbg_statetransitionmaxsizeexceedederror_free: (a: number, b: number) => void;
export const statetransitionmaxsizeexceedederror_getActualSizeBytes: (a: number) => bigint;
export const statetransitionmaxsizeexceedederror_getMaxSizeBytes: (a: number) => bigint;
export const statetransitionmaxsizeexceedederror_getCode: (a: number) => number;
export const statetransitionmaxsizeexceedederror_message: (a: number) => [number, number];
export const __wbg_signatureshouldnotbepresenterror_free: (a: number, b: number) => void;
export const signatureshouldnotbepresenterror_getCode: (a: number) => number;
export const signatureshouldnotbepresenterror_message: (a: number) => [number, number];
export const __wbg_datatriggerinvalidresulterror_free: (a: number, b: number) => void;
export const datatriggerinvalidresulterror_getDataContractId: (a: number) => any;
export const datatriggerinvalidresulterror_getDocumentId: (a: number) => any;
export const datatriggerinvalidresulterror_getCode: (a: number) => number;
export const datatriggerinvalidresulterror_message: (a: number) => [number, number];
export const datatriggerinvalidresulterror_serialize: (a: number) => [number, number, number];
export const __wbg_datatriggeractioninvalidresulterror_free: (a: number, b: number) => void;
export const datatriggeractioninvalidresulterror_getDataContractId: (a: number) => any;
export const datatriggeractioninvalidresulterror_getDocumentTransitionId: (a: number) => any;
export const datatriggeractioninvalidresulterror_getOwnerId: (a: number) => any;
export const datatriggeractioninvalidresulterror_getCode: (a: number) => number;
export const __wbg_documentnotfounderror_free: (a: number, b: number) => void;
export const documentnotfounderror_getDocumentId: (a: number) => any;
export const documentnotfounderror_getCode: (a: number) => number;
export const documentnotfounderror_message: (a: number) => [number, number];
export const __wbg_assetlockoutputnotfounderror_free: (a: number, b: number) => void;
export const __wbg_identitycredittransfertransition_free: (a: number, b: number) => void;
export const identitycredittransfertransition_new: (a: number) => [number, number, number];
export const identitycredittransfertransition_getType: (a: number) => number;
export const identitycredittransfertransition_amount: (a: number) => bigint;
export const identitycredittransfertransition_getIdentityId: (a: number) => any;
export const identitycredittransfertransition_getRecipientId: (a: number) => any;
export const identitycredittransfertransition_setIdentityId: (a: number, b: any) => void;
export const identitycredittransfertransition_setRecipientId: (a: number, b: any) => void;
export const identitycredittransfertransition_setAmount: (a: number, b: bigint) => void;
export const identitycredittransfertransition_getUserFeeIncrease: (a: number) => number;
export const identitycredittransfertransition_setUserFeeIncrease: (a: number, b: number) => void;
export const identitycredittransfertransition_getNonce: (a: number) => bigint;
export const identitycredittransfertransition_setNonce: (a: number, b: bigint) => void;
export const identitycredittransfertransition_toObject: (a: number, b: any) => [number, number, number];
export const identitycredittransfertransition_toBuffer: (a: number) => [number, number, number];
export const identitycredittransfertransition_toJSON: (a: number) => [number, number, number];
export const identitycredittransfertransition_getModifiedDataIds: (a: number) => [number, number];
export const identitycredittransfertransition_signByPrivateKey: (a: number, b: number, c: number, d: number, e: number) => [number, number];
export const identitycredittransfertransition_getSignature: (a: number) => any;
export const identitycredittransfertransition_setSignature: (a: number, b: number, c: number) => void;
export const identitycredittransfertransition_getSignaturePublicKeyId: (a: number) => number;
export const identitycredittransfertransition_sign: (a: number, b: number, c: number, d: number, e: any) => [number, number];
export const __wbg_identitycreditwithdrawaltransition_free: (a: number, b: number) => void;
export const identitycreditwithdrawaltransition_new: (a: number) => [number, number, number];
export const identitycreditwithdrawaltransition_getType: (a: number) => number;
export const identitycreditwithdrawaltransition_identityId: (a: number) => any;
export const identitycreditwithdrawaltransition_amount: (a: number) => bigint;
export const identitycreditwithdrawaltransition_getIdentityId: (a: number) => any;
export const identitycreditwithdrawaltransition_setIdentityId: (a: number, b: any) => void;
export const identitycreditwithdrawaltransition_setAmount: (a: number, b: bigint) => void;
export const identitycreditwithdrawaltransition_getCoreFeePerByte: (a: number) => number;
export const identitycreditwithdrawaltransition_setCoreFeePerByte: (a: number, b: number) => void;
export const identitycreditwithdrawaltransition_getPooling: (a: number) => number;
export const identitycreditwithdrawaltransition_setPooling: (a: number, b: number) => [number, number];
export const identitycreditwithdrawaltransition_getOutputScript: (a: number) => any;
export const identitycreditwithdrawaltransition_setOutputScript: (a: number, b: number, c: number) => void;
export const identitycreditwithdrawaltransition_getNonce: (a: number) => bigint;
export const identitycreditwithdrawaltransition_setNonce: (a: number, b: bigint) => void;
export const identitycreditwithdrawaltransition_getUserFeeIncrease: (a: number) => number;
export const identitycreditwithdrawaltransition_setUserFeeIncrease: (a: number, b: number) => void;
export const identitycreditwithdrawaltransition_toObject: (a: number, b: any) => [number, number, number];
export const identitycreditwithdrawaltransition_toBuffer: (a: number) => [number, number, number];
export const identitycreditwithdrawaltransition_toJSON: (a: number) => [number, number, number];
export const identitycreditwithdrawaltransition_getModifiedDataIds: (a: number) => [number, number];
export const identitycreditwithdrawaltransition_signByPrivateKey: (a: number, b: number, c: number, d: number, e: number) => [number, number];
export const identitycreditwithdrawaltransition_getSignature: (a: number) => any;
export const identitycreditwithdrawaltransition_setSignature: (a: number, b: number, c: number) => void;
export const identitycreditwithdrawaltransition_sign: (a: number, b: number, c: number, d: number, e: any) => [number, number];
export const __wbg_identitytopuptransition_free: (a: number, b: number) => void;
export const identitytopuptransition_new: (a: number) => [number, number, number];
export const identitytopuptransition_setAssetLockProof: (a: number, b: any) => [number, number];
export const identitytopuptransition_assetLockProof: (a: number) => any;
export const identitytopuptransition_getType: (a: number) => number;
export const identitytopuptransition_getIdentityId: (a: number) => any;
export const identitytopuptransition_setIdentityId: (a: number, b: any) => void;
export const identitytopuptransition_getUserFeeIncrease: (a: number) => number;
export const identitytopuptransition_setUserFeeIncrease: (a: number, b: number) => void;
export const identitytopuptransition_toObject: (a: number, b: any) => [number, number, number];
export const identitytopuptransition_toBuffer: (a: number) => [number, number, number];
export const identitytopuptransition_toJSON: (a: number) => [number, number, number];
export const identitytopuptransition_getModifiedDataIds: (a: number) => [number, number];
export const identitytopuptransition_isDataContractStateTransition: (a: number) => number;
export const identitytopuptransition_isIdentityStateTransition: (a: number) => number;
export const identitytopuptransition_signByPrivateKey: (a: number, b: number, c: number, d: number, e: number) => [number, number];
export const identitytopuptransition_getSignature: (a: number) => any;
export const identitytopuptransition_setSignature: (a: number, b: number, c: number) => void;
export const __wbg_masternodevotetransition_free: (a: number, b: number) => void;
export const masternodevotetransition_new: (a: number) => [number, number, number];
export const masternodevotetransition_getOwnerId: (a: number) => any;
export const masternodevotetransition_getType: (a: number) => number;
export const masternodevotetransition_getProTxHash: (a: number) => any;
export const masternodevotetransition_setProTxHash: (a: number, b: any) => void;
export const masternodevotetransition_toObject: (a: number, b: any) => [number, number, number];
export const masternodevotetransition_toBuffer: (a: number) => [number, number, number];
export const masternodevotetransition_toJSON: (a: number) => [number, number, number];
export const masternodevotetransition_getModifiedDataIds: (a: number) => [number, number];
export const masternodevotetransition_setUserFeeIncrease: (a: number, b: number) => void;
export const masternodevotetransition_getIdentityContractNonce: (a: number) => bigint;
export const masternodevotetransition_getContestedDocumentResourceVotePoll: (a: number) => any;
export const masternodevotetransition_signByPrivateKey: (a: number, b: number, c: number, d: number, e: number) => [number, number];
export const masternodevotetransition_getSignature: (a: number) => any;
export const masternodevotetransition_setSignature: (a: number, b: number, c: number) => void;
export const masternodevotetransition_sign: (a: number, b: number, c: number, d: number, e: any) => [number, number];
export const identitytopuptransition_getAssetLockProof: (a: number) => any;
export const identitycredittransfertransition_getAmount: (a: number) => bigint;
export const identitycreditwithdrawaltransition_getAmount: (a: number) => bigint;
export const identitycreditwithdrawaltransition_getSignaturePublicKeyId: (a: number) => number;
export const datacontractupdatetransition_isIdentityStateTransition: (a: number) => number;
export const datacontractupdatetransition_isVotingStateTransition: (a: number) => number;
export const identitycredittransfertransition_isDataContractStateTransition: (a: number) => number;
export const identitycredittransfertransition_isDocumentStateTransition: (a: number) => number;
export const identitycredittransfertransition_isIdentityStateTransition: (a: number) => number;
export const identitycredittransfertransition_isVotingStateTransition: (a: number) => number;
export const identitycreditwithdrawaltransition_isDataContractStateTransition: (a: number) => number;
export const identitycreditwithdrawaltransition_isDocumentStateTransition: (a: number) => number;
export const identitycreditwithdrawaltransition_isIdentityStateTransition: (a: number) => number;
export const identitycreditwithdrawaltransition_isVotingStateTransition: (a: number) => number;
export const identitytopuptransition_isDocumentStateTransition: (a: number) => number;
export const identitytopuptransition_isVotingStateTransition: (a: number) => number;
export const masternodevotetransition_isDataContractStateTransition: (a: number) => number;
export const masternodevotetransition_isDocumentStateTransition: (a: number) => number;
export const masternodevotetransition_isIdentityStateTransition: (a: number) => number;
export const masternodevotetransition_isVotingStateTransition: (a: number) => number;
export const masternodevotetransition_getUserFeeIncrease: (a: number) => number;
export const identitycredittransfertransition_identityId: (a: number) => any;
export const identitycredittransfertransition_recipientId: (a: number) => any;
export const identitytopuptransition_identityId: (a: number) => any;
export const identitytopuptransition_getOwnerId: (a: number) => any;
export const rustsecp256k1_v0_10_0_context_create: (a: number) => number;
export const rustsecp256k1_v0_10_0_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_10_0_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_default_error_callback_fn: (a: number, b: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_export_6: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const __externref_drop_slice: (a: number, b: number) => void;
export const closure1861_externref_shim: (a: number, b: number, c: any) => void;
export const closure5920_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
