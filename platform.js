'use strict'
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.19.1
// source: platform.proto
Object.defineProperty(exports, '__esModule', { value: true })
exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0_Keys = exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0 = exports.GetIdentityKeysResponse = exports.GetIdentityKeysRequest_GetIdentityKeysRequestV0 = exports.GetIdentityKeysRequest = exports.SecurityLevelMap_SecurityLevelMapEntry = exports.SecurityLevelMap = exports.SearchKey_PurposeMapEntry = exports.SearchKey = exports.SpecificKeys = exports.AllKeys = exports.KeyRequestType = exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0_BalanceAndRevision = exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0 = exports.GetIdentityBalanceAndRevisionResponse = exports.GetIdentityBalanceResponse_GetIdentityBalanceResponseV0 = exports.GetIdentityBalanceResponse = exports.GetIdentityContractNonceResponse_GetIdentityContractNonceResponseV0 = exports.GetIdentityContractNonceResponse = exports.GetIdentityNonceResponse_GetIdentityNonceResponseV0 = exports.GetIdentityNonceResponse = exports.GetIdentityResponse_GetIdentityResponseV0 = exports.GetIdentityResponse = exports.GetIdentityBalanceAndRevisionRequest_GetIdentityBalanceAndRevisionRequestV0 = exports.GetIdentityBalanceAndRevisionRequest = exports.GetIdentityBalanceRequest_GetIdentityBalanceRequestV0 = exports.GetIdentityBalanceRequest = exports.GetIdentityContractNonceRequest_GetIdentityContractNonceRequestV0 = exports.GetIdentityContractNonceRequest = exports.GetIdentityNonceRequest_GetIdentityNonceRequestV0 = exports.GetIdentityNonceRequest = exports.GetIdentityRequest_GetIdentityRequestV0 = exports.GetIdentityRequest = exports.BroadcastStateTransitionResponse = exports.BroadcastStateTransitionRequest = exports.StateTransitionBroadcastError = exports.ResponseMetadata = exports.Proof = exports.GetGroupActionSignersRequest_ActionStatus = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType = exports.GetGroupActionsRequest_ActionStatus = exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType = exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome = exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType = exports.GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type = exports.GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus = exports.SecurityLevelMap_KeyKindRequestType = exports.SignedMsgType = exports.KeyPurpose = exports.protobufPackage = void 0
exports.GetDocumentsRequest = exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistory = exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistoryEntry = exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0 = exports.GetDataContractHistoryResponse = exports.GetDataContractHistoryRequest_GetDataContractHistoryRequestV0 = exports.GetDataContractHistoryRequest = exports.GetDataContractsResponse_GetDataContractsResponseV0 = exports.GetDataContractsResponse_DataContracts = exports.GetDataContractsResponse_DataContractEntry = exports.GetDataContractsResponse = exports.GetDataContractsRequest_GetDataContractsRequestV0 = exports.GetDataContractsRequest = exports.GetDataContractResponse_GetDataContractResponseV0 = exports.GetDataContractResponse = exports.GetDataContractRequest_GetDataContractRequestV0 = exports.GetDataContractRequest = exports.GetProofsResponse_GetProofsResponseV0 = exports.GetProofsResponse = exports.GetProofsRequest_GetProofsRequestV0_TokenStatusRequest = exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenInfoRequest = exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenBalanceRequest = exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest_ContestedResourceVoteStatusRequest = exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest = exports.GetProofsRequest_GetProofsRequestV0_ContractRequest = exports.GetProofsRequest_GetProofsRequestV0_IdentityRequest = exports.GetProofsRequest_GetProofsRequestV0_DocumentRequest = exports.GetProofsRequest_GetProofsRequestV0 = exports.GetProofsRequest = exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentitiesBalances = exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentityBalance = exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0 = exports.GetIdentitiesBalancesResponse = exports.GetIdentitiesBalancesRequest_GetIdentitiesBalancesRequestV0 = exports.GetIdentitiesBalancesRequest = exports.GetEvonodesProposedEpochBlocksByRangeRequest_GetEvonodesProposedEpochBlocksByRangeRequestV0 = exports.GetEvonodesProposedEpochBlocksByRangeRequest = exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodesProposedBlocks = exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodeProposedBlocks = exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0 = exports.GetEvonodesProposedEpochBlocksResponse = exports.GetEvonodesProposedEpochBlocksByIdsRequest_GetEvonodesProposedEpochBlocksByIdsRequestV0 = exports.GetEvonodesProposedEpochBlocksByIdsRequest = exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentitiesKeys = exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentityKeys = exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_PurposeKeys = exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0 = exports.GetIdentitiesContractKeysResponse = exports.GetIdentitiesContractKeysRequest_GetIdentitiesContractKeysRequestV0 = exports.GetIdentitiesContractKeysRequest = void 0
exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamps = exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamp = exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0 = exports.GetVotePollsByEndDateResponse = exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_EndAtTimeInfo = exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_StartAtTimeInfo = exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0 = exports.GetVotePollsByEndDateRequest = exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0_ContestedResourceValues = exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0 = exports.GetContestedResourcesResponse = exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0_StartAtValueInfo = exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0 = exports.GetContestedResourcesRequest = exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfo = exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfos = exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0 = exports.GetEpochsInfoResponse = exports.GetEpochsInfoRequest_GetEpochsInfoRequestV0 = exports.GetEpochsInfoRequest = exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignal = exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignals = exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0 = exports.GetProtocolVersionUpgradeVoteStatusResponse = exports.GetProtocolVersionUpgradeVoteStatusRequest_GetProtocolVersionUpgradeVoteStatusRequestV0 = exports.GetProtocolVersionUpgradeVoteStatusRequest = exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_VersionEntry = exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_Versions = exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0 = exports.GetProtocolVersionUpgradeStateResponse = exports.GetProtocolVersionUpgradeStateRequest_GetProtocolVersionUpgradeStateRequestV0 = exports.GetProtocolVersionUpgradeStateRequest = exports.GetConsensusParamsResponse_GetConsensusParamsResponseV0 = exports.GetConsensusParamsResponse_ConsensusParamsEvidence = exports.GetConsensusParamsResponse_ConsensusParamsBlock = exports.GetConsensusParamsResponse = exports.GetConsensusParamsRequest_GetConsensusParamsRequestV0 = exports.GetConsensusParamsRequest = exports.WaitForStateTransitionResultResponse_WaitForStateTransitionResultResponseV0 = exports.WaitForStateTransitionResultResponse = exports.WaitForStateTransitionResultRequest_WaitForStateTransitionResultRequestV0 = exports.WaitForStateTransitionResultRequest = exports.GetIdentityByPublicKeyHashResponse_GetIdentityByPublicKeyHashResponseV0 = exports.GetIdentityByPublicKeyHashResponse = exports.GetIdentityByPublicKeyHashRequest_GetIdentityByPublicKeyHashRequestV0 = exports.GetIdentityByPublicKeyHashRequest = exports.GetDocumentsResponse_GetDocumentsResponseV0_Documents = exports.GetDocumentsResponse_GetDocumentsResponseV0 = exports.GetDocumentsResponse = exports.GetDocumentsRequest_GetDocumentsRequestV0 = void 0
exports.GetCurrentQuorumsInfoRequest = exports.GetStatusResponse_GetStatusResponseV0_StateSync = exports.GetStatusResponse_GetStatusResponseV0_Network = exports.GetStatusResponse_GetStatusResponseV0_Chain = exports.GetStatusResponse_GetStatusResponseV0_Node = exports.GetStatusResponse_GetStatusResponseV0_Time = exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Drive = exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Tenderdash = exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol = exports.GetStatusResponse_GetStatusResponseV0_Version_Software = exports.GetStatusResponse_GetStatusResponseV0_Version = exports.GetStatusResponse_GetStatusResponseV0 = exports.GetStatusResponse = exports.GetStatusRequest_GetStatusRequestV0 = exports.GetStatusRequest = exports.GetPathElementsResponse_GetPathElementsResponseV0_Elements = exports.GetPathElementsResponse_GetPathElementsResponseV0 = exports.GetPathElementsResponse = exports.GetPathElementsRequest_GetPathElementsRequestV0 = exports.GetPathElementsRequest = exports.GetTotalCreditsInPlatformResponse_GetTotalCreditsInPlatformResponseV0 = exports.GetTotalCreditsInPlatformResponse = exports.GetTotalCreditsInPlatformRequest_GetTotalCreditsInPlatformRequestV0 = exports.GetTotalCreditsInPlatformRequest = exports.GetPrefundedSpecializedBalanceResponse_GetPrefundedSpecializedBalanceResponseV0 = exports.GetPrefundedSpecializedBalanceResponse = exports.GetPrefundedSpecializedBalanceRequest_GetPrefundedSpecializedBalanceRequestV0 = exports.GetPrefundedSpecializedBalanceRequest = exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVote = exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice = exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVotes = exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0 = exports.GetContestedResourceIdentityVotesResponse = exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0_StartAtVotePollIdInfo = exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0 = exports.GetContestedResourceIdentityVotesRequest = exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0_ContestedResourceVoters = exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0 = exports.GetContestedResourceVotersForIdentityResponse = exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0_StartAtIdentifierInfo = exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0 = exports.GetContestedResourceVotersForIdentityRequest = exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_Contender = exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_ContestedResourceContenders = exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo = exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0 = exports.GetContestedResourceVoteStateResponse = exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_StartAtIdentifierInfo = exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0 = exports.GetContestedResourceVoteStateRequest = void 0
exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0_TokenTotalSupplyEntry = exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0 = exports.GetTokenTotalSupplyResponse = exports.GetTokenTotalSupplyRequest_GetTokenTotalSupplyRequestV0 = exports.GetTokenTotalSupplyRequest = exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributions = exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenTimedDistributionEntry = exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributionEntry = exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0 = exports.GetTokenPreProgrammedDistributionsResponse = exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0_StartAtInfo = exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0 = exports.GetTokenPreProgrammedDistributionsRequest = exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatuses = exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatusEntry = exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0 = exports.GetTokenStatusesResponse = exports.GetTokenStatusesRequest_GetTokenStatusesRequestV0 = exports.GetTokenStatusesRequest = exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_IdentityTokenInfos = exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenInfoEntry = exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenIdentityInfoEntry = exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0 = exports.GetIdentitiesTokenInfosResponse = exports.GetIdentitiesTokenInfosRequest_GetIdentitiesTokenInfosRequestV0 = exports.GetIdentitiesTokenInfosRequest = exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfos = exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfoEntry = exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenIdentityInfoEntry = exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0 = exports.GetIdentityTokenInfosResponse = exports.GetIdentityTokenInfosRequest_GetIdentityTokenInfosRequestV0 = exports.GetIdentityTokenInfosRequest = exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalances = exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalanceEntry = exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0 = exports.GetIdentitiesTokenBalancesResponse = exports.GetIdentitiesTokenBalancesRequest_GetIdentitiesTokenBalancesRequestV0 = exports.GetIdentitiesTokenBalancesRequest = exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalances = exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalanceEntry = exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0 = exports.GetIdentityTokenBalancesResponse = exports.GetIdentityTokenBalancesRequest_GetIdentityTokenBalancesRequestV0 = exports.GetIdentityTokenBalancesRequest = exports.GetCurrentQuorumsInfoResponse_GetCurrentQuorumsInfoResponseV0 = exports.GetCurrentQuorumsInfoResponse_ValidatorSetV0 = exports.GetCurrentQuorumsInfoResponse_ValidatorV0 = exports.GetCurrentQuorumsInfoResponse = exports.GetCurrentQuorumsInfoRequest_GetCurrentQuorumsInfoRequestV0 = void 0
exports.PlatformDefinition = exports.CanonicalVote = exports.StateId = exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigners = exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigner = exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0 = exports.GetGroupActionSignersResponse = exports.GetGroupActionSignersRequest_GetGroupActionSignersRequestV0 = exports.GetGroupActionSignersRequest = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActions = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEntry = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractUpdateEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentCreateEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenConfigUpdateEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_PersonalEncryptedNote = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_SharedEncryptedNote = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DestroyFrozenFundsEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_UnfreezeEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_FreezeEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_BurnEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_MintEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0 = exports.GetGroupActionsResponse = exports.GetGroupActionsRequest_GetGroupActionsRequestV0 = exports.GetGroupActionsRequest_StartAtActionId = exports.GetGroupActionsRequest = exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupInfos = exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupPositionInfoEntry = exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupMemberEntry = exports.GetGroupInfosResponse_GetGroupInfosResponseV0 = exports.GetGroupInfosResponse = exports.GetGroupInfosRequest_GetGroupInfosRequestV0 = exports.GetGroupInfosRequest_StartAtGroupContractPosition = exports.GetGroupInfosRequest = exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfo = exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfoEntry = exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupMemberEntry = exports.GetGroupInfoResponse_GetGroupInfoResponseV0 = exports.GetGroupInfoResponse = exports.GetGroupInfoRequest_GetGroupInfoRequestV0 = exports.GetGroupInfoRequest = void 0
/* eslint-disable */
var wire_1 = require("@bufbuild/protobuf/wire");
var wrappers_1 = require("./google/protobuf/wrappers");
exports.protobufPackage = "org.dash.platform.dapi.v0";
var KeyPurpose;
(function (KeyPurpose) {
    KeyPurpose[KeyPurpose["AUTHENTICATION"] = 0] = "AUTHENTICATION";
    KeyPurpose[KeyPurpose["ENCRYPTION"] = 1] = "ENCRYPTION";
    KeyPurpose[KeyPurpose["DECRYPTION"] = 2] = "DECRYPTION";
    KeyPurpose[KeyPurpose["TRANSFER"] = 3] = "TRANSFER";
    KeyPurpose[KeyPurpose["VOTING"] = 5] = "VOTING";
    KeyPurpose[KeyPurpose["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(KeyPurpose || (exports.KeyPurpose = KeyPurpose = {}));
var SignedMsgType;
(function (SignedMsgType) {
    SignedMsgType[SignedMsgType["UNKNOWN"] = 0] = "UNKNOWN";
    /** PREVOTE - Votes */
    SignedMsgType[SignedMsgType["PREVOTE"] = 1] = "PREVOTE";
    SignedMsgType[SignedMsgType["PRECOMMIT"] = 2] = "PRECOMMIT";
    /** PROPOSAL - Proposals */
    SignedMsgType[SignedMsgType["PROPOSAL"] = 32] = "PROPOSAL";
    SignedMsgType[SignedMsgType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(SignedMsgType || (exports.SignedMsgType = SignedMsgType = {}));
var SecurityLevelMap_KeyKindRequestType;
(function (SecurityLevelMap_KeyKindRequestType) {
    /** CURRENT_KEY_OF_KIND_REQUEST - Request the current key of a particular kind */
    SecurityLevelMap_KeyKindRequestType[SecurityLevelMap_KeyKindRequestType["CURRENT_KEY_OF_KIND_REQUEST"] = 0] = "CURRENT_KEY_OF_KIND_REQUEST";
    /** ALL_KEYS_OF_KIND_REQUEST - Request all keys of a particular kind */
    SecurityLevelMap_KeyKindRequestType[SecurityLevelMap_KeyKindRequestType["ALL_KEYS_OF_KIND_REQUEST"] = 1] = "ALL_KEYS_OF_KIND_REQUEST";
    SecurityLevelMap_KeyKindRequestType[SecurityLevelMap_KeyKindRequestType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(SecurityLevelMap_KeyKindRequestType || (exports.SecurityLevelMap_KeyKindRequestType = SecurityLevelMap_KeyKindRequestType = {}));
var GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus;
(function (GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus) {
    GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus[GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus["NOT_CONTESTED"] = 0] = "NOT_CONTESTED";
    GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus[GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus["MAYBE_CONTESTED"] = 1] = "MAYBE_CONTESTED";
    GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus[GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus["CONTESTED"] = 2] = "CONTESTED";
    GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus[GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus || (exports.GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus = GetProofsRequest_GetProofsRequestV0_DocumentRequest_DocumentContestedStatus = {}));
var GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type;
(function (GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type) {
    /** FULL_IDENTITY - Request for the full identity */
    GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type[GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type["FULL_IDENTITY"] = 0] = "FULL_IDENTITY";
    /** BALANCE - Request for the identity's balance */
    GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type[GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type["BALANCE"] = 1] = "BALANCE";
    /** KEYS - Request for the identity's keys */
    GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type[GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type["KEYS"] = 2] = "KEYS";
    /** REVISION - Request for the identity's revision */
    GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type[GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type["REVISION"] = 3] = "REVISION";
    GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type[GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type || (exports.GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type = GetProofsRequest_GetProofsRequestV0_IdentityRequest_Type = {}));
var GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType;
(function (GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType) {
    GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType[GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType["DOCUMENTS"] = 0] = "DOCUMENTS";
    GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType[GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType["VOTE_TALLY"] = 1] = "VOTE_TALLY";
    GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType[GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType["DOCUMENTS_AND_VOTE_TALLY"] = 2] = "DOCUMENTS_AND_VOTE_TALLY";
    GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType[GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType || (exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType = GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_ResultType = {}));
var GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome;
(function (GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome) {
    GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome[GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome["TOWARDS_IDENTITY"] = 0] = "TOWARDS_IDENTITY";
    GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome[GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome["LOCKED"] = 1] = "LOCKED";
    GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome[GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome["NO_PREVIOUS_WINNER"] = 2] = "NO_PREVIOUS_WINNER";
    GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome[GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome || (exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome = GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo_FinishedVoteOutcome = {}));
var GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType;
(function (GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType) {
    GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType[GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType["TOWARDS_IDENTITY"] = 0] = "TOWARDS_IDENTITY";
    GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType[GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType["ABSTAIN"] = 1] = "ABSTAIN";
    GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType[GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType["LOCK"] = 2] = "LOCK";
    GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType[GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType || (exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType = GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice_VoteChoiceType = {}));
var GetGroupActionsRequest_ActionStatus;
(function (GetGroupActionsRequest_ActionStatus) {
    /** ACTIVE - Request the active actions */
    GetGroupActionsRequest_ActionStatus[GetGroupActionsRequest_ActionStatus["ACTIVE"] = 0] = "ACTIVE";
    /** CLOSED - Request the closed actions */
    GetGroupActionsRequest_ActionStatus[GetGroupActionsRequest_ActionStatus["CLOSED"] = 1] = "CLOSED";
    GetGroupActionsRequest_ActionStatus[GetGroupActionsRequest_ActionStatus["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(GetGroupActionsRequest_ActionStatus || (exports.GetGroupActionsRequest_ActionStatus = GetGroupActionsRequest_ActionStatus = {}));
/** Enum for emergency action types */
var GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType;
(function (GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType) {
    /** PAUSE - Pause action */
    GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType[GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType["PAUSE"] = 0] = "PAUSE";
    /** RESUME - Resume action */
    GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType[GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType["RESUME"] = 1] = "RESUME";
    GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType[GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType || (exports.GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType = GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent_ActionType = {}));
var GetGroupActionSignersRequest_ActionStatus;
(function (GetGroupActionSignersRequest_ActionStatus) {
    /** ACTIVE - Request the active actions */
    GetGroupActionSignersRequest_ActionStatus[GetGroupActionSignersRequest_ActionStatus["ACTIVE"] = 0] = "ACTIVE";
    /** CLOSED - Request the closed actions */
    GetGroupActionSignersRequest_ActionStatus[GetGroupActionSignersRequest_ActionStatus["CLOSED"] = 1] = "CLOSED";
    GetGroupActionSignersRequest_ActionStatus[GetGroupActionSignersRequest_ActionStatus["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(GetGroupActionSignersRequest_ActionStatus || (exports.GetGroupActionSignersRequest_ActionStatus = GetGroupActionSignersRequest_ActionStatus = {}));
function createBaseProof() {
    return {
        grovedbProof: new Uint8Array(0),
        quorumHash: new Uint8Array(0),
        signature: new Uint8Array(0),
        round: 0,
        blockIdHash: new Uint8Array(0),
        quorumType: 0,
    };
}
exports.Proof = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.grovedbProof.length !== 0) {
            writer.uint32(10).bytes(message.grovedbProof);
        }
        if (message.quorumHash.length !== 0) {
            writer.uint32(18).bytes(message.quorumHash);
        }
        if (message.signature.length !== 0) {
            writer.uint32(26).bytes(message.signature);
        }
        if (message.round !== 0) {
            writer.uint32(32).uint32(message.round);
        }
        if (message.blockIdHash.length !== 0) {
            writer.uint32(42).bytes(message.blockIdHash);
        }
        if (message.quorumType !== 0) {
            writer.uint32(48).uint32(message.quorumType);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseProof();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.grovedbProof = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.quorumHash = reader.bytes();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.signature = reader.bytes();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.round = reader.uint32();
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.blockIdHash = reader.bytes();
                    continue;
                }
                case 6: {
                    if (tag !== 48) {
                        break;
                    }
                    message.quorumType = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.Proof.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseProof();
        message.grovedbProof = (_a = object.grovedbProof) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.quorumHash = (_b = object.quorumHash) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.signature = (_c = object.signature) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        message.round = (_d = object.round) !== null && _d !== void 0 ? _d : 0;
        message.blockIdHash = (_e = object.blockIdHash) !== null && _e !== void 0 ? _e : new Uint8Array(0);
        message.quorumType = (_f = object.quorumType) !== null && _f !== void 0 ? _f : 0;
        return message;
    },
};
function createBaseResponseMetadata() {
    return { height: "0", coreChainLockedHeight: 0, epoch: 0, timeMs: "0", protocolVersion: 0, chainId: "" };
}
exports.ResponseMetadata = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.height !== "0") {
            writer.uint32(8).uint64(message.height);
        }
        if (message.coreChainLockedHeight !== 0) {
            writer.uint32(16).uint32(message.coreChainLockedHeight);
        }
        if (message.epoch !== 0) {
            writer.uint32(24).uint32(message.epoch);
        }
        if (message.timeMs !== "0") {
            writer.uint32(32).uint64(message.timeMs);
        }
        if (message.protocolVersion !== 0) {
            writer.uint32(40).uint32(message.protocolVersion);
        }
        if (message.chainId !== "") {
            writer.uint32(50).string(message.chainId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseResponseMetadata();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.height = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.coreChainLockedHeight = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.epoch = reader.uint32();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.timeMs = reader.uint64().toString();
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.protocolVersion = reader.uint32();
                    continue;
                }
                case 6: {
                    if (tag !== 50) {
                        break;
                    }
                    message.chainId = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.ResponseMetadata.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseResponseMetadata();
        message.height = (_a = object.height) !== null && _a !== void 0 ? _a : "0";
        message.coreChainLockedHeight = (_b = object.coreChainLockedHeight) !== null && _b !== void 0 ? _b : 0;
        message.epoch = (_c = object.epoch) !== null && _c !== void 0 ? _c : 0;
        message.timeMs = (_d = object.timeMs) !== null && _d !== void 0 ? _d : "0";
        message.protocolVersion = (_e = object.protocolVersion) !== null && _e !== void 0 ? _e : 0;
        message.chainId = (_f = object.chainId) !== null && _f !== void 0 ? _f : "";
        return message;
    },
};
function createBaseStateTransitionBroadcastError() {
    return { code: 0, message: "", data: new Uint8Array(0) };
}
exports.StateTransitionBroadcastError = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.code !== 0) {
            writer.uint32(8).uint32(message.code);
        }
        if (message.message !== "") {
            writer.uint32(18).string(message.message);
        }
        if (message.data.length !== 0) {
            writer.uint32(26).bytes(message.data);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseStateTransitionBroadcastError();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.code = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.message = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.data = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.StateTransitionBroadcastError.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseStateTransitionBroadcastError();
        message.code = (_a = object.code) !== null && _a !== void 0 ? _a : 0;
        message.message = (_b = object.message) !== null && _b !== void 0 ? _b : "";
        message.data = (_c = object.data) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        return message;
    },
};
function createBaseBroadcastStateTransitionRequest() {
    return { stateTransition: new Uint8Array(0) };
}
exports.BroadcastStateTransitionRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.stateTransition.length !== 0) {
            writer.uint32(10).bytes(message.stateTransition);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseBroadcastStateTransitionRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.stateTransition = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.BroadcastStateTransitionRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseBroadcastStateTransitionRequest();
        message.stateTransition = (_a = object.stateTransition) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        return message;
    },
};
function createBaseBroadcastStateTransitionResponse() {
    return {};
}
exports.BroadcastStateTransitionResponse = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseBroadcastStateTransitionResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.BroadcastStateTransitionResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseBroadcastStateTransitionResponse();
        return message;
    },
};
function createBaseGetIdentityRequest() {
    return { v0: undefined };
}
exports.GetIdentityRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityRequest_GetIdentityRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityRequest_GetIdentityRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityRequest_GetIdentityRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityRequest_GetIdentityRequestV0() {
    return { id: new Uint8Array(0), prove: false };
}
exports.GetIdentityRequest_GetIdentityRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.id.length !== 0) {
            writer.uint32(10).bytes(message.id);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityRequest_GetIdentityRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.id = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityRequest_GetIdentityRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentityRequest_GetIdentityRequestV0();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetIdentityNonceRequest() {
    return { v0: undefined };
}
exports.GetIdentityNonceRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityNonceRequest_GetIdentityNonceRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityNonceRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityNonceRequest_GetIdentityNonceRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityNonceRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityNonceRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityNonceRequest_GetIdentityNonceRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityNonceRequest_GetIdentityNonceRequestV0() {
    return { identityId: new Uint8Array(0), prove: false };
}
exports.GetIdentityNonceRequest_GetIdentityNonceRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityNonceRequest_GetIdentityNonceRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityNonceRequest_GetIdentityNonceRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentityNonceRequest_GetIdentityNonceRequestV0();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetIdentityContractNonceRequest() {
    return { v0: undefined };
}
exports.GetIdentityContractNonceRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityContractNonceRequest_GetIdentityContractNonceRequestV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityContractNonceRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityContractNonceRequest_GetIdentityContractNonceRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityContractNonceRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityContractNonceRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityContractNonceRequest_GetIdentityContractNonceRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityContractNonceRequest_GetIdentityContractNonceRequestV0() {
    return { identityId: new Uint8Array(0), contractId: new Uint8Array(0), prove: false };
}
exports.GetIdentityContractNonceRequest_GetIdentityContractNonceRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        if (message.contractId.length !== 0) {
            writer.uint32(18).bytes(message.contractId);
        }
        if (message.prove !== false) {
            writer.uint32(24).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityContractNonceRequest_GetIdentityContractNonceRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityContractNonceRequest_GetIdentityContractNonceRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetIdentityContractNonceRequest_GetIdentityContractNonceRequestV0();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.contractId = (_b = object.contractId) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetIdentityBalanceRequest() {
    return { v0: undefined };
}
exports.GetIdentityBalanceRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityBalanceRequest_GetIdentityBalanceRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityBalanceRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityBalanceRequest_GetIdentityBalanceRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityBalanceRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityBalanceRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityBalanceRequest_GetIdentityBalanceRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityBalanceRequest_GetIdentityBalanceRequestV0() {
    return { id: new Uint8Array(0), prove: false };
}
exports.GetIdentityBalanceRequest_GetIdentityBalanceRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.id.length !== 0) {
            writer.uint32(10).bytes(message.id);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityBalanceRequest_GetIdentityBalanceRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.id = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityBalanceRequest_GetIdentityBalanceRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentityBalanceRequest_GetIdentityBalanceRequestV0();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetIdentityBalanceAndRevisionRequest() {
    return { v0: undefined };
}
exports.GetIdentityBalanceAndRevisionRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityBalanceAndRevisionRequest_GetIdentityBalanceAndRevisionRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityBalanceAndRevisionRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityBalanceAndRevisionRequest_GetIdentityBalanceAndRevisionRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityBalanceAndRevisionRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityBalanceAndRevisionRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityBalanceAndRevisionRequest_GetIdentityBalanceAndRevisionRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityBalanceAndRevisionRequest_GetIdentityBalanceAndRevisionRequestV0() {
    return { id: new Uint8Array(0), prove: false };
}
exports.GetIdentityBalanceAndRevisionRequest_GetIdentityBalanceAndRevisionRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.id.length !== 0) {
            writer.uint32(10).bytes(message.id);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityBalanceAndRevisionRequest_GetIdentityBalanceAndRevisionRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.id = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityBalanceAndRevisionRequest_GetIdentityBalanceAndRevisionRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentityBalanceAndRevisionRequest_GetIdentityBalanceAndRevisionRequestV0();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetIdentityResponse() {
    return { v0: undefined };
}
exports.GetIdentityResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityResponse_GetIdentityResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityResponse_GetIdentityResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityResponse_GetIdentityResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityResponse_GetIdentityResponseV0() {
    return { identity: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentityResponse_GetIdentityResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identity !== undefined) {
            writer.uint32(10).bytes(message.identity);
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityResponse_GetIdentityResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identity = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityResponse_GetIdentityResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityResponse_GetIdentityResponseV0();
        message.identity = (_a = object.identity) !== null && _a !== void 0 ? _a : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityNonceResponse() {
    return { v0: undefined };
}
exports.GetIdentityNonceResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityNonceResponse_GetIdentityNonceResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityNonceResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityNonceResponse_GetIdentityNonceResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityNonceResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityNonceResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityNonceResponse_GetIdentityNonceResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityNonceResponse_GetIdentityNonceResponseV0() {
    return { identityNonce: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentityNonceResponse_GetIdentityNonceResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityNonce !== undefined) {
            writer.uint32(8).uint64(message.identityNonce);
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityNonceResponse_GetIdentityNonceResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.identityNonce = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityNonceResponse_GetIdentityNonceResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityNonceResponse_GetIdentityNonceResponseV0();
        message.identityNonce = (_a = object.identityNonce) !== null && _a !== void 0 ? _a : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityContractNonceResponse() {
    return { v0: undefined };
}
exports.GetIdentityContractNonceResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityContractNonceResponse_GetIdentityContractNonceResponseV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityContractNonceResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityContractNonceResponse_GetIdentityContractNonceResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityContractNonceResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityContractNonceResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityContractNonceResponse_GetIdentityContractNonceResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityContractNonceResponse_GetIdentityContractNonceResponseV0() {
    return { identityContractNonce: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentityContractNonceResponse_GetIdentityContractNonceResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityContractNonce !== undefined) {
            writer.uint32(8).uint64(message.identityContractNonce);
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityContractNonceResponse_GetIdentityContractNonceResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.identityContractNonce = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityContractNonceResponse_GetIdentityContractNonceResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityContractNonceResponse_GetIdentityContractNonceResponseV0();
        message.identityContractNonce = (_a = object.identityContractNonce) !== null && _a !== void 0 ? _a : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityBalanceResponse() {
    return { v0: undefined };
}
exports.GetIdentityBalanceResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityBalanceResponse_GetIdentityBalanceResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityBalanceResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityBalanceResponse_GetIdentityBalanceResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityBalanceResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityBalanceResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityBalanceResponse_GetIdentityBalanceResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityBalanceResponse_GetIdentityBalanceResponseV0() {
    return { balance: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentityBalanceResponse_GetIdentityBalanceResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.balance !== undefined) {
            writer.uint32(8).uint64(message.balance);
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityBalanceResponse_GetIdentityBalanceResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.balance = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityBalanceResponse_GetIdentityBalanceResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityBalanceResponse_GetIdentityBalanceResponseV0();
        message.balance = (_a = object.balance) !== null && _a !== void 0 ? _a : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityBalanceAndRevisionResponse() {
    return { v0: undefined };
}
exports.GetIdentityBalanceAndRevisionResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityBalanceAndRevisionResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityBalanceAndRevisionResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityBalanceAndRevisionResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0() {
    return { balanceAndRevision: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.balanceAndRevision !== undefined) {
            exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0_BalanceAndRevision.encode(message.balanceAndRevision, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.balanceAndRevision =
                        exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0_BalanceAndRevision.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0();
        message.balanceAndRevision = (object.balanceAndRevision !== undefined && object.balanceAndRevision !== null)
            ? exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0_BalanceAndRevision.fromPartial(object.balanceAndRevision)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0_BalanceAndRevision() {
    return { balance: "0", revision: "0" };
}
exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0_BalanceAndRevision = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.balance !== "0") {
            writer.uint32(8).uint64(message.balance);
        }
        if (message.revision !== "0") {
            writer.uint32(16).uint64(message.revision);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0_BalanceAndRevision();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.balance = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.revision = reader.uint64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0_BalanceAndRevision
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentityBalanceAndRevisionResponse_GetIdentityBalanceAndRevisionResponseV0_BalanceAndRevision();
        message.balance = (_a = object.balance) !== null && _a !== void 0 ? _a : "0";
        message.revision = (_b = object.revision) !== null && _b !== void 0 ? _b : "0";
        return message;
    },
};
function createBaseKeyRequestType() {
    return { allKeys: undefined, specificKeys: undefined, searchKey: undefined };
}
exports.KeyRequestType = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.allKeys !== undefined) {
            exports.AllKeys.encode(message.allKeys, writer.uint32(10).fork()).join();
        }
        if (message.specificKeys !== undefined) {
            exports.SpecificKeys.encode(message.specificKeys, writer.uint32(18).fork()).join();
        }
        if (message.searchKey !== undefined) {
            exports.SearchKey.encode(message.searchKey, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseKeyRequestType();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.allKeys = exports.AllKeys.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.specificKeys = exports.SpecificKeys.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.searchKey = exports.SearchKey.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.KeyRequestType.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseKeyRequestType();
        message.allKeys = (object.allKeys !== undefined && object.allKeys !== null)
            ? exports.AllKeys.fromPartial(object.allKeys)
            : undefined;
        message.specificKeys = (object.specificKeys !== undefined && object.specificKeys !== null)
            ? exports.SpecificKeys.fromPartial(object.specificKeys)
            : undefined;
        message.searchKey = (object.searchKey !== undefined && object.searchKey !== null)
            ? exports.SearchKey.fromPartial(object.searchKey)
            : undefined;
        return message;
    },
};
function createBaseAllKeys() {
    return {};
}
exports.AllKeys = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseAllKeys();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.AllKeys.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseAllKeys();
        return message;
    },
};
function createBaseSpecificKeys() {
    return { keyIds: [] };
}
exports.SpecificKeys = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        writer.uint32(10).fork();
        for (var _i = 0, _a = message.keyIds; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(v);
        }
        writer.join();
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSpecificKeys();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag === 8) {
                        message.keyIds.push(reader.uint32());
                        continue;
                    }
                    if (tag === 10) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.keyIds.push(reader.uint32());
                        }
                        continue;
                    }
                    break;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.SpecificKeys.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseSpecificKeys();
        message.keyIds = ((_a = object.keyIds) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        return message;
    },
};
function createBaseSearchKey() {
    return { purposeMap: {} };
}
exports.SearchKey = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        Object.entries(message.purposeMap).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.SearchKey_PurposeMapEntry.encode({ key: key, value: value }, writer.uint32(10).fork()).join();
        });
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSearchKey();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    var entry1 = exports.SearchKey_PurposeMapEntry.decode(reader, reader.uint32());
                    if (entry1.value !== undefined) {
                        message.purposeMap[entry1.key] = entry1.value;
                    }
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.SearchKey.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseSearchKey();
        message.purposeMap = Object.entries((_a = object.purposeMap) !== null && _a !== void 0 ? _a : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[globalThis.Number(key)] = exports.SecurityLevelMap.fromPartial(value);
            }
            return acc;
        }, {});
        return message;
    },
};
function createBaseSearchKey_PurposeMapEntry() {
    return { key: 0, value: undefined };
}
exports.SearchKey_PurposeMapEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.key !== 0) {
            writer.uint32(8).uint32(message.key);
        }
        if (message.value !== undefined) {
            exports.SecurityLevelMap.encode(message.value, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSearchKey_PurposeMapEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.key = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.value = exports.SecurityLevelMap.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.SearchKey_PurposeMapEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseSearchKey_PurposeMapEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : 0;
        message.value = (object.value !== undefined && object.value !== null)
            ? exports.SecurityLevelMap.fromPartial(object.value)
            : undefined;
        return message;
    },
};
function createBaseSecurityLevelMap() {
    return { securityLevelMap: {} };
}
exports.SecurityLevelMap = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        Object.entries(message.securityLevelMap).forEach(function (_a) {
            var key = _a[0], value = _a[1];
            exports.SecurityLevelMap_SecurityLevelMapEntry.encode({ key: key, value: value }, writer.uint32(10).fork()).join();
        });
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSecurityLevelMap();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    var entry1 = exports.SecurityLevelMap_SecurityLevelMapEntry.decode(reader, reader.uint32());
                    if (entry1.value !== undefined) {
                        message.securityLevelMap[entry1.key] = entry1.value;
                    }
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.SecurityLevelMap.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseSecurityLevelMap();
        message.securityLevelMap = Object.entries((_a = object.securityLevelMap) !== null && _a !== void 0 ? _a : {}).reduce(function (acc, _a) {
            var key = _a[0], value = _a[1];
            if (value !== undefined) {
                acc[globalThis.Number(key)] = value;
            }
            return acc;
        }, {});
        return message;
    },
};
function createBaseSecurityLevelMap_SecurityLevelMapEntry() {
    return { key: 0, value: 0 };
}
exports.SecurityLevelMap_SecurityLevelMapEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.key !== 0) {
            writer.uint32(8).uint32(message.key);
        }
        if (message.value !== 0) {
            writer.uint32(16).int32(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseSecurityLevelMap_SecurityLevelMapEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.key = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.value = reader.int32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.SecurityLevelMap_SecurityLevelMapEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseSecurityLevelMap_SecurityLevelMapEntry();
        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : 0;
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetIdentityKeysRequest() {
    return { v0: undefined };
}
exports.GetIdentityKeysRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityKeysRequest_GetIdentityKeysRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityKeysRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityKeysRequest_GetIdentityKeysRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityKeysRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityKeysRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityKeysRequest_GetIdentityKeysRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityKeysRequest_GetIdentityKeysRequestV0() {
    return { identityId: new Uint8Array(0), requestType: undefined, limit: undefined, offset: undefined, prove: false };
}
exports.GetIdentityKeysRequest_GetIdentityKeysRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        if (message.requestType !== undefined) {
            exports.KeyRequestType.encode(message.requestType, writer.uint32(18).fork()).join();
        }
        if (message.limit !== undefined) {
            wrappers_1.UInt32Value.encode({ value: message.limit }, writer.uint32(26).fork()).join();
        }
        if (message.offset !== undefined) {
            wrappers_1.UInt32Value.encode({ value: message.offset }, writer.uint32(34).fork()).join();
        }
        if (message.prove !== false) {
            writer.uint32(40).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityKeysRequest_GetIdentityKeysRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.requestType = exports.KeyRequestType.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.limit = wrappers_1.UInt32Value.decode(reader, reader.uint32()).value;
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.offset = wrappers_1.UInt32Value.decode(reader, reader.uint32()).value;
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityKeysRequest_GetIdentityKeysRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetIdentityKeysRequest_GetIdentityKeysRequestV0();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.requestType = (object.requestType !== undefined && object.requestType !== null)
            ? exports.KeyRequestType.fromPartial(object.requestType)
            : undefined;
        message.limit = (_b = object.limit) !== null && _b !== void 0 ? _b : undefined;
        message.offset = (_c = object.offset) !== null && _c !== void 0 ? _c : undefined;
        message.prove = (_d = object.prove) !== null && _d !== void 0 ? _d : false;
        return message;
    },
};
function createBaseGetIdentityKeysResponse() {
    return { v0: undefined };
}
exports.GetIdentityKeysResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityKeysResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityKeysResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityKeysResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityKeysResponse_GetIdentityKeysResponseV0() {
    return { keys: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.keys !== undefined) {
            exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0_Keys.encode(message.keys, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityKeysResponse_GetIdentityKeysResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.keys = exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0_Keys.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityKeysResponse_GetIdentityKeysResponseV0();
        message.keys = (object.keys !== undefined && object.keys !== null)
            ? exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0_Keys.fromPartial(object.keys)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityKeysResponse_GetIdentityKeysResponseV0_Keys() {
    return { keysBytes: [] };
}
exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0_Keys = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.keysBytes; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityKeysResponse_GetIdentityKeysResponseV0_Keys();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.keysBytes.push(reader.bytes());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityKeysResponse_GetIdentityKeysResponseV0_Keys.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityKeysResponse_GetIdentityKeysResponseV0_Keys();
        message.keysBytes = ((_a = object.keysBytes) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        return message;
    },
};
function createBaseGetIdentitiesContractKeysRequest() {
    return { v0: undefined };
}
exports.GetIdentitiesContractKeysRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentitiesContractKeysRequest_GetIdentitiesContractKeysRequestV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesContractKeysRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentitiesContractKeysRequest_GetIdentitiesContractKeysRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesContractKeysRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesContractKeysRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentitiesContractKeysRequest_GetIdentitiesContractKeysRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesContractKeysRequest_GetIdentitiesContractKeysRequestV0() {
    return { identitiesIds: [], contractId: new Uint8Array(0), documentTypeName: undefined, purposes: [], prove: false };
}
exports.GetIdentitiesContractKeysRequest_GetIdentitiesContractKeysRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.identitiesIds; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        if (message.contractId.length !== 0) {
            writer.uint32(18).bytes(message.contractId);
        }
        if (message.documentTypeName !== undefined) {
            writer.uint32(26).string(message.documentTypeName);
        }
        writer.uint32(34).fork();
        for (var _b = 0, _c = message.purposes; _b < _c.length; _b++) {
            var v = _c[_b];
            writer.int32(v);
        }
        writer.join();
        if (message.prove !== false) {
            writer.uint32(40).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesContractKeysRequest_GetIdentitiesContractKeysRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identitiesIds.push(reader.bytes());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.documentTypeName = reader.string();
                    continue;
                }
                case 4: {
                    if (tag === 32) {
                        message.purposes.push(reader.int32());
                        continue;
                    }
                    if (tag === 34) {
                        var end2 = reader.uint32() + reader.pos;
                        while (reader.pos < end2) {
                            message.purposes.push(reader.int32());
                        }
                        continue;
                    }
                    break;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesContractKeysRequest_GetIdentitiesContractKeysRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseGetIdentitiesContractKeysRequest_GetIdentitiesContractKeysRequestV0();
        message.identitiesIds = ((_a = object.identitiesIds) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.contractId = (_b = object.contractId) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.documentTypeName = (_c = object.documentTypeName) !== null && _c !== void 0 ? _c : undefined;
        message.purposes = ((_d = object.purposes) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        message.prove = (_e = object.prove) !== null && _e !== void 0 ? _e : false;
        return message;
    },
};
function createBaseGetIdentitiesContractKeysResponse() {
    return { v0: undefined };
}
exports.GetIdentitiesContractKeysResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesContractKeysResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesContractKeysResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesContractKeysResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0() {
    return { identitiesKeys: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identitiesKeys !== undefined) {
            exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentitiesKeys.encode(message.identitiesKeys, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identitiesKeys = exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentitiesKeys
                        .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0();
        message.identitiesKeys = (object.identitiesKeys !== undefined && object.identitiesKeys !== null)
            ? exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentitiesKeys.fromPartial(object.identitiesKeys)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_PurposeKeys() {
    return { purpose: 0, keysBytes: [] };
}
exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_PurposeKeys = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.purpose !== 0) {
            writer.uint32(8).int32(message.purpose);
        }
        for (var _i = 0, _a = message.keysBytes; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).bytes(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_PurposeKeys();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.purpose = reader.int32();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.keysBytes.push(reader.bytes());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_PurposeKeys.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_PurposeKeys();
        message.purpose = (_a = object.purpose) !== null && _a !== void 0 ? _a : 0;
        message.keysBytes = ((_b = object.keysBytes) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        return message;
    },
};
function createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentityKeys() {
    return { identityId: new Uint8Array(0), keys: [] };
}
exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentityKeys = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        for (var _i = 0, _a = message.keys; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_PurposeKeys.encode(v, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentityKeys();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.keys.push(exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_PurposeKeys.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentityKeys.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentityKeys();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.keys =
            ((_b = object.keys) === null || _b === void 0 ? void 0 : _b.map(function (e) {
                return exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_PurposeKeys.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentitiesKeys() {
    return { entries: [] };
}
exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentitiesKeys = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.entries; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentityKeys.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentitiesKeys();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.entries.push(exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentityKeys.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentitiesKeys.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentitiesKeys();
        message.entries =
            ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetIdentitiesContractKeysResponse_GetIdentitiesContractKeysResponseV0_IdentityKeys.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetEvonodesProposedEpochBlocksByIdsRequest() {
    return { v0: undefined };
}
exports.GetEvonodesProposedEpochBlocksByIdsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetEvonodesProposedEpochBlocksByIdsRequest_GetEvonodesProposedEpochBlocksByIdsRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEvonodesProposedEpochBlocksByIdsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetEvonodesProposedEpochBlocksByIdsRequest_GetEvonodesProposedEpochBlocksByIdsRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEvonodesProposedEpochBlocksByIdsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetEvonodesProposedEpochBlocksByIdsRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetEvonodesProposedEpochBlocksByIdsRequest_GetEvonodesProposedEpochBlocksByIdsRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetEvonodesProposedEpochBlocksByIdsRequest_GetEvonodesProposedEpochBlocksByIdsRequestV0() {
    return { epoch: undefined, ids: [], prove: false };
}
exports.GetEvonodesProposedEpochBlocksByIdsRequest_GetEvonodesProposedEpochBlocksByIdsRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.epoch !== undefined) {
            writer.uint32(8).uint32(message.epoch);
        }
        for (var _i = 0, _a = message.ids; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).bytes(v);
        }
        if (message.prove !== false) {
            writer.uint32(24).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEvonodesProposedEpochBlocksByIdsRequest_GetEvonodesProposedEpochBlocksByIdsRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.epoch = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.ids.push(reader.bytes());
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEvonodesProposedEpochBlocksByIdsRequest_GetEvonodesProposedEpochBlocksByIdsRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetEvonodesProposedEpochBlocksByIdsRequest_GetEvonodesProposedEpochBlocksByIdsRequestV0();
        message.epoch = (_a = object.epoch) !== null && _a !== void 0 ? _a : undefined;
        message.ids = ((_b = object.ids) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetEvonodesProposedEpochBlocksResponse() {
    return { v0: undefined };
}
exports.GetEvonodesProposedEpochBlocksResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEvonodesProposedEpochBlocksResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEvonodesProposedEpochBlocksResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetEvonodesProposedEpochBlocksResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0() {
    return { evonodesProposedBlockCountsInfo: undefined, proof: undefined, metadata: undefined };
}
exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.evonodesProposedBlockCountsInfo !== undefined) {
            exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodesProposedBlocks.encode(message.evonodesProposedBlockCountsInfo, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.evonodesProposedBlockCountsInfo =
                        exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodesProposedBlocks
                            .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0();
        message.evonodesProposedBlockCountsInfo =
            (object.evonodesProposedBlockCountsInfo !== undefined && object.evonodesProposedBlockCountsInfo !== null)
                ? exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodesProposedBlocks
                    .fromPartial(object.evonodesProposedBlockCountsInfo)
                : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodeProposedBlocks() {
    return { proTxHash: new Uint8Array(0), count: "0" };
}
exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodeProposedBlocks = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.proTxHash.length !== 0) {
            writer.uint32(10).bytes(message.proTxHash);
        }
        if (message.count !== "0") {
            writer.uint32(16).uint64(message.count);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodeProposedBlocks();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.proTxHash = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.count = reader.uint64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodeProposedBlocks
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodeProposedBlocks();
        message.proTxHash = (_a = object.proTxHash) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.count = (_b = object.count) !== null && _b !== void 0 ? _b : "0";
        return message;
    },
};
function createBaseGetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodesProposedBlocks() {
    return { evonodesProposedBlockCounts: [] };
}
exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodesProposedBlocks = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.evonodesProposedBlockCounts; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodeProposedBlocks.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodesProposedBlocks();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.evonodesProposedBlockCounts.push(exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodeProposedBlocks
                        .decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodesProposedBlocks
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodesProposedBlocks();
        message.evonodesProposedBlockCounts = ((_a = object.evonodesProposedBlockCounts) === null || _a === void 0 ? void 0 : _a.map(function (e) {
            return exports.GetEvonodesProposedEpochBlocksResponse_GetEvonodesProposedEpochBlocksResponseV0_EvonodeProposedBlocks
                .fromPartial(e);
        })) || [];
        return message;
    },
};
function createBaseGetEvonodesProposedEpochBlocksByRangeRequest() {
    return { v0: undefined };
}
exports.GetEvonodesProposedEpochBlocksByRangeRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetEvonodesProposedEpochBlocksByRangeRequest_GetEvonodesProposedEpochBlocksByRangeRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEvonodesProposedEpochBlocksByRangeRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetEvonodesProposedEpochBlocksByRangeRequest_GetEvonodesProposedEpochBlocksByRangeRequestV0
                        .decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEvonodesProposedEpochBlocksByRangeRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetEvonodesProposedEpochBlocksByRangeRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetEvonodesProposedEpochBlocksByRangeRequest_GetEvonodesProposedEpochBlocksByRangeRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetEvonodesProposedEpochBlocksByRangeRequest_GetEvonodesProposedEpochBlocksByRangeRequestV0() {
    return { epoch: undefined, limit: undefined, startAfter: undefined, startAt: undefined, prove: false };
}
exports.GetEvonodesProposedEpochBlocksByRangeRequest_GetEvonodesProposedEpochBlocksByRangeRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.epoch !== undefined) {
            writer.uint32(8).uint32(message.epoch);
        }
        if (message.limit !== undefined) {
            writer.uint32(16).uint32(message.limit);
        }
        if (message.startAfter !== undefined) {
            writer.uint32(26).bytes(message.startAfter);
        }
        if (message.startAt !== undefined) {
            writer.uint32(34).bytes(message.startAt);
        }
        if (message.prove !== false) {
            writer.uint32(40).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEvonodesProposedEpochBlocksByRangeRequest_GetEvonodesProposedEpochBlocksByRangeRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.epoch = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.limit = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.startAfter = reader.bytes();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.startAt = reader.bytes();
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEvonodesProposedEpochBlocksByRangeRequest_GetEvonodesProposedEpochBlocksByRangeRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseGetEvonodesProposedEpochBlocksByRangeRequest_GetEvonodesProposedEpochBlocksByRangeRequestV0();
        message.epoch = (_a = object.epoch) !== null && _a !== void 0 ? _a : undefined;
        message.limit = (_b = object.limit) !== null && _b !== void 0 ? _b : undefined;
        message.startAfter = (_c = object.startAfter) !== null && _c !== void 0 ? _c : undefined;
        message.startAt = (_d = object.startAt) !== null && _d !== void 0 ? _d : undefined;
        message.prove = (_e = object.prove) !== null && _e !== void 0 ? _e : false;
        return message;
    },
};
function createBaseGetIdentitiesBalancesRequest() {
    return { v0: undefined };
}
exports.GetIdentitiesBalancesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentitiesBalancesRequest_GetIdentitiesBalancesRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesBalancesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentitiesBalancesRequest_GetIdentitiesBalancesRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesBalancesRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesBalancesRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentitiesBalancesRequest_GetIdentitiesBalancesRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesBalancesRequest_GetIdentitiesBalancesRequestV0() {
    return { ids: [], prove: false };
}
exports.GetIdentitiesBalancesRequest_GetIdentitiesBalancesRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.ids; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesBalancesRequest_GetIdentitiesBalancesRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.ids.push(reader.bytes());
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesBalancesRequest_GetIdentitiesBalancesRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentitiesBalancesRequest_GetIdentitiesBalancesRequestV0();
        message.ids = ((_a = object.ids) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetIdentitiesBalancesResponse() {
    return { v0: undefined };
}
exports.GetIdentitiesBalancesResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesBalancesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesBalancesResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesBalancesResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0() {
    return { identitiesBalances: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identitiesBalances !== undefined) {
            exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentitiesBalances.encode(message.identitiesBalances, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identitiesBalances = exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentitiesBalances
                        .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0();
        message.identitiesBalances = (object.identitiesBalances !== undefined && object.identitiesBalances !== null)
            ? exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentitiesBalances.fromPartial(object.identitiesBalances)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentityBalance() {
    return { identityId: new Uint8Array(0), balance: undefined };
}
exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentityBalance = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        if (message.balance !== undefined) {
            writer.uint32(16).uint64(message.balance);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentityBalance();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.balance = reader.uint64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentityBalance.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentityBalance();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.balance = (_b = object.balance) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentitiesBalances() {
    return { entries: [] };
}
exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentitiesBalances = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.entries; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentityBalance.encode(v, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentitiesBalances();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.entries.push(exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentityBalance.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentitiesBalances.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentitiesBalances();
        message.entries =
            ((_a = object.entries) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetIdentitiesBalancesResponse_GetIdentitiesBalancesResponseV0_IdentityBalance.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetProofsRequest() {
    return { v0: undefined };
}
exports.GetProofsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetProofsRequest_GetProofsRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetProofsRequest_GetProofsRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProofsRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetProofsRequest_GetProofsRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetProofsRequest_GetProofsRequestV0() {
    return {
        identities: [],
        contracts: [],
        documents: [],
        votes: [],
        identityTokenBalances: [],
        identityTokenInfos: [],
        tokenStatuses: [],
    };
}
exports.GetProofsRequest_GetProofsRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.identities; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetProofsRequest_GetProofsRequestV0_IdentityRequest.encode(v, writer.uint32(10).fork()).join();
        }
        for (var _b = 0, _c = message.contracts; _b < _c.length; _b++) {
            var v = _c[_b];
            exports.GetProofsRequest_GetProofsRequestV0_ContractRequest.encode(v, writer.uint32(18).fork()).join();
        }
        for (var _d = 0, _e = message.documents; _d < _e.length; _d++) {
            var v = _e[_d];
            exports.GetProofsRequest_GetProofsRequestV0_DocumentRequest.encode(v, writer.uint32(26).fork()).join();
        }
        for (var _f = 0, _g = message.votes; _f < _g.length; _f++) {
            var v = _g[_f];
            exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest.encode(v, writer.uint32(34).fork()).join();
        }
        for (var _h = 0, _j = message.identityTokenBalances; _h < _j.length; _h++) {
            var v = _j[_h];
            exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenBalanceRequest.encode(v, writer.uint32(42).fork()).join();
        }
        for (var _k = 0, _l = message.identityTokenInfos; _k < _l.length; _k++) {
            var v = _l[_k];
            exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenInfoRequest.encode(v, writer.uint32(50).fork()).join();
        }
        for (var _m = 0, _o = message.tokenStatuses; _m < _o.length; _m++) {
            var v = _o[_m];
            exports.GetProofsRequest_GetProofsRequestV0_TokenStatusRequest.encode(v, writer.uint32(58).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsRequest_GetProofsRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identities.push(exports.GetProofsRequest_GetProofsRequestV0_IdentityRequest.decode(reader, reader.uint32()));
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.contracts.push(exports.GetProofsRequest_GetProofsRequestV0_ContractRequest.decode(reader, reader.uint32()));
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.documents.push(exports.GetProofsRequest_GetProofsRequestV0_DocumentRequest.decode(reader, reader.uint32()));
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.votes.push(exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest.decode(reader, reader.uint32()));
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.identityTokenBalances.push(exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenBalanceRequest.decode(reader, reader.uint32()));
                    continue;
                }
                case 6: {
                    if (tag !== 50) {
                        break;
                    }
                    message.identityTokenInfos.push(exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenInfoRequest.decode(reader, reader.uint32()));
                    continue;
                }
                case 7: {
                    if (tag !== 58) {
                        break;
                    }
                    message.tokenStatuses.push(exports.GetProofsRequest_GetProofsRequestV0_TokenStatusRequest.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsRequest_GetProofsRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g;
        var message = createBaseGetProofsRequest_GetProofsRequestV0();
        message.identities =
            ((_a = object.identities) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.GetProofsRequest_GetProofsRequestV0_IdentityRequest.fromPartial(e); })) || [];
        message.contracts =
            ((_b = object.contracts) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.GetProofsRequest_GetProofsRequestV0_ContractRequest.fromPartial(e); })) || [];
        message.documents =
            ((_c = object.documents) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.GetProofsRequest_GetProofsRequestV0_DocumentRequest.fromPartial(e); })) || [];
        message.votes = ((_d = object.votes) === null || _d === void 0 ? void 0 : _d.map(function (e) { return exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest.fromPartial(e); })) ||
            [];
        message.identityTokenBalances =
            ((_e = object.identityTokenBalances) === null || _e === void 0 ? void 0 : _e.map(function (e) {
                return exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenBalanceRequest.fromPartial(e);
            })) || [];
        message.identityTokenInfos =
            ((_f = object.identityTokenInfos) === null || _f === void 0 ? void 0 : _f.map(function (e) {
                return exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenInfoRequest.fromPartial(e);
            })) || [];
        message.tokenStatuses =
            ((_g = object.tokenStatuses) === null || _g === void 0 ? void 0 : _g.map(function (e) { return exports.GetProofsRequest_GetProofsRequestV0_TokenStatusRequest.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseGetProofsRequest_GetProofsRequestV0_DocumentRequest() {
    return {
        contractId: new Uint8Array(0),
        documentType: "",
        documentTypeKeepsHistory: false,
        documentId: new Uint8Array(0),
        documentContestedStatus: 0,
    };
}
exports.GetProofsRequest_GetProofsRequestV0_DocumentRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        if (message.documentType !== "") {
            writer.uint32(18).string(message.documentType);
        }
        if (message.documentTypeKeepsHistory !== false) {
            writer.uint32(24).bool(message.documentTypeKeepsHistory);
        }
        if (message.documentId.length !== 0) {
            writer.uint32(34).bytes(message.documentId);
        }
        if (message.documentContestedStatus !== 0) {
            writer.uint32(40).int32(message.documentContestedStatus);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_DocumentRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.documentType = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.documentTypeKeepsHistory = reader.bool();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.documentId = reader.bytes();
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.documentContestedStatus = reader.int32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsRequest_GetProofsRequestV0_DocumentRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_DocumentRequest();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.documentType = (_b = object.documentType) !== null && _b !== void 0 ? _b : "";
        message.documentTypeKeepsHistory = (_c = object.documentTypeKeepsHistory) !== null && _c !== void 0 ? _c : false;
        message.documentId = (_d = object.documentId) !== null && _d !== void 0 ? _d : new Uint8Array(0);
        message.documentContestedStatus = (_e = object.documentContestedStatus) !== null && _e !== void 0 ? _e : 0;
        return message;
    },
};
function createBaseGetProofsRequest_GetProofsRequestV0_IdentityRequest() {
    return { identityId: new Uint8Array(0), requestType: 0 };
}
exports.GetProofsRequest_GetProofsRequestV0_IdentityRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        if (message.requestType !== 0) {
            writer.uint32(16).int32(message.requestType);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_IdentityRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.requestType = reader.int32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsRequest_GetProofsRequestV0_IdentityRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_IdentityRequest();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.requestType = (_b = object.requestType) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetProofsRequest_GetProofsRequestV0_ContractRequest() {
    return { contractId: new Uint8Array(0) };
}
exports.GetProofsRequest_GetProofsRequestV0_ContractRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_ContractRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsRequest_GetProofsRequestV0_ContractRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_ContractRequest();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        return message;
    },
};
function createBaseGetProofsRequest_GetProofsRequestV0_VoteStatusRequest() {
    return { contestedResourceVoteStatusRequest: undefined };
}
exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contestedResourceVoteStatusRequest !== undefined) {
            exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest_ContestedResourceVoteStatusRequest.encode(message.contestedResourceVoteStatusRequest, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_VoteStatusRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contestedResourceVoteStatusRequest =
                        exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest_ContestedResourceVoteStatusRequest.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProofsRequest_GetProofsRequestV0_VoteStatusRequest();
        message.contestedResourceVoteStatusRequest =
            (object.contestedResourceVoteStatusRequest !== undefined && object.contestedResourceVoteStatusRequest !== null)
                ? exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest_ContestedResourceVoteStatusRequest.fromPartial(object.contestedResourceVoteStatusRequest)
                : undefined;
        return message;
    },
};
function createBaseGetProofsRequest_GetProofsRequestV0_VoteStatusRequest_ContestedResourceVoteStatusRequest() {
    return {
        contractId: new Uint8Array(0),
        documentTypeName: "",
        indexName: "",
        indexValues: [],
        voterIdentifier: new Uint8Array(0),
    };
}
exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest_ContestedResourceVoteStatusRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        if (message.documentTypeName !== "") {
            writer.uint32(18).string(message.documentTypeName);
        }
        if (message.indexName !== "") {
            writer.uint32(26).string(message.indexName);
        }
        for (var _i = 0, _a = message.indexValues; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(34).bytes(v);
        }
        if (message.voterIdentifier.length !== 0) {
            writer.uint32(42).bytes(message.voterIdentifier);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_VoteStatusRequest_ContestedResourceVoteStatusRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.documentTypeName = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.indexName = reader.string();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.indexValues.push(reader.bytes());
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.voterIdentifier = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsRequest_GetProofsRequestV0_VoteStatusRequest_ContestedResourceVoteStatusRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_VoteStatusRequest_ContestedResourceVoteStatusRequest();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.documentTypeName = (_b = object.documentTypeName) !== null && _b !== void 0 ? _b : "";
        message.indexName = (_c = object.indexName) !== null && _c !== void 0 ? _c : "";
        message.indexValues = ((_d = object.indexValues) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        message.voterIdentifier = (_e = object.voterIdentifier) !== null && _e !== void 0 ? _e : new Uint8Array(0);
        return message;
    },
};
function createBaseGetProofsRequest_GetProofsRequestV0_IdentityTokenBalanceRequest() {
    return { tokenId: new Uint8Array(0), identityId: new Uint8Array(0) };
}
exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenBalanceRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        if (message.identityId.length !== 0) {
            writer.uint32(18).bytes(message.identityId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_IdentityTokenBalanceRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenBalanceRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_IdentityTokenBalanceRequest();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.identityId = (_b = object.identityId) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        return message;
    },
};
function createBaseGetProofsRequest_GetProofsRequestV0_IdentityTokenInfoRequest() {
    return { tokenId: new Uint8Array(0), identityId: new Uint8Array(0) };
}
exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenInfoRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        if (message.identityId.length !== 0) {
            writer.uint32(18).bytes(message.identityId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_IdentityTokenInfoRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsRequest_GetProofsRequestV0_IdentityTokenInfoRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_IdentityTokenInfoRequest();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.identityId = (_b = object.identityId) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        return message;
    },
};
function createBaseGetProofsRequest_GetProofsRequestV0_TokenStatusRequest() {
    return { tokenId: new Uint8Array(0) };
}
exports.GetProofsRequest_GetProofsRequestV0_TokenStatusRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_TokenStatusRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsRequest_GetProofsRequestV0_TokenStatusRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProofsRequest_GetProofsRequestV0_TokenStatusRequest();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        return message;
    },
};
function createBaseGetProofsResponse() {
    return { v0: undefined };
}
exports.GetProofsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetProofsResponse_GetProofsResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetProofsResponse_GetProofsResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProofsResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetProofsResponse_GetProofsResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetProofsResponse_GetProofsResponseV0() {
    return { proof: undefined, metadata: undefined };
}
exports.GetProofsResponse_GetProofsResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(10).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProofsResponse_GetProofsResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProofsResponse_GetProofsResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProofsResponse_GetProofsResponseV0();
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetDataContractRequest() {
    return { v0: undefined };
}
exports.GetDataContractRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetDataContractRequest_GetDataContractRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetDataContractRequest_GetDataContractRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDataContractRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetDataContractRequest_GetDataContractRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetDataContractRequest_GetDataContractRequestV0() {
    return { id: new Uint8Array(0), prove: false };
}
exports.GetDataContractRequest_GetDataContractRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.id.length !== 0) {
            writer.uint32(10).bytes(message.id);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractRequest_GetDataContractRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.id = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractRequest_GetDataContractRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetDataContractRequest_GetDataContractRequestV0();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetDataContractResponse() {
    return { v0: undefined };
}
exports.GetDataContractResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetDataContractResponse_GetDataContractResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetDataContractResponse_GetDataContractResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDataContractResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetDataContractResponse_GetDataContractResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetDataContractResponse_GetDataContractResponseV0() {
    return { dataContract: undefined, proof: undefined, metadata: undefined };
}
exports.GetDataContractResponse_GetDataContractResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.dataContract !== undefined) {
            writer.uint32(10).bytes(message.dataContract);
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractResponse_GetDataContractResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.dataContract = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractResponse_GetDataContractResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetDataContractResponse_GetDataContractResponseV0();
        message.dataContract = (_a = object.dataContract) !== null && _a !== void 0 ? _a : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetDataContractsRequest() {
    return { v0: undefined };
}
exports.GetDataContractsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetDataContractsRequest_GetDataContractsRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetDataContractsRequest_GetDataContractsRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDataContractsRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetDataContractsRequest_GetDataContractsRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetDataContractsRequest_GetDataContractsRequestV0() {
    return { ids: [], prove: false };
}
exports.GetDataContractsRequest_GetDataContractsRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.ids; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractsRequest_GetDataContractsRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.ids.push(reader.bytes());
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractsRequest_GetDataContractsRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetDataContractsRequest_GetDataContractsRequestV0();
        message.ids = ((_a = object.ids) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetDataContractsResponse() {
    return { v0: undefined };
}
exports.GetDataContractsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetDataContractsResponse_GetDataContractsResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetDataContractsResponse_GetDataContractsResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDataContractsResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetDataContractsResponse_GetDataContractsResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetDataContractsResponse_DataContractEntry() {
    return { identifier: new Uint8Array(0), dataContract: undefined };
}
exports.GetDataContractsResponse_DataContractEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identifier.length !== 0) {
            writer.uint32(10).bytes(message.identifier);
        }
        if (message.dataContract !== undefined) {
            wrappers_1.BytesValue.encode({ value: message.dataContract }, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractsResponse_DataContractEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identifier = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.dataContract = wrappers_1.BytesValue.decode(reader, reader.uint32()).value;
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractsResponse_DataContractEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetDataContractsResponse_DataContractEntry();
        message.identifier = (_a = object.identifier) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.dataContract = (_b = object.dataContract) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetDataContractsResponse_DataContracts() {
    return { dataContractEntries: [] };
}
exports.GetDataContractsResponse_DataContracts = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.dataContractEntries; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetDataContractsResponse_DataContractEntry.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractsResponse_DataContracts();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.dataContractEntries.push(exports.GetDataContractsResponse_DataContractEntry.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractsResponse_DataContracts.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetDataContractsResponse_DataContracts();
        message.dataContractEntries =
            ((_a = object.dataContractEntries) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.GetDataContractsResponse_DataContractEntry.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseGetDataContractsResponse_GetDataContractsResponseV0() {
    return { dataContracts: undefined, proof: undefined, metadata: undefined };
}
exports.GetDataContractsResponse_GetDataContractsResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.dataContracts !== undefined) {
            exports.GetDataContractsResponse_DataContracts.encode(message.dataContracts, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractsResponse_GetDataContractsResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.dataContracts = exports.GetDataContractsResponse_DataContracts.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractsResponse_GetDataContractsResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDataContractsResponse_GetDataContractsResponseV0();
        message.dataContracts = (object.dataContracts !== undefined && object.dataContracts !== null)
            ? exports.GetDataContractsResponse_DataContracts.fromPartial(object.dataContracts)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetDataContractHistoryRequest() {
    return { v0: undefined };
}
exports.GetDataContractHistoryRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetDataContractHistoryRequest_GetDataContractHistoryRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractHistoryRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetDataContractHistoryRequest_GetDataContractHistoryRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractHistoryRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDataContractHistoryRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetDataContractHistoryRequest_GetDataContractHistoryRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetDataContractHistoryRequest_GetDataContractHistoryRequestV0() {
    return { id: new Uint8Array(0), limit: undefined, offset: undefined, startAtMs: "0", prove: false };
}
exports.GetDataContractHistoryRequest_GetDataContractHistoryRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.id.length !== 0) {
            writer.uint32(10).bytes(message.id);
        }
        if (message.limit !== undefined) {
            wrappers_1.UInt32Value.encode({ value: message.limit }, writer.uint32(18).fork()).join();
        }
        if (message.offset !== undefined) {
            wrappers_1.UInt32Value.encode({ value: message.offset }, writer.uint32(26).fork()).join();
        }
        if (message.startAtMs !== "0") {
            writer.uint32(32).uint64(message.startAtMs);
        }
        if (message.prove !== false) {
            writer.uint32(40).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractHistoryRequest_GetDataContractHistoryRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.id = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.limit = wrappers_1.UInt32Value.decode(reader, reader.uint32()).value;
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.offset = wrappers_1.UInt32Value.decode(reader, reader.uint32()).value;
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.startAtMs = reader.uint64().toString();
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractHistoryRequest_GetDataContractHistoryRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseGetDataContractHistoryRequest_GetDataContractHistoryRequestV0();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.limit = (_b = object.limit) !== null && _b !== void 0 ? _b : undefined;
        message.offset = (_c = object.offset) !== null && _c !== void 0 ? _c : undefined;
        message.startAtMs = (_d = object.startAtMs) !== null && _d !== void 0 ? _d : "0";
        message.prove = (_e = object.prove) !== null && _e !== void 0 ? _e : false;
        return message;
    },
};
function createBaseGetDataContractHistoryResponse() {
    return { v0: undefined };
}
exports.GetDataContractHistoryResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractHistoryResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractHistoryResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDataContractHistoryResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetDataContractHistoryResponse_GetDataContractHistoryResponseV0() {
    return { dataContractHistory: undefined, proof: undefined, metadata: undefined };
}
exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.dataContractHistory !== undefined) {
            exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistory.encode(message.dataContractHistory, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractHistoryResponse_GetDataContractHistoryResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.dataContractHistory =
                        exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistory.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDataContractHistoryResponse_GetDataContractHistoryResponseV0();
        message.dataContractHistory = (object.dataContractHistory !== undefined && object.dataContractHistory !== null)
            ? exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistory.fromPartial(object.dataContractHistory)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistoryEntry() {
    return { date: "0", value: new Uint8Array(0) };
}
exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistoryEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.date !== "0") {
            writer.uint32(8).uint64(message.date);
        }
        if (message.value.length !== 0) {
            writer.uint32(18).bytes(message.value);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistoryEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.date = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.value = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistoryEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistoryEntry();
        message.date = (_a = object.date) !== null && _a !== void 0 ? _a : "0";
        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        return message;
    },
};
function createBaseGetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistory() {
    return { dataContractEntries: [] };
}
exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistory = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.dataContractEntries; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistoryEntry.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistory();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.dataContractEntries.push(exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistoryEntry.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistory.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistory();
        message.dataContractEntries =
            ((_a = object.dataContractEntries) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetDataContractHistoryResponse_GetDataContractHistoryResponseV0_DataContractHistoryEntry.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetDocumentsRequest() {
    return { v0: undefined };
}
exports.GetDocumentsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetDocumentsRequest_GetDocumentsRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDocumentsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetDocumentsRequest_GetDocumentsRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDocumentsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDocumentsRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetDocumentsRequest_GetDocumentsRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetDocumentsRequest_GetDocumentsRequestV0() {
    return {
        dataContractId: new Uint8Array(0),
        documentType: "",
        where: new Uint8Array(0),
        orderBy: new Uint8Array(0),
        limit: 0,
        startAfter: undefined,
        startAt: undefined,
        prove: false,
    };
}
exports.GetDocumentsRequest_GetDocumentsRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.dataContractId.length !== 0) {
            writer.uint32(10).bytes(message.dataContractId);
        }
        if (message.documentType !== "") {
            writer.uint32(18).string(message.documentType);
        }
        if (message.where.length !== 0) {
            writer.uint32(26).bytes(message.where);
        }
        if (message.orderBy.length !== 0) {
            writer.uint32(34).bytes(message.orderBy);
        }
        if (message.limit !== 0) {
            writer.uint32(40).uint32(message.limit);
        }
        if (message.startAfter !== undefined) {
            writer.uint32(50).bytes(message.startAfter);
        }
        if (message.startAt !== undefined) {
            writer.uint32(58).bytes(message.startAt);
        }
        if (message.prove !== false) {
            writer.uint32(64).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDocumentsRequest_GetDocumentsRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.dataContractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.documentType = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.where = reader.bytes();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.orderBy = reader.bytes();
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.limit = reader.uint32();
                    continue;
                }
                case 6: {
                    if (tag !== 50) {
                        break;
                    }
                    message.startAfter = reader.bytes();
                    continue;
                }
                case 7: {
                    if (tag !== 58) {
                        break;
                    }
                    message.startAt = reader.bytes();
                    continue;
                }
                case 8: {
                    if (tag !== 64) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDocumentsRequest_GetDocumentsRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        var message = createBaseGetDocumentsRequest_GetDocumentsRequestV0();
        message.dataContractId = (_a = object.dataContractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.documentType = (_b = object.documentType) !== null && _b !== void 0 ? _b : "";
        message.where = (_c = object.where) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        message.orderBy = (_d = object.orderBy) !== null && _d !== void 0 ? _d : new Uint8Array(0);
        message.limit = (_e = object.limit) !== null && _e !== void 0 ? _e : 0;
        message.startAfter = (_f = object.startAfter) !== null && _f !== void 0 ? _f : undefined;
        message.startAt = (_g = object.startAt) !== null && _g !== void 0 ? _g : undefined;
        message.prove = (_h = object.prove) !== null && _h !== void 0 ? _h : false;
        return message;
    },
};
function createBaseGetDocumentsResponse() {
    return { v0: undefined };
}
exports.GetDocumentsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetDocumentsResponse_GetDocumentsResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDocumentsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetDocumentsResponse_GetDocumentsResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDocumentsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDocumentsResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetDocumentsResponse_GetDocumentsResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetDocumentsResponse_GetDocumentsResponseV0() {
    return { documents: undefined, proof: undefined, metadata: undefined };
}
exports.GetDocumentsResponse_GetDocumentsResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.documents !== undefined) {
            exports.GetDocumentsResponse_GetDocumentsResponseV0_Documents.encode(message.documents, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDocumentsResponse_GetDocumentsResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.documents = exports.GetDocumentsResponse_GetDocumentsResponseV0_Documents.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDocumentsResponse_GetDocumentsResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetDocumentsResponse_GetDocumentsResponseV0();
        message.documents = (object.documents !== undefined && object.documents !== null)
            ? exports.GetDocumentsResponse_GetDocumentsResponseV0_Documents.fromPartial(object.documents)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetDocumentsResponse_GetDocumentsResponseV0_Documents() {
    return { documents: [] };
}
exports.GetDocumentsResponse_GetDocumentsResponseV0_Documents = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.documents; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetDocumentsResponse_GetDocumentsResponseV0_Documents();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.documents.push(reader.bytes());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetDocumentsResponse_GetDocumentsResponseV0_Documents.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetDocumentsResponse_GetDocumentsResponseV0_Documents();
        message.documents = ((_a = object.documents) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        return message;
    },
};
function createBaseGetIdentityByPublicKeyHashRequest() {
    return { v0: undefined };
}
exports.GetIdentityByPublicKeyHashRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityByPublicKeyHashRequest_GetIdentityByPublicKeyHashRequestV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityByPublicKeyHashRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityByPublicKeyHashRequest_GetIdentityByPublicKeyHashRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityByPublicKeyHashRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityByPublicKeyHashRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityByPublicKeyHashRequest_GetIdentityByPublicKeyHashRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityByPublicKeyHashRequest_GetIdentityByPublicKeyHashRequestV0() {
    return { publicKeyHash: new Uint8Array(0), prove: false };
}
exports.GetIdentityByPublicKeyHashRequest_GetIdentityByPublicKeyHashRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.publicKeyHash.length !== 0) {
            writer.uint32(10).bytes(message.publicKeyHash);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityByPublicKeyHashRequest_GetIdentityByPublicKeyHashRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.publicKeyHash = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityByPublicKeyHashRequest_GetIdentityByPublicKeyHashRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentityByPublicKeyHashRequest_GetIdentityByPublicKeyHashRequestV0();
        message.publicKeyHash = (_a = object.publicKeyHash) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetIdentityByPublicKeyHashResponse() {
    return { v0: undefined };
}
exports.GetIdentityByPublicKeyHashResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityByPublicKeyHashResponse_GetIdentityByPublicKeyHashResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityByPublicKeyHashResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityByPublicKeyHashResponse_GetIdentityByPublicKeyHashResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityByPublicKeyHashResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityByPublicKeyHashResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityByPublicKeyHashResponse_GetIdentityByPublicKeyHashResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityByPublicKeyHashResponse_GetIdentityByPublicKeyHashResponseV0() {
    return { identity: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentityByPublicKeyHashResponse_GetIdentityByPublicKeyHashResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identity !== undefined) {
            writer.uint32(10).bytes(message.identity);
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityByPublicKeyHashResponse_GetIdentityByPublicKeyHashResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identity = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityByPublicKeyHashResponse_GetIdentityByPublicKeyHashResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityByPublicKeyHashResponse_GetIdentityByPublicKeyHashResponseV0();
        message.identity = (_a = object.identity) !== null && _a !== void 0 ? _a : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseWaitForStateTransitionResultRequest() {
    return { v0: undefined };
}
exports.WaitForStateTransitionResultRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.WaitForStateTransitionResultRequest_WaitForStateTransitionResultRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseWaitForStateTransitionResultRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.WaitForStateTransitionResultRequest_WaitForStateTransitionResultRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.WaitForStateTransitionResultRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseWaitForStateTransitionResultRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.WaitForStateTransitionResultRequest_WaitForStateTransitionResultRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseWaitForStateTransitionResultRequest_WaitForStateTransitionResultRequestV0() {
    return { stateTransitionHash: new Uint8Array(0), prove: false };
}
exports.WaitForStateTransitionResultRequest_WaitForStateTransitionResultRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.stateTransitionHash.length !== 0) {
            writer.uint32(10).bytes(message.stateTransitionHash);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseWaitForStateTransitionResultRequest_WaitForStateTransitionResultRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.stateTransitionHash = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.WaitForStateTransitionResultRequest_WaitForStateTransitionResultRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseWaitForStateTransitionResultRequest_WaitForStateTransitionResultRequestV0();
        message.stateTransitionHash = (_a = object.stateTransitionHash) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseWaitForStateTransitionResultResponse() {
    return { v0: undefined };
}
exports.WaitForStateTransitionResultResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.WaitForStateTransitionResultResponse_WaitForStateTransitionResultResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseWaitForStateTransitionResultResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.WaitForStateTransitionResultResponse_WaitForStateTransitionResultResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.WaitForStateTransitionResultResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseWaitForStateTransitionResultResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.WaitForStateTransitionResultResponse_WaitForStateTransitionResultResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseWaitForStateTransitionResultResponse_WaitForStateTransitionResultResponseV0() {
    return { error: undefined, proof: undefined, metadata: undefined };
}
exports.WaitForStateTransitionResultResponse_WaitForStateTransitionResultResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.error !== undefined) {
            exports.StateTransitionBroadcastError.encode(message.error, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseWaitForStateTransitionResultResponse_WaitForStateTransitionResultResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.error = exports.StateTransitionBroadcastError.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.WaitForStateTransitionResultResponse_WaitForStateTransitionResultResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseWaitForStateTransitionResultResponse_WaitForStateTransitionResultResponseV0();
        message.error = (object.error !== undefined && object.error !== null)
            ? exports.StateTransitionBroadcastError.fromPartial(object.error)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetConsensusParamsRequest() {
    return { v0: undefined };
}
exports.GetConsensusParamsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetConsensusParamsRequest_GetConsensusParamsRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetConsensusParamsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetConsensusParamsRequest_GetConsensusParamsRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetConsensusParamsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetConsensusParamsRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetConsensusParamsRequest_GetConsensusParamsRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetConsensusParamsRequest_GetConsensusParamsRequestV0() {
    return { height: 0, prove: false };
}
exports.GetConsensusParamsRequest_GetConsensusParamsRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.height !== 0) {
            writer.uint32(8).int32(message.height);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetConsensusParamsRequest_GetConsensusParamsRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.height = reader.int32();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetConsensusParamsRequest_GetConsensusParamsRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetConsensusParamsRequest_GetConsensusParamsRequestV0();
        message.height = (_a = object.height) !== null && _a !== void 0 ? _a : 0;
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetConsensusParamsResponse() {
    return { v0: undefined };
}
exports.GetConsensusParamsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetConsensusParamsResponse_GetConsensusParamsResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetConsensusParamsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetConsensusParamsResponse_GetConsensusParamsResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetConsensusParamsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetConsensusParamsResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetConsensusParamsResponse_GetConsensusParamsResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetConsensusParamsResponse_ConsensusParamsBlock() {
    return { maxBytes: "", maxGas: "", timeIotaMs: "" };
}
exports.GetConsensusParamsResponse_ConsensusParamsBlock = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.maxBytes !== "") {
            writer.uint32(10).string(message.maxBytes);
        }
        if (message.maxGas !== "") {
            writer.uint32(18).string(message.maxGas);
        }
        if (message.timeIotaMs !== "") {
            writer.uint32(26).string(message.timeIotaMs);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetConsensusParamsResponse_ConsensusParamsBlock();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.maxBytes = reader.string();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.maxGas = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.timeIotaMs = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetConsensusParamsResponse_ConsensusParamsBlock.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetConsensusParamsResponse_ConsensusParamsBlock();
        message.maxBytes = (_a = object.maxBytes) !== null && _a !== void 0 ? _a : "";
        message.maxGas = (_b = object.maxGas) !== null && _b !== void 0 ? _b : "";
        message.timeIotaMs = (_c = object.timeIotaMs) !== null && _c !== void 0 ? _c : "";
        return message;
    },
};
function createBaseGetConsensusParamsResponse_ConsensusParamsEvidence() {
    return { maxAgeNumBlocks: "", maxAgeDuration: "", maxBytes: "" };
}
exports.GetConsensusParamsResponse_ConsensusParamsEvidence = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.maxAgeNumBlocks !== "") {
            writer.uint32(10).string(message.maxAgeNumBlocks);
        }
        if (message.maxAgeDuration !== "") {
            writer.uint32(18).string(message.maxAgeDuration);
        }
        if (message.maxBytes !== "") {
            writer.uint32(26).string(message.maxBytes);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetConsensusParamsResponse_ConsensusParamsEvidence();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.maxAgeNumBlocks = reader.string();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.maxAgeDuration = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.maxBytes = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetConsensusParamsResponse_ConsensusParamsEvidence.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetConsensusParamsResponse_ConsensusParamsEvidence();
        message.maxAgeNumBlocks = (_a = object.maxAgeNumBlocks) !== null && _a !== void 0 ? _a : "";
        message.maxAgeDuration = (_b = object.maxAgeDuration) !== null && _b !== void 0 ? _b : "";
        message.maxBytes = (_c = object.maxBytes) !== null && _c !== void 0 ? _c : "";
        return message;
    },
};
function createBaseGetConsensusParamsResponse_GetConsensusParamsResponseV0() {
    return { block: undefined, evidence: undefined };
}
exports.GetConsensusParamsResponse_GetConsensusParamsResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.block !== undefined) {
            exports.GetConsensusParamsResponse_ConsensusParamsBlock.encode(message.block, writer.uint32(10).fork()).join();
        }
        if (message.evidence !== undefined) {
            exports.GetConsensusParamsResponse_ConsensusParamsEvidence.encode(message.evidence, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetConsensusParamsResponse_GetConsensusParamsResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.block = exports.GetConsensusParamsResponse_ConsensusParamsBlock.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.evidence = exports.GetConsensusParamsResponse_ConsensusParamsEvidence.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetConsensusParamsResponse_GetConsensusParamsResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetConsensusParamsResponse_GetConsensusParamsResponseV0();
        message.block = (object.block !== undefined && object.block !== null)
            ? exports.GetConsensusParamsResponse_ConsensusParamsBlock.fromPartial(object.block)
            : undefined;
        message.evidence = (object.evidence !== undefined && object.evidence !== null)
            ? exports.GetConsensusParamsResponse_ConsensusParamsEvidence.fromPartial(object.evidence)
            : undefined;
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeStateRequest() {
    return { v0: undefined };
}
exports.GetProtocolVersionUpgradeStateRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetProtocolVersionUpgradeStateRequest_GetProtocolVersionUpgradeStateRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeStateRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetProtocolVersionUpgradeStateRequest_GetProtocolVersionUpgradeStateRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeStateRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProtocolVersionUpgradeStateRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetProtocolVersionUpgradeStateRequest_GetProtocolVersionUpgradeStateRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeStateRequest_GetProtocolVersionUpgradeStateRequestV0() {
    return { prove: false };
}
exports.GetProtocolVersionUpgradeStateRequest_GetProtocolVersionUpgradeStateRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.prove !== false) {
            writer.uint32(8).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeStateRequest_GetProtocolVersionUpgradeStateRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeStateRequest_GetProtocolVersionUpgradeStateRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProtocolVersionUpgradeStateRequest_GetProtocolVersionUpgradeStateRequestV0();
        message.prove = (_a = object.prove) !== null && _a !== void 0 ? _a : false;
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeStateResponse() {
    return { v0: undefined };
}
exports.GetProtocolVersionUpgradeStateResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeStateResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeStateResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProtocolVersionUpgradeStateResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0() {
    return { versions: undefined, proof: undefined, metadata: undefined };
}
exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.versions !== undefined) {
            exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_Versions.encode(message.versions, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.versions = exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_Versions
                        .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0();
        message.versions = (object.versions !== undefined && object.versions !== null)
            ? exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_Versions.fromPartial(object.versions)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_Versions() {
    return { versions: [] };
}
exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_Versions = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.versions; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_VersionEntry.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_Versions();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.versions.push(exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_VersionEntry.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_Versions.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_Versions();
        message.versions =
            ((_a = object.versions) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_VersionEntry.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_VersionEntry() {
    return { versionNumber: 0, voteCount: 0 };
}
exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_VersionEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.versionNumber !== 0) {
            writer.uint32(8).uint32(message.versionNumber);
        }
        if (message.voteCount !== 0) {
            writer.uint32(16).uint32(message.voteCount);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_VersionEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.versionNumber = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.voteCount = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_VersionEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetProtocolVersionUpgradeStateResponse_GetProtocolVersionUpgradeStateResponseV0_VersionEntry();
        message.versionNumber = (_a = object.versionNumber) !== null && _a !== void 0 ? _a : 0;
        message.voteCount = (_b = object.voteCount) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeVoteStatusRequest() {
    return { v0: undefined };
}
exports.GetProtocolVersionUpgradeVoteStatusRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetProtocolVersionUpgradeVoteStatusRequest_GetProtocolVersionUpgradeVoteStatusRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeVoteStatusRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetProtocolVersionUpgradeVoteStatusRequest_GetProtocolVersionUpgradeVoteStatusRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeVoteStatusRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProtocolVersionUpgradeVoteStatusRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetProtocolVersionUpgradeVoteStatusRequest_GetProtocolVersionUpgradeVoteStatusRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeVoteStatusRequest_GetProtocolVersionUpgradeVoteStatusRequestV0() {
    return { startProTxHash: new Uint8Array(0), count: 0, prove: false };
}
exports.GetProtocolVersionUpgradeVoteStatusRequest_GetProtocolVersionUpgradeVoteStatusRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startProTxHash.length !== 0) {
            writer.uint32(10).bytes(message.startProTxHash);
        }
        if (message.count !== 0) {
            writer.uint32(16).uint32(message.count);
        }
        if (message.prove !== false) {
            writer.uint32(24).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeVoteStatusRequest_GetProtocolVersionUpgradeVoteStatusRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.startProTxHash = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.count = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeVoteStatusRequest_GetProtocolVersionUpgradeVoteStatusRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetProtocolVersionUpgradeVoteStatusRequest_GetProtocolVersionUpgradeVoteStatusRequestV0();
        message.startProTxHash = (_a = object.startProTxHash) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.count = (_b = object.count) !== null && _b !== void 0 ? _b : 0;
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeVoteStatusResponse() {
    return { v0: undefined };
}
exports.GetProtocolVersionUpgradeVoteStatusResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeVoteStatusResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeVoteStatusResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProtocolVersionUpgradeVoteStatusResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0() {
    return { versions: undefined, proof: undefined, metadata: undefined };
}
exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.versions !== undefined) {
            exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignals.encode(message.versions, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.versions =
                        exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignals
                            .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0();
        message.versions = (object.versions !== undefined && object.versions !== null)
            ? exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignals
                .fromPartial(object.versions)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignals() {
    return { versionSignals: [] };
}
exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignals = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.versionSignals; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignal
                .encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignals();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.versionSignals.push(exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignal
                        .decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignals
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignals();
        message.versionSignals = ((_a = object.versionSignals) === null || _a === void 0 ? void 0 : _a.map(function (e) {
            return exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignal
                .fromPartial(e);
        })) || [];
        return message;
    },
};
function createBaseGetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignal() {
    return { proTxHash: new Uint8Array(0), version: 0 };
}
exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignal = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.proTxHash.length !== 0) {
            writer.uint32(10).bytes(message.proTxHash);
        }
        if (message.version !== 0) {
            writer.uint32(16).uint32(message.version);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignal();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.proTxHash = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.version = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignal
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetProtocolVersionUpgradeVoteStatusResponse_GetProtocolVersionUpgradeVoteStatusResponseV0_VersionSignal();
        message.proTxHash = (_a = object.proTxHash) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.version = (_b = object.version) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetEpochsInfoRequest() {
    return { v0: undefined };
}
exports.GetEpochsInfoRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetEpochsInfoRequest_GetEpochsInfoRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEpochsInfoRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetEpochsInfoRequest_GetEpochsInfoRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEpochsInfoRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetEpochsInfoRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetEpochsInfoRequest_GetEpochsInfoRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetEpochsInfoRequest_GetEpochsInfoRequestV0() {
    return { startEpoch: undefined, count: 0, ascending: false, prove: false };
}
exports.GetEpochsInfoRequest_GetEpochsInfoRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startEpoch !== undefined) {
            wrappers_1.UInt32Value.encode({ value: message.startEpoch }, writer.uint32(10).fork()).join();
        }
        if (message.count !== 0) {
            writer.uint32(16).uint32(message.count);
        }
        if (message.ascending !== false) {
            writer.uint32(24).bool(message.ascending);
        }
        if (message.prove !== false) {
            writer.uint32(32).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEpochsInfoRequest_GetEpochsInfoRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.startEpoch = wrappers_1.UInt32Value.decode(reader, reader.uint32()).value;
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.count = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.ascending = reader.bool();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEpochsInfoRequest_GetEpochsInfoRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetEpochsInfoRequest_GetEpochsInfoRequestV0();
        message.startEpoch = (_a = object.startEpoch) !== null && _a !== void 0 ? _a : undefined;
        message.count = (_b = object.count) !== null && _b !== void 0 ? _b : 0;
        message.ascending = (_c = object.ascending) !== null && _c !== void 0 ? _c : false;
        message.prove = (_d = object.prove) !== null && _d !== void 0 ? _d : false;
        return message;
    },
};
function createBaseGetEpochsInfoResponse() {
    return { v0: undefined };
}
exports.GetEpochsInfoResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEpochsInfoResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEpochsInfoResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetEpochsInfoResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetEpochsInfoResponse_GetEpochsInfoResponseV0() {
    return { epochs: undefined, proof: undefined, metadata: undefined };
}
exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.epochs !== undefined) {
            exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfos.encode(message.epochs, writer.uint32(10).fork())
                .join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEpochsInfoResponse_GetEpochsInfoResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.epochs = exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfos.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetEpochsInfoResponse_GetEpochsInfoResponseV0();
        message.epochs = (object.epochs !== undefined && object.epochs !== null)
            ? exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfos.fromPartial(object.epochs)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null)
            ? exports.Proof.fromPartial(object.proof)
            : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfos() {
    return { epochInfos: [] };
}
exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfos = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.epochInfos; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfo.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.epochInfos.push(exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfo.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfos.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfos();
        message.epochInfos =
            ((_a = object.epochInfos) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfo.fromPartial(e); })) || [];
        return message;
    },
};
function createBaseGetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfo() {
    return {
        number: 0,
        firstBlockHeight: "0",
        firstCoreBlockHeight: 0,
        startTime: "0",
        feeMultiplier: 0,
        protocolVersion: 0,
    };
}
exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.number !== 0) {
            writer.uint32(8).uint32(message.number);
        }
        if (message.firstBlockHeight !== "0") {
            writer.uint32(16).uint64(message.firstBlockHeight);
        }
        if (message.firstCoreBlockHeight !== 0) {
            writer.uint32(24).uint32(message.firstCoreBlockHeight);
        }
        if (message.startTime !== "0") {
            writer.uint32(32).uint64(message.startTime);
        }
        if (message.feeMultiplier !== 0) {
            writer.uint32(41).double(message.feeMultiplier);
        }
        if (message.protocolVersion !== 0) {
            writer.uint32(48).uint32(message.protocolVersion);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.number = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.firstBlockHeight = reader.uint64().toString();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.firstCoreBlockHeight = reader.uint32();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.startTime = reader.uint64().toString();
                    continue;
                }
                case 5: {
                    if (tag !== 41) {
                        break;
                    }
                    message.feeMultiplier = reader.double();
                    continue;
                }
                case 6: {
                    if (tag !== 48) {
                        break;
                    }
                    message.protocolVersion = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseGetEpochsInfoResponse_GetEpochsInfoResponseV0_EpochInfo();
        message.number = (_a = object.number) !== null && _a !== void 0 ? _a : 0;
        message.firstBlockHeight = (_b = object.firstBlockHeight) !== null && _b !== void 0 ? _b : "0";
        message.firstCoreBlockHeight = (_c = object.firstCoreBlockHeight) !== null && _c !== void 0 ? _c : 0;
        message.startTime = (_d = object.startTime) !== null && _d !== void 0 ? _d : "0";
        message.feeMultiplier = (_e = object.feeMultiplier) !== null && _e !== void 0 ? _e : 0;
        message.protocolVersion = (_f = object.protocolVersion) !== null && _f !== void 0 ? _f : 0;
        return message;
    },
};
function createBaseGetContestedResourcesRequest() {
    return { v0: undefined };
}
exports.GetContestedResourcesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourcesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourcesRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourcesRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourcesRequest_GetContestedResourcesRequestV0() {
    return {
        contractId: new Uint8Array(0),
        documentTypeName: "",
        indexName: "",
        startIndexValues: [],
        endIndexValues: [],
        startAtValueInfo: undefined,
        count: undefined,
        orderAscending: false,
        prove: false,
    };
}
exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        if (message.documentTypeName !== "") {
            writer.uint32(18).string(message.documentTypeName);
        }
        if (message.indexName !== "") {
            writer.uint32(26).string(message.indexName);
        }
        for (var _i = 0, _a = message.startIndexValues; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(34).bytes(v);
        }
        for (var _b = 0, _c = message.endIndexValues; _b < _c.length; _b++) {
            var v = _c[_b];
            writer.uint32(42).bytes(v);
        }
        if (message.startAtValueInfo !== undefined) {
            exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0_StartAtValueInfo.encode(message.startAtValueInfo, writer.uint32(50).fork()).join();
        }
        if (message.count !== undefined) {
            writer.uint32(56).uint32(message.count);
        }
        if (message.orderAscending !== false) {
            writer.uint32(64).bool(message.orderAscending);
        }
        if (message.prove !== false) {
            writer.uint32(72).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourcesRequest_GetContestedResourcesRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.documentTypeName = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.indexName = reader.string();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.startIndexValues.push(reader.bytes());
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.endIndexValues.push(reader.bytes());
                    continue;
                }
                case 6: {
                    if (tag !== 50) {
                        break;
                    }
                    message.startAtValueInfo = exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0_StartAtValueInfo
                        .decode(reader, reader.uint32());
                    continue;
                }
                case 7: {
                    if (tag !== 56) {
                        break;
                    }
                    message.count = reader.uint32();
                    continue;
                }
                case 8: {
                    if (tag !== 64) {
                        break;
                    }
                    message.orderAscending = reader.bool();
                    continue;
                }
                case 9: {
                    if (tag !== 72) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        var message = createBaseGetContestedResourcesRequest_GetContestedResourcesRequestV0();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.documentTypeName = (_b = object.documentTypeName) !== null && _b !== void 0 ? _b : "";
        message.indexName = (_c = object.indexName) !== null && _c !== void 0 ? _c : "";
        message.startIndexValues = ((_d = object.startIndexValues) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        message.endIndexValues = ((_e = object.endIndexValues) === null || _e === void 0 ? void 0 : _e.map(function (e) { return e; })) || [];
        message.startAtValueInfo = (object.startAtValueInfo !== undefined && object.startAtValueInfo !== null)
            ? exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0_StartAtValueInfo.fromPartial(object.startAtValueInfo)
            : undefined;
        message.count = (_f = object.count) !== null && _f !== void 0 ? _f : undefined;
        message.orderAscending = (_g = object.orderAscending) !== null && _g !== void 0 ? _g : false;
        message.prove = (_h = object.prove) !== null && _h !== void 0 ? _h : false;
        return message;
    },
};
function createBaseGetContestedResourcesRequest_GetContestedResourcesRequestV0_StartAtValueInfo() {
    return { startValue: new Uint8Array(0), startValueIncluded: false };
}
exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0_StartAtValueInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startValue.length !== 0) {
            writer.uint32(10).bytes(message.startValue);
        }
        if (message.startValueIncluded !== false) {
            writer.uint32(16).bool(message.startValueIncluded);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourcesRequest_GetContestedResourcesRequestV0_StartAtValueInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.startValue = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.startValueIncluded = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourcesRequest_GetContestedResourcesRequestV0_StartAtValueInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetContestedResourcesRequest_GetContestedResourcesRequestV0_StartAtValueInfo();
        message.startValue = (_a = object.startValue) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.startValueIncluded = (_b = object.startValueIncluded) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetContestedResourcesResponse() {
    return { v0: undefined };
}
exports.GetContestedResourcesResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourcesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourcesResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourcesResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourcesResponse_GetContestedResourcesResponseV0() {
    return { contestedResourceValues: undefined, proof: undefined, metadata: undefined };
}
exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contestedResourceValues !== undefined) {
            exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0_ContestedResourceValues.encode(message.contestedResourceValues, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourcesResponse_GetContestedResourcesResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contestedResourceValues =
                        exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0_ContestedResourceValues.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourcesResponse_GetContestedResourcesResponseV0();
        message.contestedResourceValues =
            (object.contestedResourceValues !== undefined && object.contestedResourceValues !== null)
                ? exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0_ContestedResourceValues.fromPartial(object.contestedResourceValues)
                : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourcesResponse_GetContestedResourcesResponseV0_ContestedResourceValues() {
    return { contestedResourceValues: [] };
}
exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0_ContestedResourceValues = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.contestedResourceValues; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourcesResponse_GetContestedResourcesResponseV0_ContestedResourceValues();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contestedResourceValues.push(reader.bytes());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourcesResponse_GetContestedResourcesResponseV0_ContestedResourceValues.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetContestedResourcesResponse_GetContestedResourcesResponseV0_ContestedResourceValues();
        message.contestedResourceValues = ((_a = object.contestedResourceValues) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        return message;
    },
};
function createBaseGetVotePollsByEndDateRequest() {
    return { v0: undefined };
}
exports.GetVotePollsByEndDateRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVotePollsByEndDateRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetVotePollsByEndDateRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetVotePollsByEndDateRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0() {
    return {
        startTimeInfo: undefined,
        endTimeInfo: undefined,
        limit: undefined,
        offset: undefined,
        ascending: false,
        prove: false,
    };
}
exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startTimeInfo !== undefined) {
            exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_StartAtTimeInfo.encode(message.startTimeInfo, writer.uint32(10).fork()).join();
        }
        if (message.endTimeInfo !== undefined) {
            exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_EndAtTimeInfo.encode(message.endTimeInfo, writer.uint32(18).fork()).join();
        }
        if (message.limit !== undefined) {
            writer.uint32(24).uint32(message.limit);
        }
        if (message.offset !== undefined) {
            writer.uint32(32).uint32(message.offset);
        }
        if (message.ascending !== false) {
            writer.uint32(40).bool(message.ascending);
        }
        if (message.prove !== false) {
            writer.uint32(48).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.startTimeInfo = exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_StartAtTimeInfo.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.endTimeInfo = exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_EndAtTimeInfo.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.limit = reader.uint32();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.offset = reader.uint32();
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.ascending = reader.bool();
                    continue;
                }
                case 6: {
                    if (tag !== 48) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0();
        message.startTimeInfo = (object.startTimeInfo !== undefined && object.startTimeInfo !== null)
            ? exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_StartAtTimeInfo.fromPartial(object.startTimeInfo)
            : undefined;
        message.endTimeInfo = (object.endTimeInfo !== undefined && object.endTimeInfo !== null)
            ? exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_EndAtTimeInfo.fromPartial(object.endTimeInfo)
            : undefined;
        message.limit = (_a = object.limit) !== null && _a !== void 0 ? _a : undefined;
        message.offset = (_b = object.offset) !== null && _b !== void 0 ? _b : undefined;
        message.ascending = (_c = object.ascending) !== null && _c !== void 0 ? _c : false;
        message.prove = (_d = object.prove) !== null && _d !== void 0 ? _d : false;
        return message;
    },
};
function createBaseGetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_StartAtTimeInfo() {
    return { startTimeMs: "0", startTimeIncluded: false };
}
exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_StartAtTimeInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startTimeMs !== "0") {
            writer.uint32(8).uint64(message.startTimeMs);
        }
        if (message.startTimeIncluded !== false) {
            writer.uint32(16).bool(message.startTimeIncluded);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_StartAtTimeInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.startTimeMs = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.startTimeIncluded = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_StartAtTimeInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_StartAtTimeInfo();
        message.startTimeMs = (_a = object.startTimeMs) !== null && _a !== void 0 ? _a : "0";
        message.startTimeIncluded = (_b = object.startTimeIncluded) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_EndAtTimeInfo() {
    return { endTimeMs: "0", endTimeIncluded: false };
}
exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_EndAtTimeInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.endTimeMs !== "0") {
            writer.uint32(8).uint64(message.endTimeMs);
        }
        if (message.endTimeIncluded !== false) {
            writer.uint32(16).bool(message.endTimeIncluded);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_EndAtTimeInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.endTimeMs = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.endTimeIncluded = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_EndAtTimeInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetVotePollsByEndDateRequest_GetVotePollsByEndDateRequestV0_EndAtTimeInfo();
        message.endTimeMs = (_a = object.endTimeMs) !== null && _a !== void 0 ? _a : "0";
        message.endTimeIncluded = (_b = object.endTimeIncluded) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetVotePollsByEndDateResponse() {
    return { v0: undefined };
}
exports.GetVotePollsByEndDateResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVotePollsByEndDateResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetVotePollsByEndDateResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetVotePollsByEndDateResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0() {
    return { votePollsByTimestamps: undefined, proof: undefined, metadata: undefined };
}
exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.votePollsByTimestamps !== undefined) {
            exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamps.encode(message.votePollsByTimestamps, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.votePollsByTimestamps =
                        exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamps.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0();
        message.votePollsByTimestamps =
            (object.votePollsByTimestamps !== undefined && object.votePollsByTimestamps !== null)
                ? exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamps.fromPartial(object.votePollsByTimestamps)
                : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamp() {
    return { timestamp: "0", serializedVotePolls: [] };
}
exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamp = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.timestamp !== "0") {
            writer.uint32(8).uint64(message.timestamp);
        }
        for (var _i = 0, _a = message.serializedVotePolls; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).bytes(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamp();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.timestamp = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.serializedVotePolls.push(reader.bytes());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamp.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamp();
        message.timestamp = (_a = object.timestamp) !== null && _a !== void 0 ? _a : "0";
        message.serializedVotePolls = ((_b = object.serializedVotePolls) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        return message;
    },
};
function createBaseGetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamps() {
    return { votePollsByTimestamps: [], finishedResults: false };
}
exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamps = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.votePollsByTimestamps; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamp.encode(v, writer.uint32(10).fork()).join();
        }
        if (message.finishedResults !== false) {
            writer.uint32(16).bool(message.finishedResults);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamps();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.votePollsByTimestamps.push(exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamp.decode(reader, reader.uint32()));
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.finishedResults = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamps.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamps();
        message.votePollsByTimestamps =
            ((_a = object.votePollsByTimestamps) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetVotePollsByEndDateResponse_GetVotePollsByEndDateResponseV0_SerializedVotePollsByTimestamp.fromPartial(e);
            })) || [];
        message.finishedResults = (_b = object.finishedResults) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetContestedResourceVoteStateRequest() {
    return { v0: undefined };
}
exports.GetContestedResourceVoteStateRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVoteStateRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVoteStateRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourceVoteStateRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0() {
    return {
        contractId: new Uint8Array(0),
        documentTypeName: "",
        indexName: "",
        indexValues: [],
        resultType: 0,
        allowIncludeLockedAndAbstainingVoteTally: false,
        startAtIdentifierInfo: undefined,
        count: undefined,
        prove: false,
    };
}
exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        if (message.documentTypeName !== "") {
            writer.uint32(18).string(message.documentTypeName);
        }
        if (message.indexName !== "") {
            writer.uint32(26).string(message.indexName);
        }
        for (var _i = 0, _a = message.indexValues; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(34).bytes(v);
        }
        if (message.resultType !== 0) {
            writer.uint32(40).int32(message.resultType);
        }
        if (message.allowIncludeLockedAndAbstainingVoteTally !== false) {
            writer.uint32(48).bool(message.allowIncludeLockedAndAbstainingVoteTally);
        }
        if (message.startAtIdentifierInfo !== undefined) {
            exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_StartAtIdentifierInfo.encode(message.startAtIdentifierInfo, writer.uint32(58).fork()).join();
        }
        if (message.count !== undefined) {
            writer.uint32(64).uint32(message.count);
        }
        if (message.prove !== false) {
            writer.uint32(72).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.documentTypeName = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.indexName = reader.string();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.indexValues.push(reader.bytes());
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.resultType = reader.int32();
                    continue;
                }
                case 6: {
                    if (tag !== 48) {
                        break;
                    }
                    message.allowIncludeLockedAndAbstainingVoteTally = reader.bool();
                    continue;
                }
                case 7: {
                    if (tag !== 58) {
                        break;
                    }
                    message.startAtIdentifierInfo =
                        exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_StartAtIdentifierInfo.decode(reader, reader.uint32());
                    continue;
                }
                case 8: {
                    if (tag !== 64) {
                        break;
                    }
                    message.count = reader.uint32();
                    continue;
                }
                case 9: {
                    if (tag !== 72) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        var message = createBaseGetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.documentTypeName = (_b = object.documentTypeName) !== null && _b !== void 0 ? _b : "";
        message.indexName = (_c = object.indexName) !== null && _c !== void 0 ? _c : "";
        message.indexValues = ((_d = object.indexValues) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        message.resultType = (_e = object.resultType) !== null && _e !== void 0 ? _e : 0;
        message.allowIncludeLockedAndAbstainingVoteTally = (_f = object.allowIncludeLockedAndAbstainingVoteTally) !== null && _f !== void 0 ? _f : false;
        message.startAtIdentifierInfo =
            (object.startAtIdentifierInfo !== undefined && object.startAtIdentifierInfo !== null)
                ? exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_StartAtIdentifierInfo.fromPartial(object.startAtIdentifierInfo)
                : undefined;
        message.count = (_g = object.count) !== null && _g !== void 0 ? _g : undefined;
        message.prove = (_h = object.prove) !== null && _h !== void 0 ? _h : false;
        return message;
    },
};
function createBaseGetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_StartAtIdentifierInfo() {
    return { startIdentifier: new Uint8Array(0), startIdentifierIncluded: false };
}
exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_StartAtIdentifierInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startIdentifier.length !== 0) {
            writer.uint32(10).bytes(message.startIdentifier);
        }
        if (message.startIdentifierIncluded !== false) {
            writer.uint32(16).bool(message.startIdentifierIncluded);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_StartAtIdentifierInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.startIdentifier = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.startIdentifierIncluded = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_StartAtIdentifierInfo
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetContestedResourceVoteStateRequest_GetContestedResourceVoteStateRequestV0_StartAtIdentifierInfo();
        message.startIdentifier = (_a = object.startIdentifier) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.startIdentifierIncluded = (_b = object.startIdentifierIncluded) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetContestedResourceVoteStateResponse() {
    return { v0: undefined };
}
exports.GetContestedResourceVoteStateResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVoteStateResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVoteStateResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourceVoteStateResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0() {
    return { contestedResourceContenders: undefined, proof: undefined, metadata: undefined };
}
exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contestedResourceContenders !== undefined) {
            exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_ContestedResourceContenders.encode(message.contestedResourceContenders, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contestedResourceContenders =
                        exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_ContestedResourceContenders
                            .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0();
        message.contestedResourceContenders =
            (object.contestedResourceContenders !== undefined && object.contestedResourceContenders !== null)
                ? exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_ContestedResourceContenders
                    .fromPartial(object.contestedResourceContenders)
                : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo() {
    return {
        finishedVoteOutcome: 0,
        wonByIdentityId: undefined,
        finishedAtBlockHeight: "0",
        finishedAtCoreBlockHeight: 0,
        finishedAtBlockTimeMs: "0",
        finishedAtEpoch: 0,
    };
}
exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.finishedVoteOutcome !== 0) {
            writer.uint32(8).int32(message.finishedVoteOutcome);
        }
        if (message.wonByIdentityId !== undefined) {
            writer.uint32(18).bytes(message.wonByIdentityId);
        }
        if (message.finishedAtBlockHeight !== "0") {
            writer.uint32(24).uint64(message.finishedAtBlockHeight);
        }
        if (message.finishedAtCoreBlockHeight !== 0) {
            writer.uint32(32).uint32(message.finishedAtCoreBlockHeight);
        }
        if (message.finishedAtBlockTimeMs !== "0") {
            writer.uint32(40).uint64(message.finishedAtBlockTimeMs);
        }
        if (message.finishedAtEpoch !== 0) {
            writer.uint32(48).uint32(message.finishedAtEpoch);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.finishedVoteOutcome = reader.int32();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.wonByIdentityId = reader.bytes();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.finishedAtBlockHeight = reader.uint64().toString();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.finishedAtCoreBlockHeight = reader.uint32();
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.finishedAtBlockTimeMs = reader.uint64().toString();
                    continue;
                }
                case 6: {
                    if (tag !== 48) {
                        break;
                    }
                    message.finishedAtEpoch = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo();
        message.finishedVoteOutcome = (_a = object.finishedVoteOutcome) !== null && _a !== void 0 ? _a : 0;
        message.wonByIdentityId = (_b = object.wonByIdentityId) !== null && _b !== void 0 ? _b : undefined;
        message.finishedAtBlockHeight = (_c = object.finishedAtBlockHeight) !== null && _c !== void 0 ? _c : "0";
        message.finishedAtCoreBlockHeight = (_d = object.finishedAtCoreBlockHeight) !== null && _d !== void 0 ? _d : 0;
        message.finishedAtBlockTimeMs = (_e = object.finishedAtBlockTimeMs) !== null && _e !== void 0 ? _e : "0";
        message.finishedAtEpoch = (_f = object.finishedAtEpoch) !== null && _f !== void 0 ? _f : 0;
        return message;
    },
};
function createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_ContestedResourceContenders() {
    return { contenders: [], abstainVoteTally: undefined, lockVoteTally: undefined, finishedVoteInfo: undefined };
}
exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_ContestedResourceContenders = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.contenders; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_Contender.encode(v, writer.uint32(10).fork()).join();
        }
        if (message.abstainVoteTally !== undefined) {
            writer.uint32(16).uint32(message.abstainVoteTally);
        }
        if (message.lockVoteTally !== undefined) {
            writer.uint32(24).uint32(message.lockVoteTally);
        }
        if (message.finishedVoteInfo !== undefined) {
            exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo.encode(message.finishedVoteInfo, writer.uint32(34).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_ContestedResourceContenders();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contenders.push(exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_Contender.decode(reader, reader.uint32()));
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.abstainVoteTally = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.lockVoteTally = reader.uint32();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.finishedVoteInfo =
                        exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_ContestedResourceContenders
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_ContestedResourceContenders();
        message.contenders =
            ((_a = object.contenders) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_Contender.fromPartial(e);
            })) || [];
        message.abstainVoteTally = (_b = object.abstainVoteTally) !== null && _b !== void 0 ? _b : undefined;
        message.lockVoteTally = (_c = object.lockVoteTally) !== null && _c !== void 0 ? _c : undefined;
        message.finishedVoteInfo = (object.finishedVoteInfo !== undefined && object.finishedVoteInfo !== null)
            ? exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_FinishedVoteInfo.fromPartial(object.finishedVoteInfo)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_Contender() {
    return { identifier: new Uint8Array(0), voteCount: undefined, document: undefined };
}
exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_Contender = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identifier.length !== 0) {
            writer.uint32(10).bytes(message.identifier);
        }
        if (message.voteCount !== undefined) {
            writer.uint32(16).uint32(message.voteCount);
        }
        if (message.document !== undefined) {
            writer.uint32(26).bytes(message.document);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_Contender();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identifier = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.voteCount = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.document = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_Contender.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetContestedResourceVoteStateResponse_GetContestedResourceVoteStateResponseV0_Contender();
        message.identifier = (_a = object.identifier) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.voteCount = (_b = object.voteCount) !== null && _b !== void 0 ? _b : undefined;
        message.document = (_c = object.document) !== null && _c !== void 0 ? _c : undefined;
        return message;
    },
};
function createBaseGetContestedResourceVotersForIdentityRequest() {
    return { v0: undefined };
}
exports.GetContestedResourceVotersForIdentityRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVotersForIdentityRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0
                        .decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVotersForIdentityRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourceVotersForIdentityRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0() {
    return {
        contractId: new Uint8Array(0),
        documentTypeName: "",
        indexName: "",
        indexValues: [],
        contestantId: new Uint8Array(0),
        startAtIdentifierInfo: undefined,
        count: undefined,
        orderAscending: false,
        prove: false,
    };
}
exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        if (message.documentTypeName !== "") {
            writer.uint32(18).string(message.documentTypeName);
        }
        if (message.indexName !== "") {
            writer.uint32(26).string(message.indexName);
        }
        for (var _i = 0, _a = message.indexValues; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(34).bytes(v);
        }
        if (message.contestantId.length !== 0) {
            writer.uint32(42).bytes(message.contestantId);
        }
        if (message.startAtIdentifierInfo !== undefined) {
            exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0_StartAtIdentifierInfo
                .encode(message.startAtIdentifierInfo, writer.uint32(50).fork()).join();
        }
        if (message.count !== undefined) {
            writer.uint32(56).uint32(message.count);
        }
        if (message.orderAscending !== false) {
            writer.uint32(64).bool(message.orderAscending);
        }
        if (message.prove !== false) {
            writer.uint32(72).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.documentTypeName = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.indexName = reader.string();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.indexValues.push(reader.bytes());
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.contestantId = reader.bytes();
                    continue;
                }
                case 6: {
                    if (tag !== 50) {
                        break;
                    }
                    message.startAtIdentifierInfo =
                        exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0_StartAtIdentifierInfo
                            .decode(reader, reader.uint32());
                    continue;
                }
                case 7: {
                    if (tag !== 56) {
                        break;
                    }
                    message.count = reader.uint32();
                    continue;
                }
                case 8: {
                    if (tag !== 64) {
                        break;
                    }
                    message.orderAscending = reader.bool();
                    continue;
                }
                case 9: {
                    if (tag !== 72) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        var message = createBaseGetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.documentTypeName = (_b = object.documentTypeName) !== null && _b !== void 0 ? _b : "";
        message.indexName = (_c = object.indexName) !== null && _c !== void 0 ? _c : "";
        message.indexValues = ((_d = object.indexValues) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        message.contestantId = (_e = object.contestantId) !== null && _e !== void 0 ? _e : new Uint8Array(0);
        message.startAtIdentifierInfo =
            (object.startAtIdentifierInfo !== undefined && object.startAtIdentifierInfo !== null)
                ? exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0_StartAtIdentifierInfo
                    .fromPartial(object.startAtIdentifierInfo)
                : undefined;
        message.count = (_f = object.count) !== null && _f !== void 0 ? _f : undefined;
        message.orderAscending = (_g = object.orderAscending) !== null && _g !== void 0 ? _g : false;
        message.prove = (_h = object.prove) !== null && _h !== void 0 ? _h : false;
        return message;
    },
};
function createBaseGetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0_StartAtIdentifierInfo() {
    return { startIdentifier: new Uint8Array(0), startIdentifierIncluded: false };
}
exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0_StartAtIdentifierInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startIdentifier.length !== 0) {
            writer.uint32(10).bytes(message.startIdentifier);
        }
        if (message.startIdentifierIncluded !== false) {
            writer.uint32(16).bool(message.startIdentifierIncluded);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0_StartAtIdentifierInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.startIdentifier = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.startIdentifierIncluded = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0_StartAtIdentifierInfo
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetContestedResourceVotersForIdentityRequest_GetContestedResourceVotersForIdentityRequestV0_StartAtIdentifierInfo();
        message.startIdentifier = (_a = object.startIdentifier) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.startIdentifierIncluded = (_b = object.startIdentifierIncluded) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetContestedResourceVotersForIdentityResponse() {
    return { v0: undefined };
}
exports.GetContestedResourceVotersForIdentityResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVotersForIdentityResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0
                        .decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVotersForIdentityResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourceVotersForIdentityResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0() {
    return { contestedResourceVoters: undefined, proof: undefined, metadata: undefined };
}
exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contestedResourceVoters !== undefined) {
            exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0_ContestedResourceVoters
                .encode(message.contestedResourceVoters, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contestedResourceVoters =
                        exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0_ContestedResourceVoters
                            .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0();
        message.contestedResourceVoters =
            (object.contestedResourceVoters !== undefined && object.contestedResourceVoters !== null)
                ? exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0_ContestedResourceVoters
                    .fromPartial(object.contestedResourceVoters)
                : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0_ContestedResourceVoters() {
    return { voters: [], finishedResults: false };
}
exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0_ContestedResourceVoters = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.voters; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        if (message.finishedResults !== false) {
            writer.uint32(16).bool(message.finishedResults);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0_ContestedResourceVoters();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.voters.push(reader.bytes());
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.finishedResults = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0_ContestedResourceVoters
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetContestedResourceVotersForIdentityResponse_GetContestedResourceVotersForIdentityResponseV0_ContestedResourceVoters();
        message.voters = ((_a = object.voters) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.finishedResults = (_b = object.finishedResults) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetContestedResourceIdentityVotesRequest() {
    return { v0: undefined };
}
exports.GetContestedResourceIdentityVotesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceIdentityVotesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceIdentityVotesRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourceIdentityVotesRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0() {
    return {
        identityId: new Uint8Array(0),
        limit: undefined,
        offset: undefined,
        orderAscending: false,
        startAtVotePollIdInfo: undefined,
        prove: false,
    };
}
exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        if (message.limit !== undefined) {
            wrappers_1.UInt32Value.encode({ value: message.limit }, writer.uint32(18).fork()).join();
        }
        if (message.offset !== undefined) {
            wrappers_1.UInt32Value.encode({ value: message.offset }, writer.uint32(26).fork()).join();
        }
        if (message.orderAscending !== false) {
            writer.uint32(32).bool(message.orderAscending);
        }
        if (message.startAtVotePollIdInfo !== undefined) {
            exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0_StartAtVotePollIdInfo.encode(message.startAtVotePollIdInfo, writer.uint32(42).fork()).join();
        }
        if (message.prove !== false) {
            writer.uint32(48).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.limit = wrappers_1.UInt32Value.decode(reader, reader.uint32()).value;
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.offset = wrappers_1.UInt32Value.decode(reader, reader.uint32()).value;
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.orderAscending = reader.bool();
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.startAtVotePollIdInfo =
                        exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0_StartAtVotePollIdInfo
                            .decode(reader, reader.uint32());
                    continue;
                }
                case 6: {
                    if (tag !== 48) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseGetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.limit = (_b = object.limit) !== null && _b !== void 0 ? _b : undefined;
        message.offset = (_c = object.offset) !== null && _c !== void 0 ? _c : undefined;
        message.orderAscending = (_d = object.orderAscending) !== null && _d !== void 0 ? _d : false;
        message.startAtVotePollIdInfo =
            (object.startAtVotePollIdInfo !== undefined && object.startAtVotePollIdInfo !== null)
                ? exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0_StartAtVotePollIdInfo
                    .fromPartial(object.startAtVotePollIdInfo)
                : undefined;
        message.prove = (_e = object.prove) !== null && _e !== void 0 ? _e : false;
        return message;
    },
};
function createBaseGetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0_StartAtVotePollIdInfo() {
    return { startAtPollIdentifier: new Uint8Array(0), startPollIdentifierIncluded: false };
}
exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0_StartAtVotePollIdInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startAtPollIdentifier.length !== 0) {
            writer.uint32(10).bytes(message.startAtPollIdentifier);
        }
        if (message.startPollIdentifierIncluded !== false) {
            writer.uint32(16).bool(message.startPollIdentifierIncluded);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0_StartAtVotePollIdInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.startAtPollIdentifier = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.startPollIdentifierIncluded = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0_StartAtVotePollIdInfo
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetContestedResourceIdentityVotesRequest_GetContestedResourceIdentityVotesRequestV0_StartAtVotePollIdInfo();
        message.startAtPollIdentifier = (_a = object.startAtPollIdentifier) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.startPollIdentifierIncluded = (_b = object.startPollIdentifierIncluded) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetContestedResourceIdentityVotesResponse() {
    return { v0: undefined };
}
exports.GetContestedResourceIdentityVotesResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceIdentityVotesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceIdentityVotesResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourceIdentityVotesResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0() {
    return { votes: undefined, proof: undefined, metadata: undefined };
}
exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.votes !== undefined) {
            exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVotes
                .encode(message.votes, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.votes =
                        exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVotes
                            .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0();
        message.votes = (object.votes !== undefined && object.votes !== null)
            ? exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVotes
                .fromPartial(object.votes)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVotes() {
    return { contestedResourceIdentityVotes: [], finishedResults: false };
}
exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVotes = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.contestedResourceIdentityVotes; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVote
                .encode(v, writer.uint32(10).fork()).join();
        }
        if (message.finishedResults !== false) {
            writer.uint32(16).bool(message.finishedResults);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVotes();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contestedResourceIdentityVotes.push(exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVote
                        .decode(reader, reader.uint32()));
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.finishedResults = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVotes
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVotes();
        message.contestedResourceIdentityVotes = ((_a = object.contestedResourceIdentityVotes) === null || _a === void 0 ? void 0 : _a.map(function (e) {
            return exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVote
                .fromPartial(e);
        })) || [];
        message.finishedResults = (_b = object.finishedResults) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice() {
    return { voteChoiceType: 0, identityId: undefined };
}
exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.voteChoiceType !== 0) {
            writer.uint32(8).int32(message.voteChoiceType);
        }
        if (message.identityId !== undefined) {
            writer.uint32(18).bytes(message.identityId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.voteChoiceType = reader.int32();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice();
        message.voteChoiceType = (_a = object.voteChoiceType) !== null && _a !== void 0 ? _a : 0;
        message.identityId = (_b = object.identityId) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVote() {
    return {
        contractId: new Uint8Array(0),
        documentTypeName: "",
        serializedIndexStorageValues: [],
        voteChoice: undefined,
    };
}
exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVote = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        if (message.documentTypeName !== "") {
            writer.uint32(18).string(message.documentTypeName);
        }
        for (var _i = 0, _a = message.serializedIndexStorageValues; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(26).bytes(v);
        }
        if (message.voteChoice !== undefined) {
            exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice.encode(message.voteChoice, writer.uint32(34).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVote();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.documentTypeName = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.serializedIndexStorageValues.push(reader.bytes());
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.voteChoice =
                        exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice
                            .decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVote
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ContestedResourceIdentityVote();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.documentTypeName = (_b = object.documentTypeName) !== null && _b !== void 0 ? _b : "";
        message.serializedIndexStorageValues = ((_c = object.serializedIndexStorageValues) === null || _c === void 0 ? void 0 : _c.map(function (e) { return e; })) || [];
        message.voteChoice = (object.voteChoice !== undefined && object.voteChoice !== null)
            ? exports.GetContestedResourceIdentityVotesResponse_GetContestedResourceIdentityVotesResponseV0_ResourceVoteChoice
                .fromPartial(object.voteChoice)
            : undefined;
        return message;
    },
};
function createBaseGetPrefundedSpecializedBalanceRequest() {
    return { v0: undefined };
}
exports.GetPrefundedSpecializedBalanceRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetPrefundedSpecializedBalanceRequest_GetPrefundedSpecializedBalanceRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPrefundedSpecializedBalanceRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetPrefundedSpecializedBalanceRequest_GetPrefundedSpecializedBalanceRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetPrefundedSpecializedBalanceRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetPrefundedSpecializedBalanceRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetPrefundedSpecializedBalanceRequest_GetPrefundedSpecializedBalanceRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetPrefundedSpecializedBalanceRequest_GetPrefundedSpecializedBalanceRequestV0() {
    return { id: new Uint8Array(0), prove: false };
}
exports.GetPrefundedSpecializedBalanceRequest_GetPrefundedSpecializedBalanceRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.id.length !== 0) {
            writer.uint32(10).bytes(message.id);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPrefundedSpecializedBalanceRequest_GetPrefundedSpecializedBalanceRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.id = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetPrefundedSpecializedBalanceRequest_GetPrefundedSpecializedBalanceRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetPrefundedSpecializedBalanceRequest_GetPrefundedSpecializedBalanceRequestV0();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetPrefundedSpecializedBalanceResponse() {
    return { v0: undefined };
}
exports.GetPrefundedSpecializedBalanceResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetPrefundedSpecializedBalanceResponse_GetPrefundedSpecializedBalanceResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPrefundedSpecializedBalanceResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetPrefundedSpecializedBalanceResponse_GetPrefundedSpecializedBalanceResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetPrefundedSpecializedBalanceResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetPrefundedSpecializedBalanceResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetPrefundedSpecializedBalanceResponse_GetPrefundedSpecializedBalanceResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetPrefundedSpecializedBalanceResponse_GetPrefundedSpecializedBalanceResponseV0() {
    return { balance: undefined, proof: undefined, metadata: undefined };
}
exports.GetPrefundedSpecializedBalanceResponse_GetPrefundedSpecializedBalanceResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.balance !== undefined) {
            writer.uint32(8).uint64(message.balance);
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPrefundedSpecializedBalanceResponse_GetPrefundedSpecializedBalanceResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.balance = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetPrefundedSpecializedBalanceResponse_GetPrefundedSpecializedBalanceResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetPrefundedSpecializedBalanceResponse_GetPrefundedSpecializedBalanceResponseV0();
        message.balance = (_a = object.balance) !== null && _a !== void 0 ? _a : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetTotalCreditsInPlatformRequest() {
    return { v0: undefined };
}
exports.GetTotalCreditsInPlatformRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetTotalCreditsInPlatformRequest_GetTotalCreditsInPlatformRequestV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTotalCreditsInPlatformRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetTotalCreditsInPlatformRequest_GetTotalCreditsInPlatformRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTotalCreditsInPlatformRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTotalCreditsInPlatformRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetTotalCreditsInPlatformRequest_GetTotalCreditsInPlatformRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetTotalCreditsInPlatformRequest_GetTotalCreditsInPlatformRequestV0() {
    return { prove: false };
}
exports.GetTotalCreditsInPlatformRequest_GetTotalCreditsInPlatformRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.prove !== false) {
            writer.uint32(8).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTotalCreditsInPlatformRequest_GetTotalCreditsInPlatformRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTotalCreditsInPlatformRequest_GetTotalCreditsInPlatformRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetTotalCreditsInPlatformRequest_GetTotalCreditsInPlatformRequestV0();
        message.prove = (_a = object.prove) !== null && _a !== void 0 ? _a : false;
        return message;
    },
};
function createBaseGetTotalCreditsInPlatformResponse() {
    return { v0: undefined };
}
exports.GetTotalCreditsInPlatformResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetTotalCreditsInPlatformResponse_GetTotalCreditsInPlatformResponseV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTotalCreditsInPlatformResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetTotalCreditsInPlatformResponse_GetTotalCreditsInPlatformResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTotalCreditsInPlatformResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTotalCreditsInPlatformResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetTotalCreditsInPlatformResponse_GetTotalCreditsInPlatformResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetTotalCreditsInPlatformResponse_GetTotalCreditsInPlatformResponseV0() {
    return { credits: undefined, proof: undefined, metadata: undefined };
}
exports.GetTotalCreditsInPlatformResponse_GetTotalCreditsInPlatformResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.credits !== undefined) {
            writer.uint32(8).uint64(message.credits);
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTotalCreditsInPlatformResponse_GetTotalCreditsInPlatformResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.credits = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTotalCreditsInPlatformResponse_GetTotalCreditsInPlatformResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetTotalCreditsInPlatformResponse_GetTotalCreditsInPlatformResponseV0();
        message.credits = (_a = object.credits) !== null && _a !== void 0 ? _a : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetPathElementsRequest() {
    return { v0: undefined };
}
exports.GetPathElementsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetPathElementsRequest_GetPathElementsRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPathElementsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetPathElementsRequest_GetPathElementsRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetPathElementsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetPathElementsRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetPathElementsRequest_GetPathElementsRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetPathElementsRequest_GetPathElementsRequestV0() {
    return { path: [], keys: [], prove: false };
}
exports.GetPathElementsRequest_GetPathElementsRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.path; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        for (var _b = 0, _c = message.keys; _b < _c.length; _b++) {
            var v = _c[_b];
            writer.uint32(18).bytes(v);
        }
        if (message.prove !== false) {
            writer.uint32(24).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPathElementsRequest_GetPathElementsRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.path.push(reader.bytes());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.keys.push(reader.bytes());
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetPathElementsRequest_GetPathElementsRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetPathElementsRequest_GetPathElementsRequestV0();
        message.path = ((_a = object.path) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.keys = ((_b = object.keys) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetPathElementsResponse() {
    return { v0: undefined };
}
exports.GetPathElementsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetPathElementsResponse_GetPathElementsResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPathElementsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetPathElementsResponse_GetPathElementsResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetPathElementsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetPathElementsResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetPathElementsResponse_GetPathElementsResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetPathElementsResponse_GetPathElementsResponseV0() {
    return { elements: undefined, proof: undefined, metadata: undefined };
}
exports.GetPathElementsResponse_GetPathElementsResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.elements !== undefined) {
            exports.GetPathElementsResponse_GetPathElementsResponseV0_Elements.encode(message.elements, writer.uint32(10).fork())
                .join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPathElementsResponse_GetPathElementsResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.elements = exports.GetPathElementsResponse_GetPathElementsResponseV0_Elements.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetPathElementsResponse_GetPathElementsResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetPathElementsResponse_GetPathElementsResponseV0();
        message.elements = (object.elements !== undefined && object.elements !== null)
            ? exports.GetPathElementsResponse_GetPathElementsResponseV0_Elements.fromPartial(object.elements)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetPathElementsResponse_GetPathElementsResponseV0_Elements() {
    return { elements: [] };
}
exports.GetPathElementsResponse_GetPathElementsResponseV0_Elements = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.elements; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetPathElementsResponse_GetPathElementsResponseV0_Elements();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.elements.push(reader.bytes());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetPathElementsResponse_GetPathElementsResponseV0_Elements.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetPathElementsResponse_GetPathElementsResponseV0_Elements();
        message.elements = ((_a = object.elements) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        return message;
    },
};
function createBaseGetStatusRequest() {
    return { v0: undefined };
}
exports.GetStatusRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetStatusRequest_GetStatusRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetStatusRequest_GetStatusRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetStatusRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetStatusRequest_GetStatusRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetStatusRequest_GetStatusRequestV0() {
    return {};
}
exports.GetStatusRequest_GetStatusRequestV0 = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusRequest_GetStatusRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusRequest_GetStatusRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseGetStatusRequest_GetStatusRequestV0();
        return message;
    },
};
function createBaseGetStatusResponse() {
    return { v0: undefined };
}
exports.GetStatusResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetStatusResponse_GetStatusResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetStatusResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0() {
    return {
        version: undefined,
        node: undefined,
        chain: undefined,
        network: undefined,
        stateSync: undefined,
        time: undefined,
    };
}
exports.GetStatusResponse_GetStatusResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.version !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0_Version.encode(message.version, writer.uint32(10).fork()).join();
        }
        if (message.node !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0_Node.encode(message.node, writer.uint32(18).fork()).join();
        }
        if (message.chain !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0_Chain.encode(message.chain, writer.uint32(26).fork()).join();
        }
        if (message.network !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0_Network.encode(message.network, writer.uint32(34).fork()).join();
        }
        if (message.stateSync !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0_StateSync.encode(message.stateSync, writer.uint32(42).fork()).join();
        }
        if (message.time !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0_Time.encode(message.time, writer.uint32(50).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.version = exports.GetStatusResponse_GetStatusResponseV0_Version.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.node = exports.GetStatusResponse_GetStatusResponseV0_Node.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.chain = exports.GetStatusResponse_GetStatusResponseV0_Chain.decode(reader, reader.uint32());
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.network = exports.GetStatusResponse_GetStatusResponseV0_Network.decode(reader, reader.uint32());
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.stateSync = exports.GetStatusResponse_GetStatusResponseV0_StateSync.decode(reader, reader.uint32());
                    continue;
                }
                case 6: {
                    if (tag !== 50) {
                        break;
                    }
                    message.time = exports.GetStatusResponse_GetStatusResponseV0_Time.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetStatusResponse_GetStatusResponseV0();
        message.version = (object.version !== undefined && object.version !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0_Version.fromPartial(object.version)
            : undefined;
        message.node = (object.node !== undefined && object.node !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0_Node.fromPartial(object.node)
            : undefined;
        message.chain = (object.chain !== undefined && object.chain !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0_Chain.fromPartial(object.chain)
            : undefined;
        message.network = (object.network !== undefined && object.network !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0_Network.fromPartial(object.network)
            : undefined;
        message.stateSync = (object.stateSync !== undefined && object.stateSync !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0_StateSync.fromPartial(object.stateSync)
            : undefined;
        message.time = (object.time !== undefined && object.time !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0_Time.fromPartial(object.time)
            : undefined;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0_Version() {
    return { software: undefined, protocol: undefined };
}
exports.GetStatusResponse_GetStatusResponseV0_Version = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.software !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0_Version_Software.encode(message.software, writer.uint32(10).fork())
                .join();
        }
        if (message.protocol !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol.encode(message.protocol, writer.uint32(18).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Version();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.software = exports.GetStatusResponse_GetStatusResponseV0_Version_Software.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.protocol = exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0_Version.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Version();
        message.software = (object.software !== undefined && object.software !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0_Version_Software.fromPartial(object.software)
            : undefined;
        message.protocol = (object.protocol !== undefined && object.protocol !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol.fromPartial(object.protocol)
            : undefined;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0_Version_Software() {
    return { dapi: "", drive: undefined, tenderdash: undefined };
}
exports.GetStatusResponse_GetStatusResponseV0_Version_Software = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.dapi !== "") {
            writer.uint32(10).string(message.dapi);
        }
        if (message.drive !== undefined) {
            writer.uint32(18).string(message.drive);
        }
        if (message.tenderdash !== undefined) {
            writer.uint32(26).string(message.tenderdash);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Version_Software();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.dapi = reader.string();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.drive = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.tenderdash = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0_Version_Software.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Version_Software();
        message.dapi = (_a = object.dapi) !== null && _a !== void 0 ? _a : "";
        message.drive = (_b = object.drive) !== null && _b !== void 0 ? _b : undefined;
        message.tenderdash = (_c = object.tenderdash) !== null && _c !== void 0 ? _c : undefined;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0_Version_Protocol() {
    return { tenderdash: undefined, drive: undefined };
}
exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tenderdash !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Tenderdash.encode(message.tenderdash, writer.uint32(10).fork()).join();
        }
        if (message.drive !== undefined) {
            exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Drive.encode(message.drive, writer.uint32(18).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Version_Protocol();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tenderdash = exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Tenderdash.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.drive = exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Drive.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Version_Protocol();
        message.tenderdash = (object.tenderdash !== undefined && object.tenderdash !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Tenderdash.fromPartial(object.tenderdash)
            : undefined;
        message.drive = (object.drive !== undefined && object.drive !== null)
            ? exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Drive.fromPartial(object.drive)
            : undefined;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0_Version_Protocol_Tenderdash() {
    return { p2p: 0, block: 0 };
}
exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Tenderdash = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.p2p !== 0) {
            writer.uint32(8).uint32(message.p2p);
        }
        if (message.block !== 0) {
            writer.uint32(16).uint32(message.block);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Version_Protocol_Tenderdash();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.p2p = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.block = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Tenderdash.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Version_Protocol_Tenderdash();
        message.p2p = (_a = object.p2p) !== null && _a !== void 0 ? _a : 0;
        message.block = (_b = object.block) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0_Version_Protocol_Drive() {
    return { latest: 0, current: 0 };
}
exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Drive = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.latest !== 0) {
            writer.uint32(24).uint32(message.latest);
        }
        if (message.current !== 0) {
            writer.uint32(32).uint32(message.current);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Version_Protocol_Drive();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.latest = reader.uint32();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.current = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0_Version_Protocol_Drive.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Version_Protocol_Drive();
        message.latest = (_a = object.latest) !== null && _a !== void 0 ? _a : 0;
        message.current = (_b = object.current) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0_Time() {
    return { local: "0", block: undefined, genesis: undefined, epoch: undefined };
}
exports.GetStatusResponse_GetStatusResponseV0_Time = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.local !== "0") {
            writer.uint32(8).uint64(message.local);
        }
        if (message.block !== undefined) {
            writer.uint32(16).uint64(message.block);
        }
        if (message.genesis !== undefined) {
            writer.uint32(24).uint64(message.genesis);
        }
        if (message.epoch !== undefined) {
            writer.uint32(32).uint32(message.epoch);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Time();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.local = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.block = reader.uint64().toString();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.genesis = reader.uint64().toString();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.epoch = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0_Time.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Time();
        message.local = (_a = object.local) !== null && _a !== void 0 ? _a : "0";
        message.block = (_b = object.block) !== null && _b !== void 0 ? _b : undefined;
        message.genesis = (_c = object.genesis) !== null && _c !== void 0 ? _c : undefined;
        message.epoch = (_d = object.epoch) !== null && _d !== void 0 ? _d : undefined;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0_Node() {
    return { id: new Uint8Array(0), proTxHash: undefined };
}
exports.GetStatusResponse_GetStatusResponseV0_Node = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.id.length !== 0) {
            writer.uint32(10).bytes(message.id);
        }
        if (message.proTxHash !== undefined) {
            writer.uint32(18).bytes(message.proTxHash);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Node();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.id = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proTxHash = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0_Node.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Node();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.proTxHash = (_b = object.proTxHash) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0_Chain() {
    return {
        catchingUp: false,
        latestBlockHash: new Uint8Array(0),
        latestAppHash: new Uint8Array(0),
        latestBlockHeight: "0",
        earliestBlockHash: new Uint8Array(0),
        earliestAppHash: new Uint8Array(0),
        earliestBlockHeight: "0",
        maxPeerBlockHeight: "0",
        coreChainLockedHeight: undefined,
    };
}
exports.GetStatusResponse_GetStatusResponseV0_Chain = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.catchingUp !== false) {
            writer.uint32(8).bool(message.catchingUp);
        }
        if (message.latestBlockHash.length !== 0) {
            writer.uint32(18).bytes(message.latestBlockHash);
        }
        if (message.latestAppHash.length !== 0) {
            writer.uint32(26).bytes(message.latestAppHash);
        }
        if (message.latestBlockHeight !== "0") {
            writer.uint32(32).uint64(message.latestBlockHeight);
        }
        if (message.earliestBlockHash.length !== 0) {
            writer.uint32(42).bytes(message.earliestBlockHash);
        }
        if (message.earliestAppHash.length !== 0) {
            writer.uint32(50).bytes(message.earliestAppHash);
        }
        if (message.earliestBlockHeight !== "0") {
            writer.uint32(56).uint64(message.earliestBlockHeight);
        }
        if (message.maxPeerBlockHeight !== "0") {
            writer.uint32(72).uint64(message.maxPeerBlockHeight);
        }
        if (message.coreChainLockedHeight !== undefined) {
            writer.uint32(80).uint32(message.coreChainLockedHeight);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Chain();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.catchingUp = reader.bool();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.latestBlockHash = reader.bytes();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.latestAppHash = reader.bytes();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.latestBlockHeight = reader.uint64().toString();
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.earliestBlockHash = reader.bytes();
                    continue;
                }
                case 6: {
                    if (tag !== 50) {
                        break;
                    }
                    message.earliestAppHash = reader.bytes();
                    continue;
                }
                case 7: {
                    if (tag !== 56) {
                        break;
                    }
                    message.earliestBlockHeight = reader.uint64().toString();
                    continue;
                }
                case 9: {
                    if (tag !== 72) {
                        break;
                    }
                    message.maxPeerBlockHeight = reader.uint64().toString();
                    continue;
                }
                case 10: {
                    if (tag !== 80) {
                        break;
                    }
                    message.coreChainLockedHeight = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0_Chain.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Chain();
        message.catchingUp = (_a = object.catchingUp) !== null && _a !== void 0 ? _a : false;
        message.latestBlockHash = (_b = object.latestBlockHash) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.latestAppHash = (_c = object.latestAppHash) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        message.latestBlockHeight = (_d = object.latestBlockHeight) !== null && _d !== void 0 ? _d : "0";
        message.earliestBlockHash = (_e = object.earliestBlockHash) !== null && _e !== void 0 ? _e : new Uint8Array(0);
        message.earliestAppHash = (_f = object.earliestAppHash) !== null && _f !== void 0 ? _f : new Uint8Array(0);
        message.earliestBlockHeight = (_g = object.earliestBlockHeight) !== null && _g !== void 0 ? _g : "0";
        message.maxPeerBlockHeight = (_h = object.maxPeerBlockHeight) !== null && _h !== void 0 ? _h : "0";
        message.coreChainLockedHeight = (_j = object.coreChainLockedHeight) !== null && _j !== void 0 ? _j : undefined;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0_Network() {
    return { chainId: "", peersCount: 0, listening: false };
}
exports.GetStatusResponse_GetStatusResponseV0_Network = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.chainId !== "") {
            writer.uint32(10).string(message.chainId);
        }
        if (message.peersCount !== 0) {
            writer.uint32(16).uint32(message.peersCount);
        }
        if (message.listening !== false) {
            writer.uint32(24).bool(message.listening);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Network();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.chainId = reader.string();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.peersCount = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.listening = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0_Network.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_Network();
        message.chainId = (_a = object.chainId) !== null && _a !== void 0 ? _a : "";
        message.peersCount = (_b = object.peersCount) !== null && _b !== void 0 ? _b : 0;
        message.listening = (_c = object.listening) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetStatusResponse_GetStatusResponseV0_StateSync() {
    return {
        totalSyncedTime: "0",
        remainingTime: "0",
        totalSnapshots: 0,
        chunkProcessAvgTime: "0",
        snapshotHeight: "0",
        snapshotChunksCount: "0",
        backfilledBlocks: "0",
        backfillBlocksTotal: "0",
    };
}
exports.GetStatusResponse_GetStatusResponseV0_StateSync = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.totalSyncedTime !== "0") {
            writer.uint32(8).uint64(message.totalSyncedTime);
        }
        if (message.remainingTime !== "0") {
            writer.uint32(16).uint64(message.remainingTime);
        }
        if (message.totalSnapshots !== 0) {
            writer.uint32(24).uint32(message.totalSnapshots);
        }
        if (message.chunkProcessAvgTime !== "0") {
            writer.uint32(32).uint64(message.chunkProcessAvgTime);
        }
        if (message.snapshotHeight !== "0") {
            writer.uint32(40).uint64(message.snapshotHeight);
        }
        if (message.snapshotChunksCount !== "0") {
            writer.uint32(48).uint64(message.snapshotChunksCount);
        }
        if (message.backfilledBlocks !== "0") {
            writer.uint32(56).uint64(message.backfilledBlocks);
        }
        if (message.backfillBlocksTotal !== "0") {
            writer.uint32(64).uint64(message.backfillBlocksTotal);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_StateSync();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.totalSyncedTime = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.remainingTime = reader.uint64().toString();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.totalSnapshots = reader.uint32();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.chunkProcessAvgTime = reader.uint64().toString();
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.snapshotHeight = reader.uint64().toString();
                    continue;
                }
                case 6: {
                    if (tag !== 48) {
                        break;
                    }
                    message.snapshotChunksCount = reader.uint64().toString();
                    continue;
                }
                case 7: {
                    if (tag !== 56) {
                        break;
                    }
                    message.backfilledBlocks = reader.uint64().toString();
                    continue;
                }
                case 8: {
                    if (tag !== 64) {
                        break;
                    }
                    message.backfillBlocksTotal = reader.uint64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetStatusResponse_GetStatusResponseV0_StateSync.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        var message = createBaseGetStatusResponse_GetStatusResponseV0_StateSync();
        message.totalSyncedTime = (_a = object.totalSyncedTime) !== null && _a !== void 0 ? _a : "0";
        message.remainingTime = (_b = object.remainingTime) !== null && _b !== void 0 ? _b : "0";
        message.totalSnapshots = (_c = object.totalSnapshots) !== null && _c !== void 0 ? _c : 0;
        message.chunkProcessAvgTime = (_d = object.chunkProcessAvgTime) !== null && _d !== void 0 ? _d : "0";
        message.snapshotHeight = (_e = object.snapshotHeight) !== null && _e !== void 0 ? _e : "0";
        message.snapshotChunksCount = (_f = object.snapshotChunksCount) !== null && _f !== void 0 ? _f : "0";
        message.backfilledBlocks = (_g = object.backfilledBlocks) !== null && _g !== void 0 ? _g : "0";
        message.backfillBlocksTotal = (_h = object.backfillBlocksTotal) !== null && _h !== void 0 ? _h : "0";
        return message;
    },
};
function createBaseGetCurrentQuorumsInfoRequest() {
    return { v0: undefined };
}
exports.GetCurrentQuorumsInfoRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetCurrentQuorumsInfoRequest_GetCurrentQuorumsInfoRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCurrentQuorumsInfoRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetCurrentQuorumsInfoRequest_GetCurrentQuorumsInfoRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetCurrentQuorumsInfoRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetCurrentQuorumsInfoRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetCurrentQuorumsInfoRequest_GetCurrentQuorumsInfoRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetCurrentQuorumsInfoRequest_GetCurrentQuorumsInfoRequestV0() {
    return {};
}
exports.GetCurrentQuorumsInfoRequest_GetCurrentQuorumsInfoRequestV0 = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCurrentQuorumsInfoRequest_GetCurrentQuorumsInfoRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetCurrentQuorumsInfoRequest_GetCurrentQuorumsInfoRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (_) {
        var message = createBaseGetCurrentQuorumsInfoRequest_GetCurrentQuorumsInfoRequestV0();
        return message;
    },
};
function createBaseGetCurrentQuorumsInfoResponse() {
    return { v0: undefined };
}
exports.GetCurrentQuorumsInfoResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetCurrentQuorumsInfoResponse_GetCurrentQuorumsInfoResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCurrentQuorumsInfoResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetCurrentQuorumsInfoResponse_GetCurrentQuorumsInfoResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetCurrentQuorumsInfoResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetCurrentQuorumsInfoResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetCurrentQuorumsInfoResponse_GetCurrentQuorumsInfoResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetCurrentQuorumsInfoResponse_ValidatorV0() {
    return { proTxHash: new Uint8Array(0), nodeIp: "", isBanned: false };
}
exports.GetCurrentQuorumsInfoResponse_ValidatorV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.proTxHash.length !== 0) {
            writer.uint32(10).bytes(message.proTxHash);
        }
        if (message.nodeIp !== "") {
            writer.uint32(18).string(message.nodeIp);
        }
        if (message.isBanned !== false) {
            writer.uint32(24).bool(message.isBanned);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCurrentQuorumsInfoResponse_ValidatorV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.proTxHash = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.nodeIp = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.isBanned = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetCurrentQuorumsInfoResponse_ValidatorV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetCurrentQuorumsInfoResponse_ValidatorV0();
        message.proTxHash = (_a = object.proTxHash) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.nodeIp = (_b = object.nodeIp) !== null && _b !== void 0 ? _b : "";
        message.isBanned = (_c = object.isBanned) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetCurrentQuorumsInfoResponse_ValidatorSetV0() {
    return { quorumHash: new Uint8Array(0), coreHeight: 0, members: [], thresholdPublicKey: new Uint8Array(0) };
}
exports.GetCurrentQuorumsInfoResponse_ValidatorSetV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.quorumHash.length !== 0) {
            writer.uint32(10).bytes(message.quorumHash);
        }
        if (message.coreHeight !== 0) {
            writer.uint32(16).uint32(message.coreHeight);
        }
        for (var _i = 0, _a = message.members; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetCurrentQuorumsInfoResponse_ValidatorV0.encode(v, writer.uint32(26).fork()).join();
        }
        if (message.thresholdPublicKey.length !== 0) {
            writer.uint32(34).bytes(message.thresholdPublicKey);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCurrentQuorumsInfoResponse_ValidatorSetV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.quorumHash = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.coreHeight = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.members.push(exports.GetCurrentQuorumsInfoResponse_ValidatorV0.decode(reader, reader.uint32()));
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.thresholdPublicKey = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetCurrentQuorumsInfoResponse_ValidatorSetV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetCurrentQuorumsInfoResponse_ValidatorSetV0();
        message.quorumHash = (_a = object.quorumHash) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.coreHeight = (_b = object.coreHeight) !== null && _b !== void 0 ? _b : 0;
        message.members = ((_c = object.members) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.GetCurrentQuorumsInfoResponse_ValidatorV0.fromPartial(e); })) || [];
        message.thresholdPublicKey = (_d = object.thresholdPublicKey) !== null && _d !== void 0 ? _d : new Uint8Array(0);
        return message;
    },
};
function createBaseGetCurrentQuorumsInfoResponse_GetCurrentQuorumsInfoResponseV0() {
    return {
        quorumHashes: [],
        currentQuorumHash: new Uint8Array(0),
        validatorSets: [],
        lastBlockProposer: new Uint8Array(0),
        metadata: undefined,
    };
}
exports.GetCurrentQuorumsInfoResponse_GetCurrentQuorumsInfoResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.quorumHashes; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        if (message.currentQuorumHash.length !== 0) {
            writer.uint32(18).bytes(message.currentQuorumHash);
        }
        for (var _b = 0, _c = message.validatorSets; _b < _c.length; _b++) {
            var v = _c[_b];
            exports.GetCurrentQuorumsInfoResponse_ValidatorSetV0.encode(v, writer.uint32(26).fork()).join();
        }
        if (message.lastBlockProposer.length !== 0) {
            writer.uint32(34).bytes(message.lastBlockProposer);
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(42).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetCurrentQuorumsInfoResponse_GetCurrentQuorumsInfoResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.quorumHashes.push(reader.bytes());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.currentQuorumHash = reader.bytes();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.validatorSets.push(exports.GetCurrentQuorumsInfoResponse_ValidatorSetV0.decode(reader, reader.uint32()));
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.lastBlockProposer = reader.bytes();
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetCurrentQuorumsInfoResponse_GetCurrentQuorumsInfoResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseGetCurrentQuorumsInfoResponse_GetCurrentQuorumsInfoResponseV0();
        message.quorumHashes = ((_a = object.quorumHashes) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.currentQuorumHash = (_b = object.currentQuorumHash) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.validatorSets =
            ((_c = object.validatorSets) === null || _c === void 0 ? void 0 : _c.map(function (e) { return exports.GetCurrentQuorumsInfoResponse_ValidatorSetV0.fromPartial(e); })) || [];
        message.lastBlockProposer = (_d = object.lastBlockProposer) !== null && _d !== void 0 ? _d : new Uint8Array(0);
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityTokenBalancesRequest() {
    return { v0: undefined };
}
exports.GetIdentityTokenBalancesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityTokenBalancesRequest_GetIdentityTokenBalancesRequestV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenBalancesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityTokenBalancesRequest_GetIdentityTokenBalancesRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenBalancesRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityTokenBalancesRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityTokenBalancesRequest_GetIdentityTokenBalancesRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityTokenBalancesRequest_GetIdentityTokenBalancesRequestV0() {
    return { identityId: new Uint8Array(0), tokenIds: [], prove: false };
}
exports.GetIdentityTokenBalancesRequest_GetIdentityTokenBalancesRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        for (var _i = 0, _a = message.tokenIds; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).bytes(v);
        }
        if (message.prove !== false) {
            writer.uint32(24).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenBalancesRequest_GetIdentityTokenBalancesRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.tokenIds.push(reader.bytes());
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenBalancesRequest_GetIdentityTokenBalancesRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetIdentityTokenBalancesRequest_GetIdentityTokenBalancesRequestV0();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.tokenIds = ((_b = object.tokenIds) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetIdentityTokenBalancesResponse() {
    return { v0: undefined };
}
exports.GetIdentityTokenBalancesResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenBalancesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenBalancesResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityTokenBalancesResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0() {
    return { tokenBalances: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenBalances !== undefined) {
            exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalances.encode(message.tokenBalances, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenBalances = exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalances
                        .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0();
        message.tokenBalances = (object.tokenBalances !== undefined && object.tokenBalances !== null)
            ? exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalances.fromPartial(object.tokenBalances)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalanceEntry() {
    return { tokenId: new Uint8Array(0), balance: undefined };
}
exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalanceEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        if (message.balance !== undefined) {
            writer.uint32(16).uint64(message.balance);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalanceEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.balance = reader.uint64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalanceEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalanceEntry();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.balance = (_b = object.balance) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalances() {
    return { tokenBalances: [] };
}
exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalances = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.tokenBalances; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalanceEntry.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalances();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenBalances.push(exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalanceEntry.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalances.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalances();
        message.tokenBalances =
            ((_a = object.tokenBalances) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetIdentityTokenBalancesResponse_GetIdentityTokenBalancesResponseV0_TokenBalanceEntry.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetIdentitiesTokenBalancesRequest() {
    return { v0: undefined };
}
exports.GetIdentitiesTokenBalancesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentitiesTokenBalancesRequest_GetIdentitiesTokenBalancesRequestV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenBalancesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentitiesTokenBalancesRequest_GetIdentitiesTokenBalancesRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenBalancesRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesTokenBalancesRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentitiesTokenBalancesRequest_GetIdentitiesTokenBalancesRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesTokenBalancesRequest_GetIdentitiesTokenBalancesRequestV0() {
    return { tokenId: new Uint8Array(0), identityIds: [], prove: false };
}
exports.GetIdentitiesTokenBalancesRequest_GetIdentitiesTokenBalancesRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        for (var _i = 0, _a = message.identityIds; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).bytes(v);
        }
        if (message.prove !== false) {
            writer.uint32(24).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenBalancesRequest_GetIdentitiesTokenBalancesRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.identityIds.push(reader.bytes());
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenBalancesRequest_GetIdentitiesTokenBalancesRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetIdentitiesTokenBalancesRequest_GetIdentitiesTokenBalancesRequestV0();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.identityIds = ((_b = object.identityIds) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetIdentitiesTokenBalancesResponse() {
    return { v0: undefined };
}
exports.GetIdentitiesTokenBalancesResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenBalancesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenBalancesResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesTokenBalancesResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0() {
    return { identityTokenBalances: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityTokenBalances !== undefined) {
            exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalances.encode(message.identityTokenBalances, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityTokenBalances =
                        exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalances.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0();
        message.identityTokenBalances =
            (object.identityTokenBalances !== undefined && object.identityTokenBalances !== null)
                ? exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalances.fromPartial(object.identityTokenBalances)
                : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalanceEntry() {
    return { identityId: new Uint8Array(0), balance: undefined };
}
exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalanceEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        if (message.balance !== undefined) {
            writer.uint32(16).uint64(message.balance);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalanceEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.balance = reader.uint64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalanceEntry
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalanceEntry();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.balance = (_b = object.balance) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalances() {
    return { identityTokenBalances: [] };
}
exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalances = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.identityTokenBalances; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalanceEntry.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalances();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityTokenBalances.push(exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalanceEntry.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalances.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalances();
        message.identityTokenBalances =
            ((_a = object.identityTokenBalances) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetIdentitiesTokenBalancesResponse_GetIdentitiesTokenBalancesResponseV0_IdentityTokenBalanceEntry.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetIdentityTokenInfosRequest() {
    return { v0: undefined };
}
exports.GetIdentityTokenInfosRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityTokenInfosRequest_GetIdentityTokenInfosRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenInfosRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityTokenInfosRequest_GetIdentityTokenInfosRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenInfosRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityTokenInfosRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityTokenInfosRequest_GetIdentityTokenInfosRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityTokenInfosRequest_GetIdentityTokenInfosRequestV0() {
    return { identityId: new Uint8Array(0), tokenIds: [], prove: false };
}
exports.GetIdentityTokenInfosRequest_GetIdentityTokenInfosRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        for (var _i = 0, _a = message.tokenIds; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).bytes(v);
        }
        if (message.prove !== false) {
            writer.uint32(24).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenInfosRequest_GetIdentityTokenInfosRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.tokenIds.push(reader.bytes());
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenInfosRequest_GetIdentityTokenInfosRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetIdentityTokenInfosRequest_GetIdentityTokenInfosRequestV0();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.tokenIds = ((_b = object.tokenIds) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetIdentityTokenInfosResponse() {
    return { v0: undefined };
}
exports.GetIdentityTokenInfosResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenInfosResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenInfosResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityTokenInfosResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0() {
    return { tokenInfos: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenInfos !== undefined) {
            exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfos.encode(message.tokenInfos, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenInfos = exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfos.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0();
        message.tokenInfos = (object.tokenInfos !== undefined && object.tokenInfos !== null)
            ? exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfos.fromPartial(object.tokenInfos)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenIdentityInfoEntry() {
    return { frozen: false };
}
exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenIdentityInfoEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.frozen !== false) {
            writer.uint32(8).bool(message.frozen);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenIdentityInfoEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.frozen = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenIdentityInfoEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenIdentityInfoEntry();
        message.frozen = (_a = object.frozen) !== null && _a !== void 0 ? _a : false;
        return message;
    },
};
function createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfoEntry() {
    return { tokenId: new Uint8Array(0), info: undefined };
}
exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfoEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        if (message.info !== undefined) {
            exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenIdentityInfoEntry.encode(message.info, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfoEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.info = exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenIdentityInfoEntry.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfoEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfoEntry();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.info = (object.info !== undefined && object.info !== null)
            ? exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenIdentityInfoEntry.fromPartial(object.info)
            : undefined;
        return message;
    },
};
function createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfos() {
    return { tokenInfos: [] };
}
exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfos = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.tokenInfos; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfoEntry.encode(v, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenInfos.push(exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfoEntry.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfos.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfos();
        message.tokenInfos =
            ((_a = object.tokenInfos) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetIdentityTokenInfosResponse_GetIdentityTokenInfosResponseV0_TokenInfoEntry.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetIdentitiesTokenInfosRequest() {
    return { v0: undefined };
}
exports.GetIdentitiesTokenInfosRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentitiesTokenInfosRequest_GetIdentitiesTokenInfosRequestV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenInfosRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentitiesTokenInfosRequest_GetIdentitiesTokenInfosRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenInfosRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesTokenInfosRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentitiesTokenInfosRequest_GetIdentitiesTokenInfosRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesTokenInfosRequest_GetIdentitiesTokenInfosRequestV0() {
    return { tokenId: new Uint8Array(0), identityIds: [], prove: false };
}
exports.GetIdentitiesTokenInfosRequest_GetIdentitiesTokenInfosRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        for (var _i = 0, _a = message.identityIds; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).bytes(v);
        }
        if (message.prove !== false) {
            writer.uint32(24).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenInfosRequest_GetIdentitiesTokenInfosRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.identityIds.push(reader.bytes());
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenInfosRequest_GetIdentitiesTokenInfosRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetIdentitiesTokenInfosRequest_GetIdentitiesTokenInfosRequestV0();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.identityIds = ((_b = object.identityIds) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetIdentitiesTokenInfosResponse() {
    return { v0: undefined };
}
exports.GetIdentitiesTokenInfosResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0.encode(message.v0, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenInfosResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenInfosResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesTokenInfosResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0() {
    return { identityTokenInfos: undefined, proof: undefined, metadata: undefined };
}
exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityTokenInfos !== undefined) {
            exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_IdentityTokenInfos.encode(message.identityTokenInfos, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityTokenInfos =
                        exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_IdentityTokenInfos.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0();
        message.identityTokenInfos = (object.identityTokenInfos !== undefined && object.identityTokenInfos !== null)
            ? exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_IdentityTokenInfos.fromPartial(object.identityTokenInfos)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenIdentityInfoEntry() {
    return { frozen: false };
}
exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenIdentityInfoEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.frozen !== false) {
            writer.uint32(8).bool(message.frozen);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenIdentityInfoEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.frozen = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenIdentityInfoEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenIdentityInfoEntry();
        message.frozen = (_a = object.frozen) !== null && _a !== void 0 ? _a : false;
        return message;
    },
};
function createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenInfoEntry() {
    return { identityId: new Uint8Array(0), info: undefined };
}
exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenInfoEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.identityId.length !== 0) {
            writer.uint32(10).bytes(message.identityId);
        }
        if (message.info !== undefined) {
            exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenIdentityInfoEntry.encode(message.info, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenInfoEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.identityId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.info = exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenIdentityInfoEntry
                        .decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenInfoEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenInfoEntry();
        message.identityId = (_a = object.identityId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.info = (object.info !== undefined && object.info !== null)
            ? exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenIdentityInfoEntry.fromPartial(object.info)
            : undefined;
        return message;
    },
};
function createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_IdentityTokenInfos() {
    return { tokenInfos: [] };
}
exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_IdentityTokenInfos = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.tokenInfos; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenInfoEntry.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_IdentityTokenInfos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenInfos.push(exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenInfoEntry.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_IdentityTokenInfos.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_IdentityTokenInfos();
        message.tokenInfos =
            ((_a = object.tokenInfos) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetIdentitiesTokenInfosResponse_GetIdentitiesTokenInfosResponseV0_TokenInfoEntry.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetTokenStatusesRequest() {
    return { v0: undefined };
}
exports.GetTokenStatusesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetTokenStatusesRequest_GetTokenStatusesRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenStatusesRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetTokenStatusesRequest_GetTokenStatusesRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenStatusesRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTokenStatusesRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetTokenStatusesRequest_GetTokenStatusesRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetTokenStatusesRequest_GetTokenStatusesRequestV0() {
    return { tokenIds: [], prove: false };
}
exports.GetTokenStatusesRequest_GetTokenStatusesRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.tokenIds; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).bytes(v);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenStatusesRequest_GetTokenStatusesRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenIds.push(reader.bytes());
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenStatusesRequest_GetTokenStatusesRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetTokenStatusesRequest_GetTokenStatusesRequestV0();
        message.tokenIds = ((_a = object.tokenIds) === null || _a === void 0 ? void 0 : _a.map(function (e) { return e; })) || [];
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetTokenStatusesResponse() {
    return { v0: undefined };
}
exports.GetTokenStatusesResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenStatusesResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenStatusesResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTokenStatusesResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetTokenStatusesResponse_GetTokenStatusesResponseV0() {
    return { tokenStatuses: undefined, proof: undefined, metadata: undefined };
}
exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenStatuses !== undefined) {
            exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatuses.encode(message.tokenStatuses, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenStatusesResponse_GetTokenStatusesResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenStatuses = exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatuses.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTokenStatusesResponse_GetTokenStatusesResponseV0();
        message.tokenStatuses = (object.tokenStatuses !== undefined && object.tokenStatuses !== null)
            ? exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatuses.fromPartial(object.tokenStatuses)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatusEntry() {
    return { tokenId: new Uint8Array(0), paused: undefined };
}
exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatusEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        if (message.paused !== undefined) {
            writer.uint32(16).bool(message.paused);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatusEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.paused = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatusEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatusEntry();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.paused = (_b = object.paused) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatuses() {
    return { tokenStatuses: [] };
}
exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatuses = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.tokenStatuses; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatusEntry.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatuses();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenStatuses.push(exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatusEntry.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatuses.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatuses();
        message.tokenStatuses =
            ((_a = object.tokenStatuses) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetTokenStatusesResponse_GetTokenStatusesResponseV0_TokenStatusEntry.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetTokenPreProgrammedDistributionsRequest() {
    return { v0: undefined };
}
exports.GetTokenPreProgrammedDistributionsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenPreProgrammedDistributionsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenPreProgrammedDistributionsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTokenPreProgrammedDistributionsRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0() {
    return { tokenId: new Uint8Array(0), startAtInfo: undefined, limit: undefined, prove: false };
}
exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        if (message.startAtInfo !== undefined) {
            exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0_StartAtInfo.encode(message.startAtInfo, writer.uint32(18).fork()).join();
        }
        if (message.limit !== undefined) {
            writer.uint32(24).uint32(message.limit);
        }
        if (message.prove !== false) {
            writer.uint32(32).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.startAtInfo =
                        exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0_StartAtInfo.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.limit = reader.uint32();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.startAtInfo = (object.startAtInfo !== undefined && object.startAtInfo !== null)
            ? exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0_StartAtInfo.fromPartial(object.startAtInfo)
            : undefined;
        message.limit = (_b = object.limit) !== null && _b !== void 0 ? _b : undefined;
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0_StartAtInfo() {
    return { startTimeMs: "0", startRecipient: undefined, startRecipientIncluded: undefined };
}
exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0_StartAtInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startTimeMs !== "0") {
            writer.uint32(8).uint64(message.startTimeMs);
        }
        if (message.startRecipient !== undefined) {
            writer.uint32(18).bytes(message.startRecipient);
        }
        if (message.startRecipientIncluded !== undefined) {
            writer.uint32(24).bool(message.startRecipientIncluded);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0_StartAtInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.startTimeMs = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.startRecipient = reader.bytes();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.startRecipientIncluded = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0_StartAtInfo
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetTokenPreProgrammedDistributionsRequest_GetTokenPreProgrammedDistributionsRequestV0_StartAtInfo();
        message.startTimeMs = (_a = object.startTimeMs) !== null && _a !== void 0 ? _a : "0";
        message.startRecipient = (_b = object.startRecipient) !== null && _b !== void 0 ? _b : undefined;
        message.startRecipientIncluded = (_c = object.startRecipientIncluded) !== null && _c !== void 0 ? _c : undefined;
        return message;
    },
};
function createBaseGetTokenPreProgrammedDistributionsResponse() {
    return { v0: undefined };
}
exports.GetTokenPreProgrammedDistributionsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenPreProgrammedDistributionsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenPreProgrammedDistributionsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTokenPreProgrammedDistributionsResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0() {
    return { tokenDistributions: undefined, proof: undefined, metadata: undefined };
}
exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenDistributions !== undefined) {
            exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributions.encode(message.tokenDistributions, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenDistributions =
                        exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributions
                            .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0();
        message.tokenDistributions = (object.tokenDistributions !== undefined && object.tokenDistributions !== null)
            ? exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributions
                .fromPartial(object.tokenDistributions)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributionEntry() {
    return { recipientId: new Uint8Array(0), amount: "0" };
}
exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributionEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.recipientId.length !== 0) {
            writer.uint32(10).bytes(message.recipientId);
        }
        if (message.amount !== "0") {
            writer.uint32(16).uint64(message.amount);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributionEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.recipientId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.amount = reader.uint64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributionEntry
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributionEntry();
        message.recipientId = (_a = object.recipientId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.amount = (_b = object.amount) !== null && _b !== void 0 ? _b : "0";
        return message;
    },
};
function createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenTimedDistributionEntry() {
    return { timestamp: "0", distributions: [] };
}
exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenTimedDistributionEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.timestamp !== "0") {
            writer.uint32(8).uint64(message.timestamp);
        }
        for (var _i = 0, _a = message.distributions; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributionEntry
                .encode(v, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenTimedDistributionEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.timestamp = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.distributions.push(exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributionEntry
                        .decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenTimedDistributionEntry
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenTimedDistributionEntry();
        message.timestamp = (_a = object.timestamp) !== null && _a !== void 0 ? _a : "0";
        message.distributions = ((_b = object.distributions) === null || _b === void 0 ? void 0 : _b.map(function (e) {
            return exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributionEntry
                .fromPartial(e);
        })) || [];
        return message;
    },
};
function createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributions() {
    return { tokenDistributions: [] };
}
exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributions = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.tokenDistributions; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenTimedDistributionEntry
                .encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributions();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenDistributions.push(exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenTimedDistributionEntry
                        .decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributions
            .fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenDistributions();
        message.tokenDistributions =
            ((_a = object.tokenDistributions) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetTokenPreProgrammedDistributionsResponse_GetTokenPreProgrammedDistributionsResponseV0_TokenTimedDistributionEntry
                    .fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetTokenTotalSupplyRequest() {
    return { v0: undefined };
}
exports.GetTokenTotalSupplyRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetTokenTotalSupplyRequest_GetTokenTotalSupplyRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenTotalSupplyRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetTokenTotalSupplyRequest_GetTokenTotalSupplyRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenTotalSupplyRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTokenTotalSupplyRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetTokenTotalSupplyRequest_GetTokenTotalSupplyRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetTokenTotalSupplyRequest_GetTokenTotalSupplyRequestV0() {
    return { tokenId: new Uint8Array(0), prove: false };
}
exports.GetTokenTotalSupplyRequest_GetTokenTotalSupplyRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        if (message.prove !== false) {
            writer.uint32(16).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenTotalSupplyRequest_GetTokenTotalSupplyRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenTotalSupplyRequest_GetTokenTotalSupplyRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetTokenTotalSupplyRequest_GetTokenTotalSupplyRequestV0();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.prove = (_b = object.prove) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetTokenTotalSupplyResponse() {
    return { v0: undefined };
}
exports.GetTokenTotalSupplyResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenTotalSupplyResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenTotalSupplyResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTokenTotalSupplyResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0() {
    return { tokenTotalSupply: undefined, proof: undefined, metadata: undefined };
}
exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenTotalSupply !== undefined) {
            exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0_TokenTotalSupplyEntry.encode(message.tokenTotalSupply, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenTotalSupply = exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0_TokenTotalSupplyEntry
                        .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0();
        message.tokenTotalSupply = (object.tokenTotalSupply !== undefined && object.tokenTotalSupply !== null)
            ? exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0_TokenTotalSupplyEntry.fromPartial(object.tokenTotalSupply)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0_TokenTotalSupplyEntry() {
    return { tokenId: new Uint8Array(0), totalAggregatedAmountInUserAccounts: "0", totalSystemAmount: "0" };
}
exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0_TokenTotalSupplyEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenId.length !== 0) {
            writer.uint32(10).bytes(message.tokenId);
        }
        if (message.totalAggregatedAmountInUserAccounts !== "0") {
            writer.uint32(16).uint64(message.totalAggregatedAmountInUserAccounts);
        }
        if (message.totalSystemAmount !== "0") {
            writer.uint32(24).uint64(message.totalSystemAmount);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0_TokenTotalSupplyEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.totalAggregatedAmountInUserAccounts = reader.uint64().toString();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.totalSystemAmount = reader.uint64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0_TokenTotalSupplyEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetTokenTotalSupplyResponse_GetTokenTotalSupplyResponseV0_TokenTotalSupplyEntry();
        message.tokenId = (_a = object.tokenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.totalAggregatedAmountInUserAccounts = (_b = object.totalAggregatedAmountInUserAccounts) !== null && _b !== void 0 ? _b : "0";
        message.totalSystemAmount = (_c = object.totalSystemAmount) !== null && _c !== void 0 ? _c : "0";
        return message;
    },
};
function createBaseGetGroupInfoRequest() {
    return { v0: undefined };
}
exports.GetGroupInfoRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetGroupInfoRequest_GetGroupInfoRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfoRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetGroupInfoRequest_GetGroupInfoRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfoRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupInfoRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetGroupInfoRequest_GetGroupInfoRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetGroupInfoRequest_GetGroupInfoRequestV0() {
    return { contractId: new Uint8Array(0), groupContractPosition: 0, prove: false };
}
exports.GetGroupInfoRequest_GetGroupInfoRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        if (message.groupContractPosition !== 0) {
            writer.uint32(16).uint32(message.groupContractPosition);
        }
        if (message.prove !== false) {
            writer.uint32(24).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfoRequest_GetGroupInfoRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.groupContractPosition = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfoRequest_GetGroupInfoRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetGroupInfoRequest_GetGroupInfoRequestV0();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.groupContractPosition = (_b = object.groupContractPosition) !== null && _b !== void 0 ? _b : 0;
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetGroupInfoResponse() {
    return { v0: undefined };
}
exports.GetGroupInfoResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetGroupInfoResponse_GetGroupInfoResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfoResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetGroupInfoResponse_GetGroupInfoResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfoResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupInfoResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetGroupInfoResponse_GetGroupInfoResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetGroupInfoResponse_GetGroupInfoResponseV0() {
    return { groupInfo: undefined, proof: undefined, metadata: undefined };
}
exports.GetGroupInfoResponse_GetGroupInfoResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.groupInfo !== undefined) {
            exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfo.encode(message.groupInfo, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(34).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfoResponse_GetGroupInfoResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.groupInfo = exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfo.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfoResponse_GetGroupInfoResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupInfoResponse_GetGroupInfoResponseV0();
        message.groupInfo = (object.groupInfo !== undefined && object.groupInfo !== null)
            ? exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfo.fromPartial(object.groupInfo)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetGroupInfoResponse_GetGroupInfoResponseV0_GroupMemberEntry() {
    return { memberId: new Uint8Array(0), power: 0 };
}
exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupMemberEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.memberId.length !== 0) {
            writer.uint32(10).bytes(message.memberId);
        }
        if (message.power !== 0) {
            writer.uint32(16).uint32(message.power);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfoResponse_GetGroupInfoResponseV0_GroupMemberEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.memberId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.power = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupMemberEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupInfoResponse_GetGroupInfoResponseV0_GroupMemberEntry();
        message.memberId = (_a = object.memberId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.power = (_b = object.power) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfoEntry() {
    return { members: [], groupRequiredPower: 0 };
}
exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfoEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.members; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupMemberEntry.encode(v, writer.uint32(10).fork()).join();
        }
        if (message.groupRequiredPower !== 0) {
            writer.uint32(16).uint32(message.groupRequiredPower);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfoEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.members.push(exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupMemberEntry.decode(reader, reader.uint32()));
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.groupRequiredPower = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfoEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfoEntry();
        message.members =
            ((_a = object.members) === null || _a === void 0 ? void 0 : _a.map(function (e) { return exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupMemberEntry.fromPartial(e); })) || [];
        message.groupRequiredPower = (_b = object.groupRequiredPower) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfo() {
    return { groupInfo: undefined };
}
exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.groupInfo !== undefined) {
            exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfoEntry.encode(message.groupInfo, writer.uint32(10).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.groupInfo = exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfoEntry.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfo.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfo();
        message.groupInfo = (object.groupInfo !== undefined && object.groupInfo !== null)
            ? exports.GetGroupInfoResponse_GetGroupInfoResponseV0_GroupInfoEntry.fromPartial(object.groupInfo)
            : undefined;
        return message;
    },
};
function createBaseGetGroupInfosRequest() {
    return { v0: undefined };
}
exports.GetGroupInfosRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetGroupInfosRequest_GetGroupInfosRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfosRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetGroupInfosRequest_GetGroupInfosRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfosRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupInfosRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetGroupInfosRequest_GetGroupInfosRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetGroupInfosRequest_StartAtGroupContractPosition() {
    return { startGroupContractPosition: 0, startGroupContractPositionIncluded: false };
}
exports.GetGroupInfosRequest_StartAtGroupContractPosition = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startGroupContractPosition !== 0) {
            writer.uint32(8).uint32(message.startGroupContractPosition);
        }
        if (message.startGroupContractPositionIncluded !== false) {
            writer.uint32(16).bool(message.startGroupContractPositionIncluded);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfosRequest_StartAtGroupContractPosition();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.startGroupContractPosition = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.startGroupContractPositionIncluded = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfosRequest_StartAtGroupContractPosition.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupInfosRequest_StartAtGroupContractPosition();
        message.startGroupContractPosition = (_a = object.startGroupContractPosition) !== null && _a !== void 0 ? _a : 0;
        message.startGroupContractPositionIncluded = (_b = object.startGroupContractPositionIncluded) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetGroupInfosRequest_GetGroupInfosRequestV0() {
    return { contractId: new Uint8Array(0), startAtGroupContractPosition: undefined, count: undefined, prove: false };
}
exports.GetGroupInfosRequest_GetGroupInfosRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        if (message.startAtGroupContractPosition !== undefined) {
            exports.GetGroupInfosRequest_StartAtGroupContractPosition.encode(message.startAtGroupContractPosition, writer.uint32(18).fork()).join();
        }
        if (message.count !== undefined) {
            writer.uint32(24).uint32(message.count);
        }
        if (message.prove !== false) {
            writer.uint32(32).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfosRequest_GetGroupInfosRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.startAtGroupContractPosition = exports.GetGroupInfosRequest_StartAtGroupContractPosition.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.count = reader.uint32();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfosRequest_GetGroupInfosRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetGroupInfosRequest_GetGroupInfosRequestV0();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.startAtGroupContractPosition =
            (object.startAtGroupContractPosition !== undefined && object.startAtGroupContractPosition !== null)
                ? exports.GetGroupInfosRequest_StartAtGroupContractPosition.fromPartial(object.startAtGroupContractPosition)
                : undefined;
        message.count = (_b = object.count) !== null && _b !== void 0 ? _b : undefined;
        message.prove = (_c = object.prove) !== null && _c !== void 0 ? _c : false;
        return message;
    },
};
function createBaseGetGroupInfosResponse() {
    return { v0: undefined };
}
exports.GetGroupInfosResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetGroupInfosResponse_GetGroupInfosResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfosResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetGroupInfosResponse_GetGroupInfosResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfosResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupInfosResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetGroupInfosResponse_GetGroupInfosResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetGroupInfosResponse_GetGroupInfosResponseV0() {
    return { groupInfos: undefined, proof: undefined, metadata: undefined };
}
exports.GetGroupInfosResponse_GetGroupInfosResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.groupInfos !== undefined) {
            exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupInfos.encode(message.groupInfos, writer.uint32(10).fork())
                .join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(34).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfosResponse_GetGroupInfosResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.groupInfos = exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupInfos.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfosResponse_GetGroupInfosResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupInfosResponse_GetGroupInfosResponseV0();
        message.groupInfos = (object.groupInfos !== undefined && object.groupInfos !== null)
            ? exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupInfos.fromPartial(object.groupInfos)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null)
            ? exports.Proof.fromPartial(object.proof)
            : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetGroupInfosResponse_GetGroupInfosResponseV0_GroupMemberEntry() {
    return { memberId: new Uint8Array(0), power: 0 };
}
exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupMemberEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.memberId.length !== 0) {
            writer.uint32(10).bytes(message.memberId);
        }
        if (message.power !== 0) {
            writer.uint32(16).uint32(message.power);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfosResponse_GetGroupInfosResponseV0_GroupMemberEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.memberId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.power = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupMemberEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupInfosResponse_GetGroupInfosResponseV0_GroupMemberEntry();
        message.memberId = (_a = object.memberId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.power = (_b = object.power) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetGroupInfosResponse_GetGroupInfosResponseV0_GroupPositionInfoEntry() {
    return { groupContractPosition: 0, members: [], groupRequiredPower: 0 };
}
exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupPositionInfoEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.groupContractPosition !== 0) {
            writer.uint32(8).uint32(message.groupContractPosition);
        }
        for (var _i = 0, _a = message.members; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupMemberEntry.encode(v, writer.uint32(18).fork()).join();
        }
        if (message.groupRequiredPower !== 0) {
            writer.uint32(24).uint32(message.groupRequiredPower);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfosResponse_GetGroupInfosResponseV0_GroupPositionInfoEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.groupContractPosition = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.members.push(exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupMemberEntry.decode(reader, reader.uint32()));
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.groupRequiredPower = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupPositionInfoEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetGroupInfosResponse_GetGroupInfosResponseV0_GroupPositionInfoEntry();
        message.groupContractPosition = (_a = object.groupContractPosition) !== null && _a !== void 0 ? _a : 0;
        message.members =
            ((_b = object.members) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupMemberEntry.fromPartial(e); })) || [];
        message.groupRequiredPower = (_c = object.groupRequiredPower) !== null && _c !== void 0 ? _c : 0;
        return message;
    },
};
function createBaseGetGroupInfosResponse_GetGroupInfosResponseV0_GroupInfos() {
    return { groupInfos: [] };
}
exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupInfos = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.groupInfos; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupPositionInfoEntry.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupInfosResponse_GetGroupInfosResponseV0_GroupInfos();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.groupInfos.push(exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupPositionInfoEntry.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupInfos.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetGroupInfosResponse_GetGroupInfosResponseV0_GroupInfos();
        message.groupInfos =
            ((_a = object.groupInfos) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetGroupInfosResponse_GetGroupInfosResponseV0_GroupPositionInfoEntry.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetGroupActionsRequest() {
    return { v0: undefined };
}
exports.GetGroupActionsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetGroupActionsRequest_GetGroupActionsRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetGroupActionsRequest_GetGroupActionsRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupActionsRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetGroupActionsRequest_GetGroupActionsRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionsRequest_StartAtActionId() {
    return { startActionId: new Uint8Array(0), startActionIdIncluded: false };
}
exports.GetGroupActionsRequest_StartAtActionId = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.startActionId.length !== 0) {
            writer.uint32(10).bytes(message.startActionId);
        }
        if (message.startActionIdIncluded !== false) {
            writer.uint32(16).bool(message.startActionIdIncluded);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsRequest_StartAtActionId();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.startActionId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.startActionIdIncluded = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsRequest_StartAtActionId.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupActionsRequest_StartAtActionId();
        message.startActionId = (_a = object.startActionId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.startActionIdIncluded = (_b = object.startActionIdIncluded) !== null && _b !== void 0 ? _b : false;
        return message;
    },
};
function createBaseGetGroupActionsRequest_GetGroupActionsRequestV0() {
    return {
        contractId: new Uint8Array(0),
        groupContractPosition: 0,
        status: 0,
        startAtActionId: undefined,
        count: undefined,
        prove: false,
    };
}
exports.GetGroupActionsRequest_GetGroupActionsRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        if (message.groupContractPosition !== 0) {
            writer.uint32(16).uint32(message.groupContractPosition);
        }
        if (message.status !== 0) {
            writer.uint32(24).int32(message.status);
        }
        if (message.startAtActionId !== undefined) {
            exports.GetGroupActionsRequest_StartAtActionId.encode(message.startAtActionId, writer.uint32(34).fork()).join();
        }
        if (message.count !== undefined) {
            writer.uint32(40).uint32(message.count);
        }
        if (message.prove !== false) {
            writer.uint32(48).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsRequest_GetGroupActionsRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.groupContractPosition = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.status = reader.int32();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.startAtActionId = exports.GetGroupActionsRequest_StartAtActionId.decode(reader, reader.uint32());
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.count = reader.uint32();
                    continue;
                }
                case 6: {
                    if (tag !== 48) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsRequest_GetGroupActionsRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseGetGroupActionsRequest_GetGroupActionsRequestV0();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.groupContractPosition = (_b = object.groupContractPosition) !== null && _b !== void 0 ? _b : 0;
        message.status = (_c = object.status) !== null && _c !== void 0 ? _c : 0;
        message.startAtActionId = (object.startAtActionId !== undefined && object.startAtActionId !== null)
            ? exports.GetGroupActionsRequest_StartAtActionId.fromPartial(object.startAtActionId)
            : undefined;
        message.count = (_d = object.count) !== null && _d !== void 0 ? _d : undefined;
        message.prove = (_e = object.prove) !== null && _e !== void 0 ? _e : false;
        return message;
    },
};
function createBaseGetGroupActionsResponse() {
    return { v0: undefined };
}
exports.GetGroupActionsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetGroupActionsResponse_GetGroupActionsResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupActionsResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0() {
    return { groupActions: undefined, proof: undefined, metadata: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.groupActions !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActions.encode(message.groupActions, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.groupActions = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActions.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0();
        message.groupActions = (object.groupActions !== undefined && object.groupActions !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActions.fromPartial(object.groupActions)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_MintEvent() {
    return { amount: "0", recipientId: new Uint8Array(0), publicNote: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_MintEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.amount !== "0") {
            writer.uint32(8).uint64(message.amount);
        }
        if (message.recipientId.length !== 0) {
            writer.uint32(18).bytes(message.recipientId);
        }
        if (message.publicNote !== undefined) {
            writer.uint32(26).string(message.publicNote);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_MintEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.amount = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.recipientId = reader.bytes();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.publicNote = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_MintEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_MintEvent();
        message.amount = (_a = object.amount) !== null && _a !== void 0 ? _a : "0";
        message.recipientId = (_b = object.recipientId) !== null && _b !== void 0 ? _b : new Uint8Array(0);
        message.publicNote = (_c = object.publicNote) !== null && _c !== void 0 ? _c : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_BurnEvent() {
    return { amount: "0", publicNote: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_BurnEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.amount !== "0") {
            writer.uint32(8).uint64(message.amount);
        }
        if (message.publicNote !== undefined) {
            writer.uint32(18).string(message.publicNote);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_BurnEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.amount = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.publicNote = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_BurnEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_BurnEvent();
        message.amount = (_a = object.amount) !== null && _a !== void 0 ? _a : "0";
        message.publicNote = (_b = object.publicNote) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_FreezeEvent() {
    return { frozenId: new Uint8Array(0), publicNote: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_FreezeEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.frozenId.length !== 0) {
            writer.uint32(10).bytes(message.frozenId);
        }
        if (message.publicNote !== undefined) {
            writer.uint32(18).string(message.publicNote);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_FreezeEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.frozenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.publicNote = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_FreezeEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_FreezeEvent();
        message.frozenId = (_a = object.frozenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.publicNote = (_b = object.publicNote) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_UnfreezeEvent() {
    return { frozenId: new Uint8Array(0), publicNote: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_UnfreezeEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.frozenId.length !== 0) {
            writer.uint32(10).bytes(message.frozenId);
        }
        if (message.publicNote !== undefined) {
            writer.uint32(18).string(message.publicNote);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_UnfreezeEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.frozenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.publicNote = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_UnfreezeEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_UnfreezeEvent();
        message.frozenId = (_a = object.frozenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.publicNote = (_b = object.publicNote) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_DestroyFrozenFundsEvent() {
    return { frozenId: new Uint8Array(0), amount: "0", publicNote: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DestroyFrozenFundsEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.frozenId.length !== 0) {
            writer.uint32(10).bytes(message.frozenId);
        }
        if (message.amount !== "0") {
            writer.uint32(16).uint64(message.amount);
        }
        if (message.publicNote !== undefined) {
            writer.uint32(26).string(message.publicNote);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_DestroyFrozenFundsEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.frozenId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.amount = reader.uint64().toString();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.publicNote = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DestroyFrozenFundsEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_DestroyFrozenFundsEvent();
        message.frozenId = (_a = object.frozenId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.amount = (_b = object.amount) !== null && _b !== void 0 ? _b : "0";
        message.publicNote = (_c = object.publicNote) !== null && _c !== void 0 ? _c : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_SharedEncryptedNote() {
    return { senderKeyIndex: 0, recipientKeyIndex: 0, encryptedData: new Uint8Array(0) };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_SharedEncryptedNote = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.senderKeyIndex !== 0) {
            writer.uint32(8).uint32(message.senderKeyIndex);
        }
        if (message.recipientKeyIndex !== 0) {
            writer.uint32(16).uint32(message.recipientKeyIndex);
        }
        if (message.encryptedData.length !== 0) {
            writer.uint32(26).bytes(message.encryptedData);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_SharedEncryptedNote();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.senderKeyIndex = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.recipientKeyIndex = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.encryptedData = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_SharedEncryptedNote.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_SharedEncryptedNote();
        message.senderKeyIndex = (_a = object.senderKeyIndex) !== null && _a !== void 0 ? _a : 0;
        message.recipientKeyIndex = (_b = object.recipientKeyIndex) !== null && _b !== void 0 ? _b : 0;
        message.encryptedData = (_c = object.encryptedData) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_PersonalEncryptedNote() {
    return { rootEncryptionKeyIndex: 0, derivationEncryptionKeyIndex: 0, encryptedData: new Uint8Array(0) };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_PersonalEncryptedNote = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.rootEncryptionKeyIndex !== 0) {
            writer.uint32(8).uint32(message.rootEncryptionKeyIndex);
        }
        if (message.derivationEncryptionKeyIndex !== 0) {
            writer.uint32(16).uint32(message.derivationEncryptionKeyIndex);
        }
        if (message.encryptedData.length !== 0) {
            writer.uint32(26).bytes(message.encryptedData);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_PersonalEncryptedNote();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.rootEncryptionKeyIndex = reader.uint32();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.derivationEncryptionKeyIndex = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.encryptedData = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_PersonalEncryptedNote.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_PersonalEncryptedNote();
        message.rootEncryptionKeyIndex = (_a = object.rootEncryptionKeyIndex) !== null && _a !== void 0 ? _a : 0;
        message.derivationEncryptionKeyIndex = (_b = object.derivationEncryptionKeyIndex) !== null && _b !== void 0 ? _b : 0;
        message.encryptedData = (_c = object.encryptedData) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent() {
    return { actionType: 0, publicNote: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.actionType !== 0) {
            writer.uint32(8).int32(message.actionType);
        }
        if (message.publicNote !== undefined) {
            writer.uint32(18).string(message.publicNote);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.actionType = reader.int32();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.publicNote = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent();
        message.actionType = (_a = object.actionType) !== null && _a !== void 0 ? _a : 0;
        message.publicNote = (_b = object.publicNote) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_TokenConfigUpdateEvent() {
    return { tokenConfigUpdateItem: new Uint8Array(0), publicNote: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenConfigUpdateEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenConfigUpdateItem.length !== 0) {
            writer.uint32(10).bytes(message.tokenConfigUpdateItem);
        }
        if (message.publicNote !== undefined) {
            writer.uint32(18).string(message.publicNote);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_TokenConfigUpdateEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenConfigUpdateItem = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.publicNote = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenConfigUpdateEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_TokenConfigUpdateEvent();
        message.tokenConfigUpdateItem = (_a = object.tokenConfigUpdateItem) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.publicNote = (_b = object.publicNote) !== null && _b !== void 0 ? _b : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEvent() {
    return { tokenEvent: undefined, documentEvent: undefined, contractEvent: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.tokenEvent !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenEvent.encode(message.tokenEvent, writer.uint32(10).fork())
                .join();
        }
        if (message.documentEvent !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentEvent.encode(message.documentEvent, writer.uint32(18).fork()).join();
        }
        if (message.contractEvent !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractEvent.encode(message.contractEvent, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.tokenEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenEvent.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.documentEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentEvent.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.contractEvent = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractEvent.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEvent();
        message.tokenEvent = (object.tokenEvent !== undefined && object.tokenEvent !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenEvent.fromPartial(object.tokenEvent)
            : undefined;
        message.documentEvent = (object.documentEvent !== undefined && object.documentEvent !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentEvent.fromPartial(object.documentEvent)
            : undefined;
        message.contractEvent = (object.contractEvent !== undefined && object.contractEvent !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractEvent.fromPartial(object.contractEvent)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_DocumentEvent() {
    return { create: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.create !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentCreateEvent.encode(message.create, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_DocumentEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.create = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentCreateEvent.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_DocumentEvent();
        message.create = (object.create !== undefined && object.create !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentCreateEvent.fromPartial(object.create)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_DocumentCreateEvent() {
    return { createdDocument: new Uint8Array(0) };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentCreateEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.createdDocument.length !== 0) {
            writer.uint32(10).bytes(message.createdDocument);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_DocumentCreateEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.createdDocument = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DocumentCreateEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_DocumentCreateEvent();
        message.createdDocument = (_a = object.createdDocument) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_ContractUpdateEvent() {
    return { updatedContract: new Uint8Array(0) };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractUpdateEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.updatedContract.length !== 0) {
            writer.uint32(10).bytes(message.updatedContract);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_ContractUpdateEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.updatedContract = reader.bytes();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractUpdateEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_ContractUpdateEvent();
        message.updatedContract = (_a = object.updatedContract) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_ContractEvent() {
    return { update: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.update !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractUpdateEvent.encode(message.update, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_ContractEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.update = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractUpdateEvent.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_ContractEvent();
        message.update = (object.update !== undefined && object.update !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_ContractUpdateEvent.fromPartial(object.update)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_TokenEvent() {
    return {
        mint: undefined,
        burn: undefined,
        freeze: undefined,
        unfreeze: undefined,
        destroyFrozenFunds: undefined,
        emergencyAction: undefined,
        tokenConfigUpdate: undefined,
    };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.mint !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_MintEvent.encode(message.mint, writer.uint32(10).fork()).join();
        }
        if (message.burn !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_BurnEvent.encode(message.burn, writer.uint32(18).fork()).join();
        }
        if (message.freeze !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_FreezeEvent.encode(message.freeze, writer.uint32(26).fork())
                .join();
        }
        if (message.unfreeze !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_UnfreezeEvent.encode(message.unfreeze, writer.uint32(34).fork())
                .join();
        }
        if (message.destroyFrozenFunds !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DestroyFrozenFundsEvent.encode(message.destroyFrozenFunds, writer.uint32(42).fork()).join();
        }
        if (message.emergencyAction !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent.encode(message.emergencyAction, writer.uint32(50).fork()).join();
        }
        if (message.tokenConfigUpdate !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenConfigUpdateEvent.encode(message.tokenConfigUpdate, writer.uint32(58).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_TokenEvent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.mint = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_MintEvent.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.burn = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_BurnEvent.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.freeze = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_FreezeEvent.decode(reader, reader.uint32());
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.unfreeze = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_UnfreezeEvent.decode(reader, reader.uint32());
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.destroyFrozenFunds = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DestroyFrozenFundsEvent.decode(reader, reader.uint32());
                    continue;
                }
                case 6: {
                    if (tag !== 50) {
                        break;
                    }
                    message.emergencyAction = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent.decode(reader, reader.uint32());
                    continue;
                }
                case 7: {
                    if (tag !== 58) {
                        break;
                    }
                    message.tokenConfigUpdate = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenConfigUpdateEvent.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenEvent.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_TokenEvent();
        message.mint = (object.mint !== undefined && object.mint !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_MintEvent.fromPartial(object.mint)
            : undefined;
        message.burn = (object.burn !== undefined && object.burn !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_BurnEvent.fromPartial(object.burn)
            : undefined;
        message.freeze = (object.freeze !== undefined && object.freeze !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_FreezeEvent.fromPartial(object.freeze)
            : undefined;
        message.unfreeze = (object.unfreeze !== undefined && object.unfreeze !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_UnfreezeEvent.fromPartial(object.unfreeze)
            : undefined;
        message.destroyFrozenFunds = (object.destroyFrozenFunds !== undefined && object.destroyFrozenFunds !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_DestroyFrozenFundsEvent.fromPartial(object.destroyFrozenFunds)
            : undefined;
        message.emergencyAction = (object.emergencyAction !== undefined && object.emergencyAction !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_EmergencyActionEvent.fromPartial(object.emergencyAction)
            : undefined;
        message.tokenConfigUpdate = (object.tokenConfigUpdate !== undefined && object.tokenConfigUpdate !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_TokenConfigUpdateEvent.fromPartial(object.tokenConfigUpdate)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEntry() {
    return { actionId: new Uint8Array(0), event: undefined };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEntry = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.actionId.length !== 0) {
            writer.uint32(10).bytes(message.actionId);
        }
        if (message.event !== undefined) {
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEvent.encode(message.event, writer.uint32(18).fork())
                .join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEntry();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.actionId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.event = exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEvent.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEntry.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEntry();
        message.actionId = (_a = object.actionId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.event = (object.event !== undefined && object.event !== null)
            ? exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEvent.fromPartial(object.event)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_GroupActions() {
    return { groupActions: [] };
}
exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActions = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.groupActions; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEntry.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_GroupActions();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.groupActions.push(exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEntry.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActions.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetGroupActionsResponse_GetGroupActionsResponseV0_GroupActions();
        message.groupActions =
            ((_a = object.groupActions) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetGroupActionsResponse_GetGroupActionsResponseV0_GroupActionEntry.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseGetGroupActionSignersRequest() {
    return { v0: undefined };
}
exports.GetGroupActionSignersRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetGroupActionSignersRequest_GetGroupActionSignersRequestV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionSignersRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetGroupActionSignersRequest_GetGroupActionSignersRequestV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionSignersRequest.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupActionSignersRequest();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetGroupActionSignersRequest_GetGroupActionSignersRequestV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionSignersRequest_GetGroupActionSignersRequestV0() {
    return {
        contractId: new Uint8Array(0),
        groupContractPosition: 0,
        status: 0,
        actionId: new Uint8Array(0),
        prove: false,
    };
}
exports.GetGroupActionSignersRequest_GetGroupActionSignersRequestV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.contractId.length !== 0) {
            writer.uint32(10).bytes(message.contractId);
        }
        if (message.groupContractPosition !== 0) {
            writer.uint32(16).uint32(message.groupContractPosition);
        }
        if (message.status !== 0) {
            writer.uint32(24).int32(message.status);
        }
        if (message.actionId.length !== 0) {
            writer.uint32(34).bytes(message.actionId);
        }
        if (message.prove !== false) {
            writer.uint32(40).bool(message.prove);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionSignersRequest_GetGroupActionSignersRequestV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.contractId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.groupContractPosition = reader.uint32();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.status = reader.int32();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.actionId = reader.bytes();
                    continue;
                }
                case 5: {
                    if (tag !== 40) {
                        break;
                    }
                    message.prove = reader.bool();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionSignersRequest_GetGroupActionSignersRequestV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseGetGroupActionSignersRequest_GetGroupActionSignersRequestV0();
        message.contractId = (_a = object.contractId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.groupContractPosition = (_b = object.groupContractPosition) !== null && _b !== void 0 ? _b : 0;
        message.status = (_c = object.status) !== null && _c !== void 0 ? _c : 0;
        message.actionId = (_d = object.actionId) !== null && _d !== void 0 ? _d : new Uint8Array(0);
        message.prove = (_e = object.prove) !== null && _e !== void 0 ? _e : false;
        return message;
    },
};
function createBaseGetGroupActionSignersResponse() {
    return { v0: undefined };
}
exports.GetGroupActionSignersResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.v0 !== undefined) {
            exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0.encode(message.v0, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionSignersResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.v0 = exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionSignersResponse.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupActionSignersResponse();
        message.v0 = (object.v0 !== undefined && object.v0 !== null)
            ? exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0.fromPartial(object.v0)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionSignersResponse_GetGroupActionSignersResponseV0() {
    return { groupActionSigners: undefined, proof: undefined, metadata: undefined };
}
exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0 = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.groupActionSigners !== undefined) {
            exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigners.encode(message.groupActionSigners, writer.uint32(10).fork()).join();
        }
        if (message.proof !== undefined) {
            exports.Proof.encode(message.proof, writer.uint32(18).fork()).join();
        }
        if (message.metadata !== undefined) {
            exports.ResponseMetadata.encode(message.metadata, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionSignersResponse_GetGroupActionSignersResponseV0();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.groupActionSigners = exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigners
                        .decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.proof = exports.Proof.decode(reader, reader.uint32());
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.metadata = exports.ResponseMetadata.decode(reader, reader.uint32());
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var message = createBaseGetGroupActionSignersResponse_GetGroupActionSignersResponseV0();
        message.groupActionSigners = (object.groupActionSigners !== undefined && object.groupActionSigners !== null)
            ? exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigners.fromPartial(object.groupActionSigners)
            : undefined;
        message.proof = (object.proof !== undefined && object.proof !== null) ? exports.Proof.fromPartial(object.proof) : undefined;
        message.metadata = (object.metadata !== undefined && object.metadata !== null)
            ? exports.ResponseMetadata.fromPartial(object.metadata)
            : undefined;
        return message;
    },
};
function createBaseGetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigner() {
    return { signerId: new Uint8Array(0), power: 0 };
}
exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigner = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.signerId.length !== 0) {
            writer.uint32(10).bytes(message.signerId);
        }
        if (message.power !== 0) {
            writer.uint32(16).uint32(message.power);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigner();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.signerId = reader.bytes();
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.power = reader.uint32();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigner.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b;
        var message = createBaseGetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigner();
        message.signerId = (_a = object.signerId) !== null && _a !== void 0 ? _a : new Uint8Array(0);
        message.power = (_b = object.power) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseGetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigners() {
    return { signers: [] };
}
exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigners = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        for (var _i = 0, _a = message.signers; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigner.encode(v, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigners();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.signers.push(exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigner.decode(reader, reader.uint32()));
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigners.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a;
        var message = createBaseGetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigners();
        message.signers =
            ((_a = object.signers) === null || _a === void 0 ? void 0 : _a.map(function (e) {
                return exports.GetGroupActionSignersResponse_GetGroupActionSignersResponseV0_GroupActionSigner.fromPartial(e);
            })) || [];
        return message;
    },
};
function createBaseStateId() {
    return { appVersion: "0", height: "0", appHash: new Uint8Array(0), coreChainLockedHeight: 0, time: "0" };
}
exports.StateId = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.appVersion !== "0") {
            writer.uint32(9).fixed64(message.appVersion);
        }
        if (message.height !== "0") {
            writer.uint32(17).fixed64(message.height);
        }
        if (message.appHash.length !== 0) {
            writer.uint32(26).bytes(message.appHash);
        }
        if (message.coreChainLockedHeight !== 0) {
            writer.uint32(37).fixed32(message.coreChainLockedHeight);
        }
        if (message.time !== "0") {
            writer.uint32(41).fixed64(message.time);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseStateId();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 9) {
                        break;
                    }
                    message.appVersion = reader.fixed64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 17) {
                        break;
                    }
                    message.height = reader.fixed64().toString();
                    continue;
                }
                case 3: {
                    if (tag !== 26) {
                        break;
                    }
                    message.appHash = reader.bytes();
                    continue;
                }
                case 4: {
                    if (tag !== 37) {
                        break;
                    }
                    message.coreChainLockedHeight = reader.fixed32();
                    continue;
                }
                case 5: {
                    if (tag !== 41) {
                        break;
                    }
                    message.time = reader.fixed64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.StateId.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseStateId();
        message.appVersion = (_a = object.appVersion) !== null && _a !== void 0 ? _a : "0";
        message.height = (_b = object.height) !== null && _b !== void 0 ? _b : "0";
        message.appHash = (_c = object.appHash) !== null && _c !== void 0 ? _c : new Uint8Array(0);
        message.coreChainLockedHeight = (_d = object.coreChainLockedHeight) !== null && _d !== void 0 ? _d : 0;
        message.time = (_e = object.time) !== null && _e !== void 0 ? _e : "0";
        return message;
    },
};
function createBaseCanonicalVote() {
    return { type: 0, height: "0", round: "0", blockId: new Uint8Array(0), stateId: new Uint8Array(0), chainId: "" };
}
exports.CanonicalVote = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = new wire_1.BinaryWriter(); }
        if (message.type !== 0) {
            writer.uint32(8).int32(message.type);
        }
        if (message.height !== "0") {
            writer.uint32(17).sfixed64(message.height);
        }
        if (message.round !== "0") {
            writer.uint32(25).sfixed64(message.round);
        }
        if (message.blockId.length !== 0) {
            writer.uint32(34).bytes(message.blockId);
        }
        if (message.stateId.length !== 0) {
            writer.uint32(42).bytes(message.stateId);
        }
        if (message.chainId !== "") {
            writer.uint32(794).string(message.chainId);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseCanonicalVote();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.type = reader.int32();
                    continue;
                }
                case 2: {
                    if (tag !== 17) {
                        break;
                    }
                    message.height = reader.sfixed64().toString();
                    continue;
                }
                case 3: {
                    if (tag !== 25) {
                        break;
                    }
                    message.round = reader.sfixed64().toString();
                    continue;
                }
                case 4: {
                    if (tag !== 34) {
                        break;
                    }
                    message.blockId = reader.bytes();
                    continue;
                }
                case 5: {
                    if (tag !== 42) {
                        break;
                    }
                    message.stateId = reader.bytes();
                    continue;
                }
                case 99: {
                    if (tag !== 794) {
                        break;
                    }
                    message.chainId = reader.string();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    create: function (base) {
        return exports.CanonicalVote.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseCanonicalVote();
        message.type = (_a = object.type) !== null && _a !== void 0 ? _a : 0;
        message.height = (_b = object.height) !== null && _b !== void 0 ? _b : "0";
        message.round = (_c = object.round) !== null && _c !== void 0 ? _c : "0";
        message.blockId = (_d = object.blockId) !== null && _d !== void 0 ? _d : new Uint8Array(0);
        message.stateId = (_e = object.stateId) !== null && _e !== void 0 ? _e : new Uint8Array(0);
        message.chainId = (_f = object.chainId) !== null && _f !== void 0 ? _f : "";
        return message;
    },
};
exports.PlatformDefinition = {
    name: "Platform",
    fullName: "org.dash.platform.dapi.v0.Platform",
    methods: {
        broadcastStateTransition: {
            name: "broadcastStateTransition",
            requestType: exports.BroadcastStateTransitionRequest,
            requestStream: false,
            responseType: exports.BroadcastStateTransitionResponse,
            responseStream: false,
            options: {},
        },
        getIdentity: {
            name: "getIdentity",
            requestType: exports.GetIdentityRequest,
            requestStream: false,
            responseType: exports.GetIdentityResponse,
            responseStream: false,
            options: {},
        },
        getIdentityKeys: {
            name: "getIdentityKeys",
            requestType: exports.GetIdentityKeysRequest,
            requestStream: false,
            responseType: exports.GetIdentityKeysResponse,
            responseStream: false,
            options: {},
        },
        getIdentitiesContractKeys: {
            name: "getIdentitiesContractKeys",
            requestType: exports.GetIdentitiesContractKeysRequest,
            requestStream: false,
            responseType: exports.GetIdentitiesContractKeysResponse,
            responseStream: false,
            options: {},
        },
        getIdentityNonce: {
            name: "getIdentityNonce",
            requestType: exports.GetIdentityNonceRequest,
            requestStream: false,
            responseType: exports.GetIdentityNonceResponse,
            responseStream: false,
            options: {},
        },
        getIdentityContractNonce: {
            name: "getIdentityContractNonce",
            requestType: exports.GetIdentityContractNonceRequest,
            requestStream: false,
            responseType: exports.GetIdentityContractNonceResponse,
            responseStream: false,
            options: {},
        },
        getIdentityBalance: {
            name: "getIdentityBalance",
            requestType: exports.GetIdentityBalanceRequest,
            requestStream: false,
            responseType: exports.GetIdentityBalanceResponse,
            responseStream: false,
            options: {},
        },
        getIdentitiesBalances: {
            name: "getIdentitiesBalances",
            requestType: exports.GetIdentitiesBalancesRequest,
            requestStream: false,
            responseType: exports.GetIdentitiesBalancesResponse,
            responseStream: false,
            options: {},
        },
        getIdentityBalanceAndRevision: {
            name: "getIdentityBalanceAndRevision",
            requestType: exports.GetIdentityBalanceAndRevisionRequest,
            requestStream: false,
            responseType: exports.GetIdentityBalanceAndRevisionResponse,
            responseStream: false,
            options: {},
        },
        getEvonodesProposedEpochBlocksByIds: {
            name: "getEvonodesProposedEpochBlocksByIds",
            requestType: exports.GetEvonodesProposedEpochBlocksByIdsRequest,
            requestStream: false,
            responseType: exports.GetEvonodesProposedEpochBlocksResponse,
            responseStream: false,
            options: {},
        },
        getEvonodesProposedEpochBlocksByRange: {
            name: "getEvonodesProposedEpochBlocksByRange",
            requestType: exports.GetEvonodesProposedEpochBlocksByRangeRequest,
            requestStream: false,
            responseType: exports.GetEvonodesProposedEpochBlocksResponse,
            responseStream: false,
            options: {},
        },
        getProofs: {
            name: "getProofs",
            requestType: exports.GetProofsRequest,
            requestStream: false,
            responseType: exports.GetProofsResponse,
            responseStream: false,
            options: {},
        },
        getDataContract: {
            name: "getDataContract",
            requestType: exports.GetDataContractRequest,
            requestStream: false,
            responseType: exports.GetDataContractResponse,
            responseStream: false,
            options: {},
        },
        getDataContractHistory: {
            name: "getDataContractHistory",
            requestType: exports.GetDataContractHistoryRequest,
            requestStream: false,
            responseType: exports.GetDataContractHistoryResponse,
            responseStream: false,
            options: {},
        },
        getDataContracts: {
            name: "getDataContracts",
            requestType: exports.GetDataContractsRequest,
            requestStream: false,
            responseType: exports.GetDataContractsResponse,
            responseStream: false,
            options: {},
        },
        getDocuments: {
            name: "getDocuments",
            requestType: exports.GetDocumentsRequest,
            requestStream: false,
            responseType: exports.GetDocumentsResponse,
            responseStream: false,
            options: {},
        },
        getIdentityByPublicKeyHash: {
            name: "getIdentityByPublicKeyHash",
            requestType: exports.GetIdentityByPublicKeyHashRequest,
            requestStream: false,
            responseType: exports.GetIdentityByPublicKeyHashResponse,
            responseStream: false,
            options: {},
        },
        waitForStateTransitionResult: {
            name: "waitForStateTransitionResult",
            requestType: exports.WaitForStateTransitionResultRequest,
            requestStream: false,
            responseType: exports.WaitForStateTransitionResultResponse,
            responseStream: false,
            options: {},
        },
        getConsensusParams: {
            name: "getConsensusParams",
            requestType: exports.GetConsensusParamsRequest,
            requestStream: false,
            responseType: exports.GetConsensusParamsResponse,
            responseStream: false,
            options: {},
        },
        getProtocolVersionUpgradeState: {
            name: "getProtocolVersionUpgradeState",
            requestType: exports.GetProtocolVersionUpgradeStateRequest,
            requestStream: false,
            responseType: exports.GetProtocolVersionUpgradeStateResponse,
            responseStream: false,
            options: {},
        },
        getProtocolVersionUpgradeVoteStatus: {
            name: "getProtocolVersionUpgradeVoteStatus",
            requestType: exports.GetProtocolVersionUpgradeVoteStatusRequest,
            requestStream: false,
            responseType: exports.GetProtocolVersionUpgradeVoteStatusResponse,
            responseStream: false,
            options: {},
        },
        getEpochsInfo: {
            name: "getEpochsInfo",
            requestType: exports.GetEpochsInfoRequest,
            requestStream: false,
            responseType: exports.GetEpochsInfoResponse,
            responseStream: false,
            options: {},
        },
        /** What votes are currently happening for a specific contested index */
        getContestedResources: {
            name: "getContestedResources",
            requestType: exports.GetContestedResourcesRequest,
            requestStream: false,
            responseType: exports.GetContestedResourcesResponse,
            responseStream: false,
            options: {},
        },
        /** What's the state of a contested resource vote? (ie who is winning?) */
        getContestedResourceVoteState: {
            name: "getContestedResourceVoteState",
            requestType: exports.GetContestedResourceVoteStateRequest,
            requestStream: false,
            responseType: exports.GetContestedResourceVoteStateResponse,
            responseStream: false,
            options: {},
        },
        /** Who voted for a contested resource to go to a specific identity? */
        getContestedResourceVotersForIdentity: {
            name: "getContestedResourceVotersForIdentity",
            requestType: exports.GetContestedResourceVotersForIdentityRequest,
            requestStream: false,
            responseType: exports.GetContestedResourceVotersForIdentityResponse,
            responseStream: false,
            options: {},
        },
        /** How did an identity vote? */
        getContestedResourceIdentityVotes: {
            name: "getContestedResourceIdentityVotes",
            requestType: exports.GetContestedResourceIdentityVotesRequest,
            requestStream: false,
            responseType: exports.GetContestedResourceIdentityVotesResponse,
            responseStream: false,
            options: {},
        },
        /** What vote polls will end soon? */
        getVotePollsByEndDate: {
            name: "getVotePollsByEndDate",
            requestType: exports.GetVotePollsByEndDateRequest,
            requestStream: false,
            responseType: exports.GetVotePollsByEndDateResponse,
            responseStream: false,
            options: {},
        },
        getPrefundedSpecializedBalance: {
            name: "getPrefundedSpecializedBalance",
            requestType: exports.GetPrefundedSpecializedBalanceRequest,
            requestStream: false,
            responseType: exports.GetPrefundedSpecializedBalanceResponse,
            responseStream: false,
            options: {},
        },
        getTotalCreditsInPlatform: {
            name: "getTotalCreditsInPlatform",
            requestType: exports.GetTotalCreditsInPlatformRequest,
            requestStream: false,
            responseType: exports.GetTotalCreditsInPlatformResponse,
            responseStream: false,
            options: {},
        },
        getPathElements: {
            name: "getPathElements",
            requestType: exports.GetPathElementsRequest,
            requestStream: false,
            responseType: exports.GetPathElementsResponse,
            responseStream: false,
            options: {},
        },
        getStatus: {
            name: "getStatus",
            requestType: exports.GetStatusRequest,
            requestStream: false,
            responseType: exports.GetStatusResponse,
            responseStream: false,
            options: {},
        },
        getCurrentQuorumsInfo: {
            name: "getCurrentQuorumsInfo",
            requestType: exports.GetCurrentQuorumsInfoRequest,
            requestStream: false,
            responseType: exports.GetCurrentQuorumsInfoResponse,
            responseStream: false,
            options: {},
        },
        getIdentityTokenBalances: {
            name: "getIdentityTokenBalances",
            requestType: exports.GetIdentityTokenBalancesRequest,
            requestStream: false,
            responseType: exports.GetIdentityTokenBalancesResponse,
            responseStream: false,
            options: {},
        },
        getIdentitiesTokenBalances: {
            name: "getIdentitiesTokenBalances",
            requestType: exports.GetIdentitiesTokenBalancesRequest,
            requestStream: false,
            responseType: exports.GetIdentitiesTokenBalancesResponse,
            responseStream: false,
            options: {},
        },
        getIdentityTokenInfos: {
            name: "getIdentityTokenInfos",
            requestType: exports.GetIdentityTokenInfosRequest,
            requestStream: false,
            responseType: exports.GetIdentityTokenInfosResponse,
            responseStream: false,
            options: {},
        },
        getIdentitiesTokenInfos: {
            name: "getIdentitiesTokenInfos",
            requestType: exports.GetIdentitiesTokenInfosRequest,
            requestStream: false,
            responseType: exports.GetIdentitiesTokenInfosResponse,
            responseStream: false,
            options: {},
        },
        getTokenStatuses: {
            name: "getTokenStatuses",
            requestType: exports.GetTokenStatusesRequest,
            requestStream: false,
            responseType: exports.GetTokenStatusesResponse,
            responseStream: false,
            options: {},
        },
        getTokenPreProgrammedDistributions: {
            name: "getTokenPreProgrammedDistributions",
            requestType: exports.GetTokenPreProgrammedDistributionsRequest,
            requestStream: false,
            responseType: exports.GetTokenPreProgrammedDistributionsResponse,
            responseStream: false,
            options: {},
        },
        getTokenTotalSupply: {
            name: "getTokenTotalSupply",
            requestType: exports.GetTokenTotalSupplyRequest,
            requestStream: false,
            responseType: exports.GetTokenTotalSupplyResponse,
            responseStream: false,
            options: {},
        },
        getGroupInfo: {
            name: "getGroupInfo",
            requestType: exports.GetGroupInfoRequest,
            requestStream: false,
            responseType: exports.GetGroupInfoResponse,
            responseStream: false,
            options: {},
        },
        getGroupInfos: {
            name: "getGroupInfos",
            requestType: exports.GetGroupInfosRequest,
            requestStream: false,
            responseType: exports.GetGroupInfosResponse,
            responseStream: false,
            options: {},
        },
        getGroupActions: {
            name: "getGroupActions",
            requestType: exports.GetGroupActionsRequest,
            requestStream: false,
            responseType: exports.GetGroupActionsResponse,
            responseStream: false,
            options: {},
        },
        getGroupActionSigners: {
            name: "getGroupActionSigners",
            requestType: exports.GetGroupActionSignersRequest,
            requestStream: false,
            responseType: exports.GetGroupActionSignersResponse,
            responseStream: false,
            options: {},
        },
    },
};
